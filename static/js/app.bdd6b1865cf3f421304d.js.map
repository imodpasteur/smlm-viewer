{"version":3,"sources":["webpack:///./src/utils.js","webpack:///./src/smlmFile.js","webpack:///./src/pointCloud3D.js","webpack:///src/components/Viewer.vue","webpack:///./src/components/Viewer.vue?a2cd","webpack:///./src/components/Viewer.vue","webpack:///./src/router/index.js","webpack:///src/components/FAQ.vue","webpack:///./src/faq.md","webpack:///./src/components/FAQ.vue?5cae","webpack:///./src/components/FAQ.vue","webpack:///./src/store.js","webpack:///src/App.vue","webpack:///./src/App.vue?2612","webpack:///./src/App.vue","webpack:///./src/main.js"],"names":["Filters","canvas","c","getContext","getImageData","width","height","pixels","filter","var_args","args","i","arguments","length","push","apply","d","data","v","offset","ratio","parseInt","min","Number","POSITIVE_INFINITY","max","NEGATIVE_INFINITY","avg","lut","hot_lut","gl","ext","prog_render_particles","FBO_particles","texture_particles","smlmFile_smlmFile","smlmFile","file","classCallCheck_default","this","manifest","JSON","parse","stringify_default","manifest_template","formats","files","channels","zipFile","uploaded","isSMLM","license","tags","citeAs","createClass_default","key","value","image_format","info","is_append","update_callback","_this","promise_default","a","resolve","reject","console","log","FR","FileReader","onload","e","img","Image","addEventListener","file_info","format","type","size","assign_default","image","name","file_name","file_size","hash","calculate_hash","pixel_size","file_hash","supported_image_formats","split","update_hash","channel","src","target","result","onerror","readAsDataURL","table_format","_this2","String","supported_text_formats","Worker","loadWorker","running","running_status","onmessage","error","terminate","loaded","tableDict","statshtml","file_info_template","rows","x","y","progress","running_progress","localization_num","toFixed","postMessage","_this3","JSZip","loadAsync","then","zip","manifest_file","async","meta_json","format_version","_ref","asyncToGenerator_default","regenerator_default","mark","_callee","_loop","file_no","wrap","_context2","prev","next","_context","resolve2","reject2","table_file","format_key","fileReader","evt","arrayBuffer","uint8Arr","Uint8Array","columns","headers","startsWith","slice","tableUint8Arrays","tableArrays","ArrayBuffer","r","tableUint8Dict","Float32Array","buffer","cn","h","replace","trim","integrity_test","readAsArrayBuffer","catch","image_file","stop","delegateYield","spark","SparkMD5","dict","frame","append","dataURI","ab","dataURItoArrayBuffer","end","byteString","atob","ia","charCodeAt","mimeString","blob","Blob","File","_this4","native_formats","extension","dtype","shape","lastModified","Date","now","dataURItoFile","manifest_","files_","generateAsync","compression","compressionOptions","level","mdata","percent","zipBlob","zip_file_name","png","mode","jpg","jpeg","ThunderSTORM (csv)","delimiter","comments","header_row","header_transform","x [nm]","y [nm]","z [nm]","uncertainty_xy [nm]","uncertainty_z [nm]","description","ThunderSTORM (xls)","ZEISS (txt)","Position X [nm]","Position Y [nm]","Position Z [nm]","First Frame","ZEISSv1 (csv)","ZEISSv2 (csv)","RapidSTORM (txt)","*all*","Position-0-0","Position-1-0","Position-2-0","ImageNumber-0-0","Space Seperated List (txt)","Nikon NSTORM (txt)","X","Y","Z","Frame","smlm-table(binary)","_smlmTableBinary","units","defineProperty_default","smlm-image(binary)","smlm-table(csv)","sample","labeling","metadata","exposure","shaderScripts","shader-particle-renderer-vs","source","shader-vs","shader-particle-renderer-fs","getShader","id","shader","shaderScript","createShader","FRAGMENT_SHADER","VERTEX_SHADER","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","alert","getShaderInfoLog","particleBuffer","camera","scene","group","controls","gui","scopeParams","update_webgl_status_callback","pointCloud3D_canvas","particlesWidth","particlesHeight","sizeX","sizeY","viewX","viewY","pointCloud3D_frame","starttime","getTime","ScopeParams","scaleX","scaleY","scaleZ","pointSize","distance","fov","pointSizeMin","pointSizeMax","onViewportChanged","window","innerWidth","innerHeight","aspect","THREE","PerspectiveCamera","Scene","Object3D","add","lookAt","updateMatrices","TrackballControlsWithPropagation","position","set","projectionMatrix","Matrix4","makePerspective","near","far","rotateSpeed","zoomSpeed","panSpeed","dynamicDampingFactor","rerender","setRerender","totalNumberOfChunks","fileIDs","locations","numChunks","color","exec","load3DViewer","canvasElement","dat","GUI","autoPlace","document","getElementById","appendChild","domElement","scaleFolder","addFolder","listen","onChange","clippingFolder","depth","preserveDrawingBuffer","forEach","getExtension","getParameter","MAX_VERTEX_TEXTURE_IMAGE_UNITS","onresize","mousewheel","bindBuffer","ARRAY_BUFFER","createBuffer","locationCoordsBuffer","float32","j","attributesBuffer","createFramebuffer","createAndBindParticleTexture","aParticleLoc","program","createProgram","attachShader","bindAttribLocation","linkProgram","createAndLinkParticleRenderer","useProgram","uniform1i","getUniformLocation","enableVertexAttribArray","bufferData","STATIC_DRAW","vertexAttribPointer","FLOAT","setInterval","fr","blendFunc","SRC_ALPHA","ONE","blendEquation","FUNC_ADD","clearColor","anim","glPixels","fbo","texture","createTexture","bindTexture","TEXTURE_2D","pixelStorei","UNPACK_ALIGNMENT","texImage2D","RGBA","texParameteri","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","COLOR_ATTACHMENT0","checkFrameBuffer","newLocations","onlocations","status","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","oldProjectionMatrixArray","oldFov","oldViewMatrixArray","isStill","t","_projectionMatrixArray","_viewMatrixArray","activeTexture","TEXTURE1","stridedFloat32Arrays","loadNewLocationTextures","update","viewport","clear","COLOR_BUFFER_BIT","flush","lastChunkRendered","uniform2f","Math","uniform4f","minX","maxX","minY","maxY","minZ","maxZ","uniform1f","tan","PI","uniform3f","setUniforms","uniformMatrix4fv","enable","BLEND","chunk","loopFiles","lastChunk","alpha","active","chunksPerAnimationFrame","locationTexture","textures","pointCount","bufferLength","drawArrays","POINTS","disable","renderParticles","dt","lastRenderTime","targetFps","throttle","requestAnimationFrame","framecount","updateMatrixWorld","matrixWorldInverse","getInverse","matrixWorld","flattenToArray","__webglInit","_modelViewMatrix","_objectMatrixArray","_modelViewMatrixArray","multiplyToArray","colors","createFileID","show3DLocalizations","options","update_status_callback","before","strideTitles","stridedArrayBuffers","float32Arrays","isFiltered","ceil","filteredRows","chunkIndex","normalization","rendering","rendering_progress","rendering_status","filteredLine","line","newProgress","floor","chunkLine","stridedFloat32Array","fileid","indx","indexOf","fileID","addFile","colorIndex","colorFolder","N","activN","colorN","alphaN","addColor","open","render3DLocalizations","Fps","__controllers","updateDisplay","fps","ppf","event","preventDefault","stopPropagation","wheelDeltaY","pica","__webpack_require__","Viewer","props","selected_s3_file","selected_smlm_file_hash","selected_smlm_file","filter_enabled","expandActions","menuVisible","show_filter","use_lut","use_3d","localizationNumber","frameNumber","histogram_image","filter_expression","filter_tooltip","histogram_width","histogram_height","filter_ranges","selected_filter","selected_filter_max","selected_filter_min","rendered","render3d_loaded","export_histogram_png","map","selected_file","renderWorker","filterWorker","hist_table","showInfoDialog","showShareDialog","showFilesDialog","showErrorDialog","error_content","text_file_format","brightness","$root","$data","store","api","watch","setTimeout","$refs","refresh","leafletMap","invalidateSize","$forceUpdate","mounted","screenWidth","event_bus","$on","newsize","show","supported_file_formats","SMLM format","$route","query","loadSample","methods","duration","snackbar_info","snackbar_duration","showSnackbar","workerSelected","uri","selected_worker","worker_list","updateCanvas","show_anet_output","current_render2d_config","anet_render2d_config","anet_output_img","createElement","ctx","drawImage","canvas_img_data","render_canvas","hist_render2d_config","shareFile","signed_in","generateThumbnail","smlm","showLogin","openFilesChange","fieldName","fileList","getFileExtension","filename","undefined","url","response","loading_shared_url","shared_url_mode","axios_default","method","responseType","onDownloadProgress","progressEvent","total","sent","pop","selected_file_name","endsWith","loadSmlm","loadFile","t0","finish","loadSmlmFile","file_tags","xy_range","frame_range","reset_filters","plotImage","_this5","original","_canvas_data","putImageData","resize","unsharpAmount","unsharpRadius","unsharpThreshold","thumbnail","toDataURL","switchChannel","ch","selectFile","append_mode","select_file_input","click","updateStatus","fileSelected","_this6","file_sample_lines","includes","showImportDialog","readAsText","stopAnetProcess","_this7","anet_taskid","session","call","closed","disclose_me","taskid","reason","use_widefield","anet_running","showProcessDialog","anet_output_sample_hash","anet_output_available","uploadWidefieldImage","sample_hash","sample_config","_this8","widefield_available","wf_file","file_props","getUploadUrl","res","signedUrl","fileKey","uploadFile","loadImageFile","loadTextFile","selected_format","_this9","time","offset_x","offset_y","channel_name","import_image","timeEnd","current_displaying","_this10","import_text_table","_this11","import_smlm","downloadSmlmFile","_this12","save","Object","FileSaver","updateFPS","switch3DView","z","plotHist","update_selected_filter","isFinite","round","switch_selected_filter","filter_name","selected_filter_range","updateRenderStatus","_this13","escaped_headers","join","offset_mode","options_","file_id","_options","k","finished","render3d","render2d","transferables","_this14","message","_this15","imageData","_this16","L","scrollWheelZoom","smoothWheelZoom","smoothSensitivity","minZoom","maxZoom","center","zoom","crs","CRS","Simple","updateMap","w","filterImage","data2img","southWest","unproject","northEast","bounds","LatLngBounds","_canvas_layer","removeLayer","imageOverlay","addTo","setMaxBounds","render_canvas2","imgData","_this17","himage","p","min_max","imageCanvas","download_image","image_data","arraybuffer","view","bb","WebKitBlobBuilder","MozBlobBuilder","getBlob","body","style","webkitURL","URL","createObjectURL","href","download","revokeObjectURL","components_Viewer","render","_vm","_h","$createElement","_c","_self","staticClass","_v","_s","title","directives","rawName","expression","staticStyle","z-index","attrs","md-elevation","flex","on","$event","_e","disabled","change","model","callback","$$v","ref","tooltip-dir","drag-end","$set","for","nativeOn","keyup","_k","keyCode","layout","md-mode","md-value","md-active","md-persistent","update:mdActive","_t","loaded_sample","_l","f","md-expand","md-expanded","expandFiles","loadS3File","update:mdExpanded","tag","class","slot","sf","n","md-vertical-align","header","index","md-clickable","md-closed","md-limit","md-placeholder","scopedSlots","_u","fn","chip","md-icon","md-label","md-description","to","md-diameter","md-stroke","md-content","md-confirm-text","md-click-outside-to-close","showUploading","show_more_import_options","md-selected","selected_worker_uri","worker","_id","$oid","md-static","loading_worker_list","sendForTraining","show140","worker_validation_msg","runAnetProcess","get_shared_link","make_public","md-options","licenses","md-dense","alt","authrole","shareSample","showSharedLink","shared_link","md-position","md-duration","staticRenderFns","src_components_Viewer","normalizeComponent","ssrContext","vue_esm","use","vue_router_esm","router","base","location","pathName","routes","path","component","FAQ","computed","compiledMarkdown","marked_default","sanitize","components_FAQ","domProps","innerHTML","src_components_FAQ","FAQ_normalizeComponent","debug","wsuri","authid","uid","connection","App","$nextTick","updateSize","windowHeight","windowWidth","$emit","ga","ga_send","selectortype_template_index_0_src_App","src_App","App_normalizeComponent","config","productionTip","vue_material_default","dist_default","text","clamp","node","content","textContent","el","template","components"],"mappings":"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","file":"static/js/app.bdd6b1865cf3f421304d.js","sourcesContent":["\n// wordgenjs from https://github.com/gurshabad/wordgenjs\nconst arrAnimals = ['Aardvark', 'Albatross', 'Alligator', 'Alpaca', 'Ant', 'Anteater', 'Antelope', 'Ape', 'Armadillo', 'Ass_Donkey', 'Baboon', 'Badger', 'Barracuda', 'Bat', 'Bear', 'Beaver', 'Bee', 'Bison', 'Boa', 'Buffalo', 'Butterfly', 'Camel', 'Capybara', 'Caribou', 'Cassowary', 'Cat', 'Caterpillar', 'Cattle', 'Chamois', 'Cheetah', 'Chicken', 'Chimpanzee', 'Chinchilla', 'Chough', 'Clam', 'Cobra', 'Cockroach', 'Cod', 'Cormorant', 'Coyote', 'Crab', 'Crane', 'Crocodile', 'Crow', 'Curlew', 'Deer', 'Dinosaur', 'Dog', 'Dogfish', 'Dolphin', 'Donkey', 'Dotterel', 'Dove', 'Dragonfly', 'Duck', 'Dugong', 'Dunlin', 'Eagle', 'Echidna', 'Eel', 'Eland', 'Elephant', 'Elephantseal', 'Elk', 'Emu', 'Falcon', 'Ferret', 'Finch', 'Fish', 'Flamingo', 'Fox', 'Frog', 'Gaur', 'Gazelle', 'Gerbil', 'GiantPanda', 'Giraffe', 'Gnat', 'Gnu', 'Goat', 'Goose', 'Goldfinch', 'Goldfish', 'Gorilla', 'Goshawk', 'Grasshopper', 'Grouse', 'Guanaco', 'Guineafowl', 'Guineapig', 'Gull', 'Hamster', 'Hare', 'Hawk', 'Hedgehog', 'Heron', 'Herring', 'Hippopotamus', 'Hornet', 'Horse', 'Human', 'Hummingbird', 'Hyena', 'Ibex', 'Ibis', 'Jackal', 'Jaguar', 'Jay', 'Jellyfish', 'Kangaroo', 'Kingfisher', 'Koala', 'Komodo', 'Kookabura', 'Kouprey', 'Kudu', 'Lapwing', 'Lark', 'Lemur', 'Leopard', 'Lion', 'Llama', 'Lobster', 'Locust', 'Loris', 'Louse', 'Lyrebird', 'Magpie', 'Mallard', 'Manatee', 'Mandrill', 'Mantis', 'Marten', 'Meerkat', 'Mink', 'Mole', 'Mongoose', 'Monkey', 'Moose', 'Mouse', 'Mosquito', 'Mule', 'Narwhal', 'Newt', 'Nightingale', 'Octopus', 'Okapi', 'Opossum', 'Oryx', 'Ostrich', 'Otter', 'Owl', 'Ox', 'Oyster', 'Panther', 'Parrot', 'Partridge', 'Peafowl', 'Pelican', 'Penguin', 'Pheasant', 'Pig', 'Pigeon', 'PolarBear', 'Pony', 'Porcupine', 'Porpoise', 'PrairieDog', 'Quail', 'Quelea', 'Quetzal', 'Rabbit', 'Raccoon', 'Rail', 'Ram', 'Rat', 'Raven', 'Reddeer', 'Redpanda', 'Reindeer', 'Rhinoceros', 'Rook', 'Salamander', 'Salmon', 'SandDollar', 'Sandpiper', 'Sardine', 'Scorpion', 'Sealion', 'SeaUrchin', 'Seahorse', 'Seal', 'Shark', 'Sheep', 'Shrew', 'Skunk', 'Snail', 'Snake', 'Sparrow', 'Spider', 'Spoonbill', 'Squid', 'Squirrel', 'Starling', 'Stingray', 'Stinkbug', 'Stork', 'Swallow', 'Swan', 'Tapir', 'Tarsier', 'Termite', 'Tiger', 'Toad', 'Trout', 'Turkey', 'Turtle', 'Vicu�a', 'Viper', 'Vulture', 'Wallaby', 'Walrus', 'Wasp', 'Waterbuffalo', 'Weasel', 'Whale', 'Wolf', 'Wolverine', 'Wombat', 'Woodcock', 'Woodpecker', 'Worm', 'Wren', 'Yak', 'Zebra'];\nconst arrColours = ['almond', 'amaranthine', 'amber', 'amethyst', 'antique', 'apple', 'apricot', 'aqua', 'aquamarine', 'argent', 'auburn', 'avocado', 'azure', 'babyblue', 'banana', 'battleshipgray', 'bay', 'beige', 'Bermudagreen', 'beryl', 'biceblue', 'bicegreen', 'bice', 'biscuit', 'bisque', 'black', 'blanchedalmond', 'blazeorange', 'blonde', 'bloodred', 'bluegreen', 'blueviolet', 'blue', 'blueberry', 'bone', 'bottlegreen', 'brass', 'brickred', 'bronzeyellow', 'bronze', 'brown', 'buckskin', 'buff', 'burgundy', 'burlywood', 'burntorange', 'burntsienna', 'burntumber', 'butterscotch', 'cadetblue', 'Cambridgeblue', 'canary', 'cardinal', 'carmine', 'carnation', 'carnelian', 'carroty', 'celadon', 'cerise', 'cerulean', 'chamois', 'champagne', 'charcoal', 'chartreuse', 'cherryred', 'chestnut', 'Chinesered', 'chocolate', 'cinereous', 'cinnabar', 'cinnamon', 'citrine', 'clairdelune', 'claret', 'coalblack', 'cobaltblue', 'cocoa', 'coffee', 'coolgray', 'Copenhagenblue', 'copper', 'coral', 'cornflowerblue', 'cornflower', 'cornsilk', 'cream', 'crimson', 'cupreous', 'cyan', 'daffodil', 'damask', 'dandelion', 'dovegray', 'duckeggblue', 'dun', 'Dodgerblue', 'eaudenil', 'ebony', 'ecru', 'eggshellblue', 'eggshell', 'electricblue', 'emeraldgreen', 'emerald', 'fawn', 'federalyellow', 'firebrick', 'fireenginered', 'flame', 'flamingo', 'flaxen', 'flesh', 'floralwhite', 'forestgreen', 'fuchsia', 'fuscous', 'gainsboro', 'gamboge', 'garnet', 'gentianblue', 'gentianviolet', 'geranium', 'ginger', 'glaucous', 'gold', 'goldenbrown', 'goldenrod', 'goldochre', 'grape', 'grassgreen', 'gray', 'green', 'grizzle', 'gules', 'gunmetalgray', 'hazel', 'heather', 'heliotrope', 'henna', 'hepatic', 'hoar', 'honey', 'honeydew', 'hotpink', 'huntergreen', 'iceblue', 'incarnadine', 'Indianred', 'indigo', 'internationalorange', 'irongray', 'ivory', 'jadegreen', 'jade', 'jet', 'jonquil', 'kellygreen', 'Kendalgreen', 'khaki', 'khakigreen', 'lapislazuli', 'laurelgreen', 'lavender', 'lemonchiffon', 'lemon', 'lilac', 'lime', 'Lincolngreen', 'linen', 'liver', 'loden', 'lovat', 'macaroniandcheese', 'madder', 'magenta', 'magicmint', 'magnolia', 'mahogany', 'malachite', 'maroon', 'mauve', 'mazarine', 'melon', 'midnightblue', 'mignonette', 'militarygrey', 'mint', 'mintcream', 'mistyrose', 'moccasin', 'mocha', 'mossgreen', 'mulberry', 'mustard', 'natural', 'navajowhite', 'navy', 'Nileblue', 'Nilegreen', 'oak', 'oatmeal', 'oceangrey', 'ochre', 'offwhite', 'oldgold', 'oldlace', 'olivedrab', 'olive', 'orange', 'orchid', 'outerspace', 'oxblood', 'Oxfordblue', 'oyster', 'pansy', 'paprika', 'Parisgreen', 'patina', 'peagreen', 'peach', 'peacockblue', 'pearlgray', 'pearly', 'periwinkle', 'perse', 'petrolblue', 'petunia', 'pewter', 'pillarboxred', 'pinegreen', 'pink', 'pistachiogreen', 'platinumblond', 'platinum', 'plum', 'Pompeianred', 'poppy', 'powderblue', 'primrose', 'Prussianblue', 'puce', 'puke', 'purple', 'purpure', 'quartz', 'quince', 'raspberry', 'rawsienna', 'redviolet', 'red', 'reseda', 'riflegreen', 'robin_seggblue', 'rose', 'rouge', 'royalblue', 'royalpurple', 'ruby', 'russet', 'rust', 'sable', 'saddlebrown', 'safetyorange', 'saffron', 'sagegreen', 'salmon', 'sand', 'sandy', 'sanguine', 'sapphire', 'sard', 'saxeblue', 'scarlet', 'schoolbusyellow', 'seagreen', 'seashell', 'sepia', 'shockingpink', 'sienna', 'silver', 'silvergray', 'skyblue', 'slate', 'slateblack', 'slateblue', 'slategray', 'smoke', 'snow', 'sorrel', 'springgreen', 'stammel', 'steelblue', 'stone', 'straw', 'strawberry', 'sulfur', 'sunflower', 'tan', 'tangerine', 'taupe', 'taxiyellow', 'teak', 'teal', 'terracotta', 'timberwolf', 'titian', 'topaz', 'towcolored', 'Turkeyred', 'turquoise', 'Tyrianpurple', 'ultramarine', 'umber', 'Vandykebrown', 'venetianred', 'verdant', 'vermilion', 'vert', 'violetred', 'violet', 'virid', 'viridian', 'vividorange', 'walnut', 'Wedgewoodblue', 'wheat', 'wheaten', 'white', 'wine', 'xanthic', 'yellow', 'zaffre'];\n// const arrCharacters =  ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '!', '@', '#', '$', '%', '^', '&', '*'];\n\nexport function animalGenerator() {\n    const randAnimal = arrAnimals[Math.floor(Math.random() * arrAnimals.length)].toLowerCase();\n    return randAnimal;\n}\n\nexport function colourGenerator() {\n    const randColour = arrColours[Math.floor(Math.random() * arrColours.length)].toLowerCase();\n    return randColour\n}\n\nexport function randId() {\n     return Math.random().toString(36).substr(2, 10);\n}\n\nexport const Filters = {}\n\nFilters.getPixels = function(canvas) {\n  var c = canvas\n  var ctx = c.getContext('2d')\n  return ctx.getImageData(0,0,c.width,c.height)\n}\n\nFilters.filterImage = function(pixels, filter, var_args) {\n  var args = [pixels];\n  for (var i=2; i<arguments.length; i++) {\n    args.push(arguments[i]);\n  }\n  return filter.apply(null, args);\n}\n\nFilters.grayscale = function(pixels, args) {\n  var d = pixels.data;\n  for (var i=0; i<d.length; i+=4) {\n    var r = d[i];\n    var g = d[i+1];\n    var b = d[i+2];\n    // CIE luminance for the RGB\n    // The human eye is bad at seeing red and blue, so we de-emphasize them.\n    var v = 0.2126*r + 0.7152*g + 0.0722*b;\n    d[i] = d[i+1] = d[i+2] = v\n  }\n  return pixels;\n}\n\nFilters.brightness = function(pixels, offset, ratio) {\n  var d = pixels.data;\n  var v;\n  for (var i=0; i<d.length; i+=4) {\n    v = parseInt((d[i]-offset)*ratio);\n    if(v>255){\n      v = 255;\n    }\n    else if(v<0){\n      v = 0;\n    }\n    d[i] = v;\n    d[i+1] = v;\n    d[i+2] = v;\n    d[i+3] = 255;  // fully opaque\n  }\n  return pixels;\n}\n\nFilters.min_max = function(pixels) {\n  var d = pixels.data;\n  var v;\n  var min=Number.POSITIVE_INFINITY, max=Number.NEGATIVE_INFINITY, avg=0;\n  for (var i=0; i<d.length; i+=4) {\n    if(d[i]<min) min=d[i];\n    if(d[i]>max) max=d[i];\n    avg += (d[i]/(d.length/4))\n  }\n  return {min:min, max:max, avg:avg};\n}\n\nFilters.lut = function(pixels, lut) {\n  var d = pixels.data;\n  var v;\n  for (var i=0; i<d.length; i+=4) {\n    v = d[i];\n    d[i] = lut[v][0];\n    d[i+1] = lut[v][1];\n    d[i+2] = lut[v][2];\n    d[i+3] = 255;  // fully opaque\n  }\n  return pixels;\n}\n\nexport const hot_lut = [\n  [10, 0, 0],\n[13, 0, 0],\n[15, 0, 0],\n[18, 0, 0],\n[21, 0, 0],\n[23, 0, 0],\n[26, 0, 0],\n[28, 0, 0],\n[31, 0, 0],\n[34, 0, 0],\n[36, 0, 0],\n[39, 0, 0],\n[42, 0, 0],\n[44, 0, 0],\n[47, 0, 0],\n[49, 0, 0],\n[52, 0, 0],\n[55, 0, 0],\n[57, 0, 0],\n[60, 0, 0],\n[63, 0, 0],\n[65, 0, 0],\n[68, 0, 0],\n[70, 0, 0],\n[73, 0, 0],\n[76, 0, 0],\n[78, 0, 0],\n[81, 0, 0],\n[84, 0, 0],\n[86, 0, 0],\n[89, 0, 0],\n[91, 0, 0],\n[94, 0, 0],\n[97, 0, 0],\n[99, 0, 0],\n[102, 0, 0],\n[105, 0, 0],\n[107, 0, 0],\n[110, 0, 0],\n[112, 0, 0],\n[115, 0, 0],\n[118, 0, 0],\n[120, 0, 0],\n[123, 0, 0],\n[126, 0, 0],\n[128, 0, 0],\n[131, 0, 0],\n[133, 0, 0],\n[136, 0, 0],\n[139, 0, 0],\n[141, 0, 0],\n[144, 0, 0],\n[147, 0, 0],\n[149, 0, 0],\n[152, 0, 0],\n[154, 0, 0],\n[157, 0, 0],\n[160, 0, 0],\n[162, 0, 0],\n[165, 0, 0],\n[168, 0, 0],\n[170, 0, 0],\n[173, 0, 0],\n[175, 0, 0],\n[178, 0, 0],\n[181, 0, 0],\n[183, 0, 0],\n[186, 0, 0],\n[189, 0, 0],\n[191, 0, 0],\n[194, 0, 0],\n[196, 0, 0],\n[199, 0, 0],\n[202, 0, 0],\n[204, 0, 0],\n[207, 0, 0],\n[210, 0, 0],\n[212, 0, 0],\n[215, 0, 0],\n[217, 0, 0],\n[220, 0, 0],\n[223, 0, 0],\n[225, 0, 0],\n[228, 0, 0],\n[231, 0, 0],\n[233, 0, 0],\n[236, 0, 0],\n[238, 0, 0],\n[241, 0, 0],\n[244, 0, 0],\n[246, 0, 0],\n[249, 0, 0],\n[252, 0, 0],\n[254, 0, 0],\n[255, 2, 0],\n[255, 5, 0],\n[255, 7, 0],\n[255, 10, 0],\n[255, 12, 0],\n[255, 15, 0],\n[255, 18, 0],\n[255, 20, 0],\n[255, 23, 0],\n[255, 26, 0],\n[255, 28, 0],\n[255, 31, 0],\n[255, 33, 0],\n[255, 36, 0],\n[255, 39, 0],\n[255, 41, 0],\n[255, 44, 0],\n[255, 47, 0],\n[255, 49, 0],\n[255, 52, 0],\n[255, 54, 0],\n[255, 57, 0],\n[255, 60, 0],\n[255, 62, 0],\n[255, 65, 0],\n[255, 68, 0],\n[255, 70, 0],\n[255, 73, 0],\n[255, 75, 0],\n[255, 78, 0],\n[255, 81, 0],\n[255, 83, 0],\n[255, 86, 0],\n[255, 89, 0],\n[255, 91, 0],\n[255, 94, 0],\n[255, 96, 0],\n[255, 99, 0],\n[255, 102, 0],\n[255, 104, 0],\n[255, 107, 0],\n[255, 110, 0],\n[255, 112, 0],\n[255, 115, 0],\n[255, 117, 0],\n[255, 120, 0],\n[255, 123, 0],\n[255, 125, 0],\n[255, 128, 0],\n[255, 131, 0],\n[255, 133, 0],\n[255, 136, 0],\n[255, 138, 0],\n[255, 141, 0],\n[255, 144, 0],\n[255, 146, 0],\n[255, 149, 0],\n[255, 151, 0],\n[255, 154, 0],\n[255, 157, 0],\n[255, 159, 0],\n[255, 162, 0],\n[255, 165, 0],\n[255, 167, 0],\n[255, 170, 0],\n[255, 172, 0],\n[255, 175, 0],\n[255, 178, 0],\n[255, 180, 0],\n[255, 183, 0],\n[255, 186, 0],\n[255, 188, 0],\n[255, 191, 0],\n[255, 193, 0],\n[255, 196, 0],\n[255, 199, 0],\n[255, 201, 0],\n[255, 204, 0],\n[255, 207, 0],\n[255, 209, 0],\n[255, 212, 0],\n[255, 214, 0],\n[255, 217, 0],\n[255, 220, 0],\n[255, 222, 0],\n[255, 225, 0],\n[255, 228, 0],\n[255, 230, 0],\n[255, 233, 0],\n[255, 235, 0],\n[255, 238, 0],\n[255, 241, 0],\n[255, 243, 0],\n[255, 246, 0],\n[255, 249, 0],\n[255, 251, 0],\n[255, 254, 0],\n[255, 255, 2],\n[255, 255, 6],\n[255, 255, 10],\n[255, 255, 14],\n[255, 255, 18],\n[255, 255, 22],\n[255, 255, 26],\n[255, 255, 30],\n[255, 255, 34],\n[255, 255, 38],\n[255, 255, 42],\n[255, 255, 46],\n[255, 255, 50],\n[255, 255, 54],\n[255, 255, 58],\n[255, 255, 62],\n[255, 255, 65],\n[255, 255, 69],\n[255, 255, 73],\n[255, 255, 77],\n[255, 255, 81],\n[255, 255, 85],\n[255, 255, 89],\n[255, 255, 93],\n[255, 255, 97],\n[255, 255, 101],\n[255, 255, 105],\n[255, 255, 109],\n[255, 255, 113],\n[255, 255, 117],\n[255, 255, 121],\n[255, 255, 125],\n[255, 255, 128],\n[255, 255, 132],\n[255, 255, 136],\n[255, 255, 140],\n[255, 255, 144],\n[255, 255, 148],\n[255, 255, 152],\n[255, 255, 156],\n[255, 255, 160],\n[255, 255, 164],\n[255, 255, 168],\n[255, 255, 172],\n[255, 255, 176],\n[255, 255, 180],\n[255, 255, 184],\n[255, 255, 188],\n[255, 255, 191],\n[255, 255, 195],\n[255, 255, 199],\n[255, 255, 203],\n[255, 255, 207],\n[255, 255, 211],\n[255, 255, 215],\n[255, 255, 219],\n[255, 255, 223],\n[255, 255, 227],\n[255, 255, 231],\n[255, 255, 235],\n[255, 255, 239],\n[255, 255, 243],\n[255, 255, 247],\n[255, 255, 251],\n[255, 255, 255]\n]\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils.js","function randId() {\n     return Math.random().toString(36).substr(2, 10);\n}\n\nexport class smlmFile {\n  constructor(file) {\n    this.manifest = JSON.parse(JSON.stringify(manifest_template))\n    this.formats = this.manifest.formats\n    this.files = this.manifest.files\n    this.channels = {}\n    this.zipFile = null\n    this.uploaded = false\n    this.isSMLM = false\n    this.manifest.license = this.manifest.license || 'CC BY 4.0'\n    this.manifest.tags = this.manifest.tags || []\n    this.manifest.citeAs = this.manifest.citeAs || ''\n  }\n  import_image(file, image_format, info,  is_append, update_callback){\n    return new Promise((resolve, reject) => {\n      console.log('import file', image_format)\n      var FR= new FileReader();\n       FR.onload = (e) => {\n          var img = new Image();\n          img.addEventListener(\"load\", ()=>{\n            const file_info = {}\n            file_info.format= image_format\n\n            file_info.type = \"image\"\n            file_info.size = [img.height, img.width]\n            Object.assign(file_info, info)\n            const data = {}\n            data.image = img\n            data.file = file\n            data.name = file.name\n            data.file_name = file.name\n            data.file_size = file.size\n            file_info.name = file.name\n            file_info.data = data\n            const hash = this.calculate_hash(file_info)\n            file_info.hash = hash\n            file_info.tags = info.tags || []\n            file_info.pixel_size = info.pixel_size\n            data.file_hash = hash\n\n            if(is_append || !this.files || this.files.length==0){\n              // append to this file\n              this.files.push(file_info)\n            }\n            else{\n              // reset files\n              this.manifest = JSON.parse(JSON.stringify(manifest_template))\n              this.formats = this.manifest.formats\n              this.files = this.manifest.files\n              this.files.push(file_info)\n            }\n\n            this.formats[image_format] = supported_image_formats[image_format]\n            if(!this.manifest.name || this.manifest.name == \"\"){\n              if(this.isSMLM){\n                this.manifest.name = file.name.split(\".\")[0] + \".smlm\"\n              }\n              else{\n                this.manifest.name = file.name.split(\".\")[0] + \".zip\"\n              }\n\n            }\n            if(!this.manifest.hash)\n            this.update_hash()\n            info.channel = info.channel || 'default'\n            this.channels[info.channel] = this.channels[info.channel] || []\n            this.channels[info.channel].push(data)\n            this.zipFile = null\n            this.uploaded = false\n            console.log(data)\n            resolve(file_info)\n            //context.drawImage(img, 0, 0);\n          });\n          img.src = e.target.result;\n       };\n       FR.onerror = (e) => {\n         reject(e)\n       }\n       FR.readAsDataURL(file);\n   })\n  }\n  import_text_table(file, table_format, info, is_append, update_callback){\n    console.log(table_format)\n    if(typeof table_format === 'string' || table_format instanceof String){\n      table_format = supported_text_formats[table_format]\n    }\n    return new Promise((resolve, reject) => {\n      if(!table_format){\n        console.log(\"no table format not found.\", table_format)\n        reject(\"no table format not found.\")\n        return\n      }\n      var loadWorker;\n      if (typeof (Worker) !== \"undefined\") {\n          loadWorker = new Worker(\"static/js/AsyncTextLoader.js\")\n      } else {\n          console.log(\"Web Worker not available\")\n          reject(\"Web Worker not available\")\n          return\n      }\n      console.log('loading...')\n      update_callback( {running : true,  running_status: 'running '})\n\n      loadWorker.onmessage = (e) => {\n          var data = e.data\n          if (data.error){\n            reject(data.error)\n            loadWorker.terminate()\n          }\n          else if (data.loaded) {\n              // this.file_loaded = true\n              console.log(data.tableDict)\n              console.log('done', data.statshtml, data)\n              const file_info = JSON.parse(JSON.stringify(file_info_template))\n\n              data.name = file.name\n              data.file_size = file.size\n              file_info.name = file.name\n              file_info.type = \"table\"\n              file_info.rows = data.rows\n              file_info.min = data.min\n              file_info.max = data.max\n              file_info.avg = data.avg\n              file_info.offset = {\"x\": 0, \"y\": 0}\n              file_info.data = data\n              const hash = this.calculate_hash(file_info)\n              file_info.hash = hash\n              data.file_hash = hash\n              file_info.tags = info.tags || []\n              file_info.pixel_size = info.pixel_size\n              if(is_append){\n                // append to this file\n                this.files.push(file_info)\n              }\n              else{\n                // reset files\n                this.manifest = JSON.parse(JSON.stringify(manifest_template))\n                this.formats = this.manifest.formats\n                this.files = this.manifest.files\n                this.files.push(file_info)\n              }\n              if(!this.manifest.name || this.manifest.name == \"\"){\n                this.manifest.name = file.name.split(\".\")[0] + \".smlm\"\n              }\n              if(!this.manifest.hash)\n              this.update_hash()\n              info.channel = info.channel || 'default'\n              this.channels[info.channel] = this.channels[info.channel] || []\n              this.channels[info.channel].push(data)\n              // this.formats[table_format.name] = table_format\n              this.zipFile = null\n              this.uploaded = false\n              // only files with a table can count as smlm\n              this.isSMLM = true\n              loadWorker.terminate()\n              console.log(data)\n              resolve(file_info)\n          }\n          else if (data.progress){\n              update_callback( {running_progress : data.progress,  running_status: (data.localization_num/1000000).toFixed(1) +'M localizations loaded'})\n          }\n      }\n      loadWorker.onerror = () => {\n        console.log('load error')\n        reject('error occured during running.')\n        loadWorker.terminate()\n      }\n      loadWorker.postMessage({file: file, format: table_format})\n    });\n   }\n   import_smlm(file, is_append, update_callback){\n    // TODO: support append\n    if(is_append){\n      throw \"please load smlm file first, append mode is not supported yet.\"\n    }\n    return new Promise((resolve, reject) => {\n      JSZip.loadAsync(file)\n      .then((zip)=>{\n        update_callback({running: true})\n        const manifest_file = zip.file(\"manifest.json\")\n        if(!manifest_file){\n          reject('manifest.json is not present in the zip file')\n          return\n        }\n\n        manifest_file.async(\"string\")\n        .then((meta_json)=>{\n          const manifest = JSON.parse(meta_json)\n          const format_version = manifest.format_version\n          update_callback({running_status: 'manifest file loaded.'})\n          const data = {}\n          const load_files = async () =>{\n              //TODO: render the files with a different async loader\n              for (let file_no=0; file_no<manifest.files.length; file_no++){\n                await new Promise((resolve2, reject2) =>{\n                  const file_info = manifest.files[file_no]\n                  if(file_info.type == \"table\"){\n                    update_callback({running_status: 'loading smlm file...'})\n                    const table_file = zip.file(file_info.name)\n                    const format_key = file_info.format\n                    update_callback({running_status: 'uncompressing file: ' + file_info.name})\n                    if(!table_file && manifest.formats[format_key]){\n                      reject2('table file '+ manifest.table_file +' is not present in the zip file')\n                      return\n                    }\n                    const format = manifest.formats[format_key]\n\n                    table_file.async(\"blob\")\n                    .then((table_file)=>{\n                      console.log(table_file)\n                      const fileReader = new FileReader();\n                      fileReader.onload = (evt) => {\n                          update_callback({running_status: 'table loaded.'})\n                          const arrayBuffer = evt.target.result\n                          const uint8Arr = new Uint8Array(arrayBuffer)\n                          let rows = file_info.rows\n                          const columns = format.columns\n                          for(let c=0;c<columns;c++){\n                              if(format.headers[c].startsWith('_')){\n                                format.headers[c] = format.headers[c].slice(1)\n                              }\n                          }\n                          if(uint8Arr.length != rows * columns * 4){\n                            console.error('file size mismatch: ', uint8Arr.length, rows * columns * 4)\n                            reject2('file size does not match the manifest.')\n                            return\n                          }\n\n                          const tableUint8Arrays = []\n                          const tableArrays = []\n                          for(let c=0;c<columns;c++){\n                            tableUint8Arrays[c] = new Uint8Array(new ArrayBuffer(rows*4))\n                          }\n                          if(format_version == 1){\n                            for(let c=0;c<columns;c++){\n                              for(let r=0;r<rows*4;r++){\n                                tableUint8Arrays[c][r] = uint8Arr[r*columns+c]\n                              }\n                            }\n                          }\n                          else{\n                            for(let c=0;c<columns;c++){\n                              for(let r=0;r<rows;r++){\n                                tableUint8Arrays[c][4*r] = uint8Arr[r*columns*4+4*c]\n                                tableUint8Arrays[c][4*r+1] = uint8Arr[r*columns*4+4*c+1]\n                                tableUint8Arrays[c][4*r+2] = uint8Arr[r*columns*4+4*c+2]\n                                tableUint8Arrays[c][4*r+3] = uint8Arr[r*columns*4+4*c+3]\n                              }\n                            }\n                          }\n                          const tableDict = {}\n                          const tableUint8Dict = {}\n                          for(let c=0;c<columns;c++){\n                              tableArrays[c] = new Float32Array(tableUint8Arrays[c].buffer)\n                              tableDict[format.headers[c]] = tableArrays[c]\n                              tableUint8Dict[format.headers[c]] = tableUint8Arrays[c]\n                          }\n\n                          file_info.min = {}\n                          file_info.max = {}\n                          file_info.avg = {}\n                          rows = tableArrays[0].length\n                          for(let c=0;c<columns;c++){\n                            const cn = format.headers[c]\n                            file_info.min[cn] = Number.POSITIVE_INFINITY;\n                            file_info.max[cn] = Number.NEGATIVE_INFINITY;\n                            file_info.avg[cn] = 0;\n                            for(let r=0;r<rows;r++){\n                                if(file_info.min[cn]>tableArrays[c][r]){\n                                  file_info.min[cn] = tableArrays[c][r]\n                                  if(tableArrays[c][r] == 0){\n                                    console.log(cn, c, r)\n                                  }\n                                }\n                                if(file_info.max[cn]<tableArrays[c][r])\n                                file_info.max[cn] = tableArrays[c][r]\n                                file_info.avg[cn] +=tableArrays[c][r]/rows\n                            }\n                          }\n                          data.headers = format.headers\n                          for(let h=0;h<data.headers.length;h++){\n                            data.headers[h] = data.headers[h].replace(/[^a-zA-Z0-9]+/g,'_').trim()\n                          }\n                          data.min = file_info.min\n                          data.max = file_info.max\n                          data.avg = file_info.avg\n                          data.file_name = file_info.name\n                          data.file_size = file.size\n                          data.tableUint8Arrays = tableUint8Arrays\n                          data.tableArrays = tableArrays\n                          data.tableUint8Dict = tableUint8Dict\n                          data.tableDict = tableDict\n                          data.columns = columns\n                          Object.assign(data, file_info)\n                          file_info.data = data\n\n                          file_info.data.integrity_test = false\n                          const hash = this.calculate_hash(file_info)\n                          if(!file_info.hash || file_info.hash!= hash){\n                              file_info.data.integrity_test = false\n                              console.log('integrity test failed: hash ' + file_info.hash + ' != ' + hash)\n                          }\n                          else{\n                              file_info.data.integrity_test = true\n                              console.log('integrity test passed: hash = ' + hash)\n                          }\n                          file_info.hash = hash\n                          data.file_hash = hash\n\n                          resolve2()\n                      };\n                      fileReader.onerror = (e) =>{\n                        reject2(e)\n                      }\n                      fileReader.readAsArrayBuffer(table_file);\n                    })\n                    .catch((e)=>{\n                      reject2(e)\n                    })\n                  }\n                  else if(file_info.type == \"image\"){\n                    update_callback({running_status: 'loading image file...'})\n\n                    const format_key = file_info.format\n\n                    // const format = manifest.formats[format_key]\n                    const image_file = zip.file(file_info.name)\n                    // console.log(image_file, format_key)\n                    if(!image_file){\n                      reject2('image file '+ manifest.image_file +' is not present in the zip file.')\n                      return\n                    }\n                    update_callback({running_status: 'uncompressing file: ' + file_info.name})\n                    image_file.async(\"blob\")\n                    .then((image_file)=>{\n\n                      var FR= new FileReader();\n                       FR.onload = (e) => {\n                          var img = new Image();\n                          img.addEventListener(\"load\", ()=>{\n                            const data = {}\n                            data.image = img\n                            data.name = file_info.name || file.name\n                            data.file_name = file_info.name ||  file.name\n                            data.file_size = image_file.size || file.size\n                            data.file_hash = file_info.hash\n                            file_info.data = data\n                            resolve2()\n                            //context.drawImage(img, 0, 0);\n                          });\n                          img.src = e.target.result;\n                       };\n                       FR.onerror = (e) => {\n                         reject2(e)\n                       }\n                       FR.readAsDataURL(image_file);\n\n                    })\n                  }\n                })\n              }\n          }\n          load_files().then(()=>{\n            this.formats = manifest.formats\n            this.files = manifest.files\n            this.manifest = manifest\n            this.manifest.tags = this.manifest.tags || []\n            this.update_hash()\n            this.zipFile = null\n            this.uploaded = false\n            // only files with a table can count as smlm\n            this.isSMLM = true\n            resolve(this.files)\n          }).catch((e)=>{\n            reject(e)\n          })\n\n        }).catch((e)=>{\n          reject(e)\n        })\n      })\n    });\n  }\n  calculate_hash(file_info){\n    console.log('calculating md5 for ', file_info.name)\n    const spark = new SparkMD5.ArrayBuffer()\n    if(file_info.type == 'table'){\n      const dict = file_info.data.tableDict\n      if(dict.frame) spark.append(dict.frame.buffer)\n      if(dict.x) spark.append(dict.x.buffer)\n      if(dict.y) spark.append(dict.y.buffer)\n    }\n    else if (file_info.type == 'image'){\n      const dataURI = file_info.data.image.src\n      const ab = this.dataURItoArrayBuffer(dataURI)\n      spark.append(ab)\n    }\n    const hash = spark.end()\n    console.log(file_info.name, ' hash: ', hash)\n    return hash\n  }\n  update_hash(){\n    let hash = ''\n    const spark = new SparkMD5()\n    for(let file_no=0; file_no<this.files.length; file_no++){\n      if(this.files[file_no].hash){\n        spark.append(this.files[file_no].hash)\n      }\n      else{\n        spark.append(this.files[file_no].name)\n      }\n    }\n    this.manifest.hash = spark.end()\n    console.log('update smlm file hash, name: ', this.manifest.name + ' md5: '+this.manifest.hash)\n  }\n  dataURItoArrayBuffer(dataURI) {\n      const byteString = atob(dataURI.split(',')[1]);\n      const mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0]\n      const ab = new ArrayBuffer(byteString.length);\n      const ia = new Uint8Array(ab);\n      for (let i = 0; i < byteString.length; i++) {\n         ia[i] = byteString.charCodeAt(i);\n      }\n      return ab;\n  }\n  dataURItoFile(dataURI, file_name) {\n    const byteString = atob(dataURI.split(',')[1]);\n    const mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0]\n    const ab = new ArrayBuffer(byteString.length);\n    const ia = new Uint8Array(ab);\n    for (let i = 0; i < byteString.length; i++) {\n       ia[i] = byteString.charCodeAt(i);\n    }\n    const blob = new Blob([ab], {type: mimeString});\n    const name = file_name.split(\".\")[0]+\".\"+(mimeString.split('/')[1]||'png')\n    return new File([blob], name);\n  }\n  save(update_callback){\n  console.log('preparing .smlm file')\n  return new Promise((resolve, reject) => {\n    try {\n      if(this.zipFile){\n        resolve(this.zipFile)\n        return\n      }\n      const zip = new JSZip()\n      update_callback({running: true, running_progress:0, running_status:\"Preparing a compressed smlm file...\"})\n      for(let file_no=0; file_no<this.files.length; file_no++){\n          const file_info = this.files[file_no]\n          if(file_info.type == \"table\"){\n            // TODO: compare with existing format, if the same format already exist, reuse it.\n            const format = JSON.parse(JSON.stringify(native_formats['smlm-table(binary)']))\n            const format_key = format.name+ '-' + file_no\n            const data = this.files[file_no].data\n            const tableDict = data.tableDict\n\n            const tableUint8Arrays = []\n\n            for(let i=0;i<data.headers.length;i++){\n               tableUint8Arrays.push(new Uint8Array(tableDict[data.headers[i]].buffer))\n            }\n            const rows = tableUint8Arrays[0].length/4\n            const columns = tableUint8Arrays.length\n\n            format.name = format_key\n            file_info.format = format_key\n            this.formats[format_key] = format\n            file_info.name = data.file_name.split(\".\")[0]+format.extension\n            file_info.hash = this.calculate_hash(file_info)\n            format.columns = columns\n            for(let i=0;i<data.headers.length;i++){\n              format.dtype[i] = \"float32\"\n              format.shape[i] = 1\n              format.headers[i] = data.headers[i].replace(/'/g,'').replace(/\"/g,'').replace(/[^a-zA-Z0-9]+/g,'_').trim()\n              if(format.headers[i].startsWith('_')){\n                format.headers[i] = format.headers[i].slice(1)\n              }\n            }\n            console.log('preparing table ', file_info.name)\n            const buffer = new ArrayBuffer(rows*columns*4)\n            const uint8Arr = new Uint8Array(buffer)\n            console.log('binary file size: ' + rows*columns*4)\n\n            // for(let c=0;c<columns;c++){\n            //   for(let r=0;r<rows*4;r++){\n            //     uint8Arr[4*rows*c+r] = tableUint8Arrays[c][r]\n            //   }\n            // }\n            for(let c=0;c<columns;c++){\n              for(let r=0;r<rows;r++){\n                uint8Arr[r*columns*4+4*c] = tableUint8Arrays[c][4*r]\n                uint8Arr[r*columns*4+4*c+1] = tableUint8Arrays[c][4*r+1]\n                uint8Arr[r*columns*4+4*c+2] = tableUint8Arrays[c][4*r+2]\n                uint8Arr[r*columns*4+4*c+3] = tableUint8Arrays[c][4*r+3]\n              }\n            }\n            const blob = new Blob([uint8Arr]);\n            const file = new File([blob], file_info.name, {type: \"application/octet-stream\", lastModified: Date.now()});\n            console.log('file is ready.', file)\n            console.log('preparing file for upload...')\n            zip.file(file_info.name, file)\n          }\n          else if(file_info.type == 'image'){\n            const data = this.files[file_no].data\n            const dataURI = data.image.src\n            const file = this.dataURItoFile(dataURI, data.file_name)\n            file_info.hash = this.calculate_hash(file_info)\n            // var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0]\n            // file_info.name = data.file_name.split(\".\")[0]+\".\"+(mimeString.split('/')[1]||'png')\n            //  var byteString = atob(dataURI.split(',')[1]);\n            //  var ab = new ArrayBuffer(byteString.length);\n            //  var ia = new Uint8Array(ab);\n            //  for (var i = 0; i < byteString.length; i++) {\n            //      ia[i] = byteString.charCodeAt(i);\n            //  }\n            //  var blob = new Blob([ab], {type: mimeString});\n            zip.file(file.name, file)\n          }\n        }\n        const manifest_ = Object.assign({}, this.manifest)\n        manifest_.format_version = manifest_template.format_version\n        const files_ = []\n        for(let i=0;i<this.manifest.files.length;i++){\n          const d = Object.assign({}, this.manifest.files[i])\n          delete d.data\n          files_.push(d)\n        }\n        manifest_.files = files_\n        this.update_hash()\n        console.log('smlm manifest: ', manifest_)\n        zip.file(\"manifest.json\", JSON.stringify(manifest_, null, \"\\t\"))\n        console.log('making zip archive...')\n        zip.generateAsync({ type:\"blob\",\n                            compression: \"DEFLATE\",\n                            compressionOptions: {\n                                level: 9\n                            }},\n                            (mdata)=>{\n                              update_callback({running_status: \"making zip files... \", running_progress:mdata.percent})\n                            }\n        ).then((zipBlob) => {\n            const zip_file_name = this.manifest.name\n            const zipFile = new File([zipBlob], zip_file_name, {type: \"application/smlm\", lastModified: Date.now()});\n              console.log(zipFile)\n              this.zipFile = zipFile\n              resolve(zipFile)\n              return\n        }).catch((e)=>{\n          console.error(e)\n          reject(e)\n          return\n        })\n\n      } catch (e) {\n        console.error(e)\n        reject(e)\n        return\n      }\n\n    })\n  }\n}\n\nexport const supported_image_formats = {\"png\":{\n    // Required\n    \"type\": \"image\",\n    \"extension\": \".png\",\n    \"mode\": \"binary\",\n  },\n  \"jpg\":{\n      // Required\n      \"type\": \"image\",\n      \"extension\": \".jpg\",\n      \"mode\": \"binary\",\n    },\n  \"jpeg\":{\n      // Required\n      \"type\": \"image\",\n      \"extension\": \".jpeg\",\n      \"mode\": \"binary\",\n    }\n\n}\n\nexport const supported_text_formats = {\"ThunderSTORM (csv)\": {\n    // Required\n    \"type\": \"table\",\n    \"extension\": \".csv\",\n    \"mode\": \"text\",\n    \"dtype\": \"float32\",\n    \"delimiter\": \",\",\n    \"comments\": \"\",\n    // specify which row is the header, set to -1 if there is no header\n    \"header_row\": 0,\n    // specify how to transform the headers to the standard header defined in smlm format,\n    \"header_transform\": {\"x [nm]\":\"x\", \"y [nm]\":\"y\", \"z [nm]\":\"z\", \"uncertainty_xy [nm]\":\"uncertainty_xy\", \"uncertainty_z [nm]\":\"uncertainty_z\"},\n\n    // Optional\n    \"name\": \"ThunderSTORM (csv)\",\n    \"description\": \"a csv format used in thunderSTORM\"\n  },\n  \"ThunderSTORM (xls)\": {\n      // Required\n      \"type\": \"table\",\n      \"extension\": \".xls\",\n      \"mode\": \"text\",\n      \"dtype\": \"float32\",\n      \"delimiter\": \"\\t\",\n      \"comments\": \"\",\n      // specify which row is the header, set to -1 if there is no header\n      \"header_row\": 0,\n      // specify how to transform the headers to the standard header defined in smlm format,\n      \"header_transform\": {\"x [nm]\":\"x\", \"y [nm]\":\"y\", \"z [nm]\":\"z\", \"uncertainty_xy [nm]\":\"uncertainty_xy\", \"uncertainty_z [nm]\":\"uncertainty_z\"},\n\n      // Optional\n      \"name\": \"ThunderSTORM (xls)\",\n      \"description\": \"a xls format used in thunderSTORM\"\n    },\n    \"ZEISS (txt)\": {\n      // Required\n      \"type\": \"table\",\n      \"extension\": \".txt\",\n      \"mode\": \"text\",\n      \"dtype\": \"float32\",\n      \"delimiter\": \"\\t\",\n      \"comments\": \"\",\n      // specify which row is the header, set to -1 if there is no header\n      \"header_row\": 0,\n      // specify how to transform the headers to the standard header defined in smlm format,\n      \"header_transform\": {\"Position X [nm]\":\"x\", \"Position Y [nm]\":\"y\", \"Position Z [nm]\":\"z\", \"First Frame\":\"frame\"},\n\n      // Optional\n      \"name\": \"ZEISS (txt)\",\n      \"description\": \"a txt format used in ZEISS microscope\"\n    },\n    \"ZEISSv1 (csv)\": {\n        // Required\n        \"type\": \"table\",\n        \"extension\": \".csv\",\n        \"mode\": \"text\",\n        \"dtype\": \"float32\",\n        \"delimiter\": \";\",\n        \"comments\": \"\",\n        // specify which row is the header, set to -1 if there is no header\n        \"header_row\": 0,\n        // specify how to transform the headers to the standard header defined in smlm format,\n        \"header_transform\": {\"Position X [nm]\":\"x\", \"Position Y [nm]\":\"y\", \"Position Z [nm]\":\"z\", \"First Frame\":\"frame\"},\n\n        // Optional\n        \"name\": \"ZEISSv1 (csv)\",\n        \"description\": \"a csv format used in ZEISS microscope\"\n      },\n      \"ZEISSv2 (csv)\": {\n        // Required\n        \"type\": \"table\",\n        \"extension\": \".csv\",\n        \"mode\": \"text\",\n        \"dtype\": \"float32\",\n        \"delimiter\": \";\",\n        \"comments\": \"\",\n        // specify which row is the header, set to -1 if there is no header\n        \"header_row\": 0,\n        // specify how to transform the headers to the standard header defined in smlm format,\n        \"header_transform\": {\"x [nm]\":\"x\", \"y [nm]\":\"y\", \"z [nm]\":\"z\", \"First Frame\":\"frame\"},\n\n        // Optional\n        \"name\": \"ZEISSv2 (csv)\",\n        \"description\": \"a csv format used for ZEISS microscope\"\n      },\n      \"RapidSTORM (txt)\": {\n        // Required\n        \"type\": \"table\",\n        \"extension\": \".txt\",\n        \"mode\": \"text\",\n        \"dtype\": \"float32\",\n        \"delimiter\": \" \",\n        \"comments\": \"\",\n        // specify which row is the header, set to -1 if there is no header\n        \"header_row\": 0,\n\n        // specify how to transform the headers to the standard header defined in smlm format,\n        \"header_transform\": {\"*all*\": 'identifier=\"([\\\\w\\\\d\\\\-_]+)\"', \"Position-0-0\":\"x\", \"Position-1-0\":\"y\", \"Position-2-0\":\"z\", \"ImageNumber-0-0\":\"frame\"},\n\n        // Optional\n        \"name\": \"RapidSTORM (txt)\",\n        \"description\": \"a text format used in RapidSTORM\"\n      },\n      \"Space Seperated List (txt)\": {\n        // Required\n        \"type\": \"table\",\n        \"extension\": \".txt\",\n        \"mode\": \"text\",\n        \"dtype\": \"float32\",\n        \"delimiter\": \" \",\n        \"comments\": \"\",\n        // specify which row is the header, set to -1 if there is no header\n        \"header_row\": 0,\n\n        // specify how to transform the headers to the standard header defined in smlm format,\n        \"header_transform\": {},\n\n        // Optional\n        \"name\": \"Space Seperated List (txt)\",\n        \"description\": \"A list of coordinates seperated with space.\"\n      },\n      \"Nikon NSTORM (txt)\": {\n        // Required\n        \"type\": \"table\",\n        \"extension\": \".txt\",\n        \"mode\": \"text\",\n        \"dtype\": \"float32\",\n        \"delimiter\": \"\\t\",\n        \"comments\": \"\",\n        // specify which row is the header, set to -1 if there is no header\n        \"header_row\": 0,\n        // specify how to transform the headers to the standard header defined in smlm format,\n        \"header_transform\": {\"X\":\"x\", \"Y\":\"y\", \"Z\":\"z\", \"Frame\":\"frame\"},\n\n        // Optional\n        \"name\": \"Nikon NSTORM (txt)\",\n        \"description\": \"a txt format exported from Nikon NSTORM software\"\n      },\n\n}\n\nexport const native_formats = {\n  \"smlm-table(binary)\": {\n    // Required\n    \"name\": \"smlm-table(binary)\",\n    \"type\": \"table\",\n    \"mode\": \"binary\",\n    \"extension\": \".bin\",\n    \"columns\": 0,\n    \"headers\": [],\n    \"dtype\": [],\n    \"shape\": [],\n    \"units\": [],\n    // Optional\n    \"name\": \"smlm-table(binary)\",\n    \"description\": \"the default smlm format for localization tables\"\n  },\n  \"smlm-image(binary)\": {\n    // Required\n    \"type\": \"image\",\n    \"mode\": \"binary\",\n    \"extension\": \".raw\",\n    \"dtype\": \"uint32\",\n    \"shape\": [512, 512, null],\n    \"offset\": 0,\n    // Optional\n    \"name\": \"smlm-image(binary)\",\n    \"description\": \"a format for 32-bit raw pixel image\"\n  },\n  \"smlm-table(csv)\": {\n    // Required\n    \"type\": \"table\",\n    \"mode\": \"text\",\n    \"extension\": \".csv\",\n    \"dtype\": \"float32\",\n    \"delimiter\": \",\",\n    \"comments\": \"#\",\n    // specify which row is the header, set to -1 if there is no header\n    \"header_row\": 0,\n    // specify how to transform the headers to the standard header defined in smlm format,\n    \"header_transform\": {},\n\n    // Optional\n    \"name\": \"smlm-table(csv)\",\n    \"description\": \"a format for export as csv format\"\n  }\n}\n\nexport const manifest_template = {\n  // Required\n  \"format_version\": \"0.2\",\n\n  \"formats\": {},\n\n  \"files\": [],\n\n  // Recommended\n  \"tags\": [],\n  \"name\": \"\",\n  \"description\": \"\",\n  // \"thumbnail\": \"\",\n  \"sample\": \"\",\n  \"labeling\": \"\",\n  // \"date\": \"\",\n\n  // Optional\n  // \"author\": \"\",\n  // \"citation\": \"\",\n  // \"email\": \"\",\n}\n\nexport const file_info_template = {\n  //Required\n  \"name\": \"\",\n  \"format\": \"smlm-table(binary)\",\n  \"channel\": \"default\",\n  \"rows\": 0,\n  // specify offsets for column(s), if need. set to {} if no offset needed.\n  \"offset\": {},\n\n  //Optional\n  \"metadata\": {},\n  \"exposure\": -1,\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/smlmFile.js","var shaderScripts = {\"shader-particle-renderer-vs\":\n  {type:\"x-shader/x-vertex\",\n  source: `#ifdef GL_ES\n  precision mediump float;\n  #endif\n  attribute vec2 uv;\n\n  uniform sampler2D sampler_particles;\n\n  uniform vec2 viewSize;\n  uniform vec4 scale;\n  uniform vec4 color1;\n  uniform vec2 clipX;\n  uniform vec2 clipY;\n  uniform vec2 clipZ;\n\n  uniform mat4 projectionMatrix;\n  uniform mat4 modelViewMatrix;\n\n  uniform float fov;\n  uniform vec3 camera;\n  uniform float pointSizeMin;\n  uniform float pointSizeMax;\n\n  varying vec4 col;\n  varying float alphaFactor;\n\n  void main() {\n  \tvec4 pos = texture2D(sampler_particles, uv);\n  \tbool isVisible = clipX.x - 0.5 <= pos.x && pos.x <= clipX.y - 0.5 && clipY.x - 0.5 <= pos.y && pos.y <= clipY.y - 0.5 && clipZ.x - 0.5 <= pos.z && pos.z <= clipZ.y - 0.5;\n  \tpos.xyz += -vec3(clipX.x + clipX.y, clipY.x + clipY.y, clipZ.x + clipZ.y)*0.5 + 0.5;\n  \tpos.xyz *= scale.xyz;\n\n  \tfloat distance = length(camera-(modelViewMatrix * pos).xyz);\n  \tgl_PointSize = scale.w*fov/distance*viewSize.y/2048.;\n\n  \talphaFactor = 1.;\n  \tif(gl_PointSize < 1.){\n  \t\talphaFactor = max(gl_PointSize, 1./16.);\n  \t}\n\n  \tcol = color1;\n\n  \tpos.w = 1.;\n  \tgl_Position = projectionMatrix  * modelViewMatrix * pos;\n\n  \tif(!isVisible){\n  \t\tcol.a = 0.;\n  \t}}`\n  },\n  \"shader-vs\":\n    {type:\"x-shader/x-vertex\",\n    source: `#ifdef GL_ES\n    precision mediump float;\n    #endif\n    attribute vec3 aPos;\n    attribute vec2 aTexCoord;\n    varying   vec2 uv;\n    varying vec2 uv_orig;\n    void main(void) {\n    \t gl_Position = vec4(aPos, 1.);\n    \t uv = aTexCoord;\n    \t uv_orig = uv;\n    }`\n  },\n  \"shader-particle-renderer-fs\":\n    {type:\"x-shader/x-fragment\",\n    source: `#ifdef GL_ES\n    precision mediump float;\n    #endif\n    varying vec4 col;\n    varying float alphaFactor;\n\n    void main() {\n    \tgl_FragColor = col;\n    \tgl_FragColor.a *= alphaFactor;\n    }`\n  }\n}\n\n\nfunction getShader(gl, id) {\n  var shaderScript = shaderScripts[id];\n  var shader;\n  if (shaderScript.type == \"x-shader/x-fragment\") {\n    shader = gl.createShader(gl.FRAGMENT_SHADER);\n  } else if (shaderScript.type == \"x-shader/x-vertex\")\n    shader = gl.createShader(gl.VERTEX_SHADER);\n  else\n    return null;\n  gl.shaderSource(shader, shaderScript.source);\n  gl.compileShader(shader);\n  if (gl.getShaderParameter(shader, gl.COMPILE_STATUS) == 0)\n    alert(\"error compiling shader '\" + id + \"'\\n\\n\" + gl.getShaderInfoLog(shader));\n  return shader;\n}\n\nvar gl;\nvar ext;\n\nvar prog_render_particles;\n\nvar FBO_particles;\n\n// particle position buffer in a texture\nvar texture_particles;\n\nvar particlesWidth = 512;\nvar particlesHeight = 512;\n\nvar particleCount = 64 * 64 * 64;// can also be set to lower than particlesWidth * particlesHeight\n\n// main animation loop vars\n\nvar sizeX = 1024; // texture size (must be powers of two, must also be greater than the particles texture *?*)\nvar sizeY = 512;\n\nvar viewX = sizeX; // viewport size (ideally exactly the texture size)\nvar viewY = sizeY;\n\nvar delay = 1 / 60;\nvar it = 1; // main loop buffer toggle\nvar frame = 0; // frame counter (to be resetted every 1000ms)\nvar framecount = 0; // not resetted\nvar fps;\nvar time;\nvar timer;\nvar starttime = new Date().getTime();\n\nvar particleBuffer;\n\n//Threejs setup\nvar camera, scene, group, controls;\nvar gui, scopeParams;\n\nvar update_webgl_status_callback;\nvar canvas;\nvar ScopeParams = function () {\n  this.scaleX = 1;\n  this.scaleY = 1;\n  this.scaleZ = 1;\n  this.pointSize = 1;\n\n  this.distance = 4.0;\n  this.fov = 16.;\n  this.pointSizeMin = 0;\n  this.pointSizeMax = 12;\n}\n\nfunction onViewportChanged(){\n  viewX = window.innerWidth;\n  viewY = window.innerHeight;\n  canvas.width = viewX;\n  canvas.height = viewY;\n\n  var angle = 75;\n  var aspect = viewX / viewY;\n  var near = .1;\n  var far = 10000;\n\n  camera = new THREE.PerspectiveCamera(angle, aspect, near, far);\n  scene = new THREE.Scene();\n  group = new THREE.Object3D();\n  scene.add(camera);\n  scene.add(group);\n  camera.lookAt(group);\n\n  // Camera projection matrix\n\n  updateMatrices();\n\n  controls = new THREE.TrackballControlsWithPropagation(camera, canvas);\n\n  group.position.set(0, 0, 0);\n\n  camera.position.set(0, 0, scopeParams.distance);\n\n  camera.fov = scopeParams.fov;\n  camera.projectionMatrix = new THREE.Matrix4().makePerspective(camera.fov, window.innerWidth / window.innerHeight, camera.near, camera.far);\n\n  controls.rotateSpeed = 1.0;\n  controls.zoomSpeed = 1.2;\n  controls.panSpeed = 0.8;\n\n  controls.dynamicDampingFactor = 0.15;\n}\n\nvar rerender = false;\nfunction setRerender() {\n  totalNumberOfChunks = 0;\n  scopeParams['Total # of locations'] = 0;\n  for(var i = 0; i < fileIDs.length; i++){\n    if(scopeParams['active ' + i] && scopeParams['alpha ' + i] > 0){\n      totalNumberOfChunks += files[fileIDs[i]].locations.numChunks;\n      scopeParams['Total # of locations'] += files[fileIDs[i]].locations.rows;\n    }\n    var color = scopeParams['color ' + i];\n    if(typeof(color) == \"string\"){\n      var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(color);\n      scopeParams['color ' + i] = [\n        parseInt(result[1], 16),\n        parseInt(result[2], 16),\n        parseInt(result[3], 16)\n      ];\n    }\n  }\n  rerender = true;\n}\n\nexport function load3DViewer(canvasElement, update_callback) {\n  update_webgl_status_callback = update_callback;\n  scopeParams = new ScopeParams();\n  // gui = new dat.GUI();\n  gui = new dat.GUI({ autoPlace: false });\n  var customContainer = document.getElementById('gui-webgl');\n  customContainer.appendChild(gui.domElement);\n  scopeParams['Total # of locations'] = 0;\n\n  scopeParams['reset scale'] = function(){\n    scopeParams['x'] = 1;\n    scopeParams['y'] = 1;\n    scopeParams['z'] = 1;\n    scopeParams['point size'] = 3;\n    rerender = true;\n  };\n\n  scopeParams['reset scale']();\n  var scaleFolder = gui.addFolder('Scale (x10)');\n  scaleFolder.add(scopeParams, 'x', 0, 10).listen().onChange(setRerender);\n  scaleFolder.add(scopeParams, 'y', 0, 10).listen().onChange(setRerender);\n  scaleFolder.add(scopeParams, 'z', 0, 10).listen().onChange(setRerender);\n  scaleFolder.add(scopeParams, 'point size', 0, 20).listen().onChange(setRerender);\n  scaleFolder.add(scopeParams, 'reset scale');\n\n  scopeParams['reset clipping'] = function(){\n    scopeParams['x min'] = 0;\n    scopeParams['x max'] = 1;\n    scopeParams['y min'] = 0;\n    scopeParams['y max'] = 1;\n    scopeParams['z min'] = 0;\n    scopeParams['z max'] = 1;\n    rerender = true;\n  };\n  scopeParams['reset clipping']();\n  var clippingFolder = gui.addFolder('Clipping');\n  clippingFolder.add(scopeParams, 'x min', 0, 1).listen().onChange(setRerender);\n  clippingFolder.add(scopeParams, 'x max', 0, 1).listen().onChange(setRerender);\n  clippingFolder.add(scopeParams, 'y min', 0, 1).listen().onChange(setRerender);\n  clippingFolder.add(scopeParams, 'y max', 0, 1).listen().onChange(setRerender);\n  clippingFolder.add(scopeParams, 'z min', 0, 1).listen().onChange(setRerender);\n  clippingFolder.add(scopeParams, 'z max', 0, 1).listen().onChange(setRerender);\n  clippingFolder.add(scopeParams, 'reset clipping');\n\n  gui.add(scopeParams, 'Total # of locations').listen();\n\n  canvas = canvasElement; //document.getElementById(\"c\");\n  try {\n    gl = canvas.getContext(\"webgl\", { depth: false, preserveDrawingBuffer: true });\n  } catch (e) {\n  }\n  if (!gl) {\n    alert(\"Meh! Y u no support WebGL !?!\");\n    return;\n  }\n\n  [\"OES_texture_float\"].forEach(function (name) {\n    console.log(\"check \" + name);\n    try {\n      ext = gl.getExtension(name);\n    } catch (e) {\n      alert(e);\n    }\n    if (!ext) {\n      alert(\"Meh! Y u no support \" + name + \" !?!\");\n      return;\n    }\n    ext = false;\n  });\n\n  if (gl.getParameter(gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS) == 0) {\n    alert(\"Meh! Y u no support vertex shader textures !?!\");\n    return;\n  }\n\n\n  files = [];\n  fileIDs = [];\n\n  document.addEventListener(\"orientationchange\", window.onresize = onViewportChanged);\n  window.addEventListener('DOMMouseScroll', mousewheel, false);\n  window.addEventListener('mousewheel', mousewheel, false);\n\n  onViewportChanged();\n\n  gl.bindBuffer(gl.ARRAY_BUFFER, gl.createBuffer());\n\n  var d = 1 / 512;\n  var locationCoordsBuffer = new ArrayBuffer(512 * 512 * 16);\n  locationCoordsBuffer.float32 = new Float32Array(locationCoordsBuffer);\n  for(var i = 0; i < 512 ; i++){\n    for(var j = 0; j < 512 ; j++){\n      locationCoordsBuffer.float32[(i * 512 + j)*2 + 0] = d / 2 + j * d;\n      locationCoordsBuffer.float32[(i * 512 + j)*2 + 1] = d / 2 + i * d;\n    }\n  }\n  var attributesBuffer = new ArrayBuffer(512 * 512 * 16);\n  attributesBuffer.float32 = new Float32Array(attributesBuffer);\n\n  FBO_particles = gl.createFramebuffer();\n  texture_particles = createAndBindParticleTexture(attributesBuffer.float32, FBO_particles);\n\n  var aParticleLoc = 1;\n  prog_render_particles = createAndLinkParticleRenderer(aParticleLoc);\n\n  gl.useProgram(prog_render_particles);\n  gl.uniform1i(gl.getUniformLocation(prog_render_particles, \"sampler_particles\"), 0);\n\n  gl.enableVertexAttribArray(aParticleLoc);\n  particleBuffer = gl.createBuffer();\n  gl.bindBuffer(gl.ARRAY_BUFFER, particleBuffer);\n  gl.bufferData(gl.ARRAY_BUFFER, locationCoordsBuffer.float32, gl.STATIC_DRAW);\n  gl.vertexAttribPointer(aParticleLoc, 2, gl.FLOAT, false, 8, 0);\n\n  timer = setInterval(fr, 1000);\n  time = new Date().getTime() - starttime;\n\n  gl.blendFunc(gl.SRC_ALPHA, gl.ONE);\n  gl.blendEquation(gl.FUNC_ADD);\n  gl.clearColor(0, 0, 0, 1);\n\n  anim();\n}\n\nfunction createAndLinkProgram(fsId) {\n  var program = gl.createProgram();\n  gl.attachShader(program, getShader(gl, \"shader-vs\"));\n  gl.attachShader(program, getShader(gl, fsId));\n  gl.linkProgram(program);\n  return program;\n}\n\nfunction createAndLinkParticleRenderer(aParticleLoc) {\n  var program = gl.createProgram();\n  gl.attachShader(program, getShader(gl, \"shader-particle-renderer-vs\"));\n  gl.attachShader(program, getShader(gl, \"shader-particle-renderer-fs\"));\n  gl.bindAttribLocation(program, aParticleLoc, \"uv\"); // can't use getAttribLocation later so we must bind before linking\n  gl.linkProgram(program);\n  return program;\n}\n\nfunction createAndBindTexture(glPixels, scale, fbo, filter) {\n  var texture = gl.createTexture();\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n  gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\n  gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, sizeX / scale, sizeY / scale, 0, gl.RGBA, gl.FLOAT, glPixels);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, filter);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, filter);\n  gl.bindFramebuffer(gl.FRAMEBUFFER, fbo);\n  gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n  checkFrameBuffer();\n  return texture;\n}\n\nfunction createAndBindParticleTexture(glPixels, fbo) {\n  var texture = gl.createTexture();\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n  gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\n  gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, particlesWidth, particlesHeight, 0, gl.RGBA, gl.FLOAT, glPixels);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n  gl.bindFramebuffer(gl.FRAMEBUFFER, fbo);\n  gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n  checkFrameBuffer();\n  return texture;\n}\n\nvar newLocations = false;\nfunction onlocations() {\n  newLocations = true;\n}\n\nfunction loadNewLocationTextures() {\n  if (newLocations) {\n    // assume only one file has been loaded and it's the last in the list of IDs\n    var locations = files[fileIDs[fileIDs.length-1]].locations;\n    gl.activeTexture(gl.TEXTURE1);\n    gl.bindTexture(gl.TEXTURE_2D, texture_particles);\n    gl.bindFramebuffer(gl.FRAMEBUFFER, FBO_particles);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, particlesWidth, particlesHeight, 0, gl.RGBA, gl.FLOAT, locations.stridedFloat32Arrays[1]);\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture_particles, 0);\n\n    setRerender();\n  }\n}\n\nfunction checkFrameBuffer() {\n  var status = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\n  if (status != gl.FRAMEBUFFER_COMPLETE) {\n    console.log(\"Framebuffer, y u not completed yet!?\");\n    for (var i in gl) {\n      if (typeof (gl[i]) == \"number\" && gl[i] == status) {\n        console.log(\"-> \" + i);\n      }\n    }\n  }\n}\n\nfunction setUniforms(program) {\n  gl.uniform2f(gl.getUniformLocation(program, \"viewSize\"), viewX, viewY);\n\n  gl.uniform2f(gl.getUniformLocation(program, \"aspect\"), Math.max(1, viewX / viewY), Math.max(1, viewY / viewX));\n\n  gl.uniform4f(gl.getUniformLocation(program, \"scale\"), scopeParams['x'], scopeParams['y'], scopeParams['z'], scopeParams['point size']);\n\n  var minX = Math.min(scopeParams['x min'], scopeParams['x max']);\n  var maxX = Math.max(scopeParams['x min'], scopeParams['x max']);\n  gl.uniform2f(gl.getUniformLocation(program, \"clipX\"), minX, maxX);\n\n  var minY = Math.min(scopeParams['y min'], scopeParams['y max']);\n  var maxY = Math.max(scopeParams['y min'], scopeParams['y max']);\n  gl.uniform2f(gl.getUniformLocation(program, \"clipY\"), minY, maxY);\n\n  var minZ = Math.min(scopeParams['z min'], scopeParams['z max']);\n  var maxZ = Math.max(scopeParams['z min'], scopeParams['z max']);\n  gl.uniform2f(gl.getUniformLocation(program, \"clipZ\"), minZ, maxZ);\n\n  gl.uniform1f(gl.getUniformLocation(program, \"fov\"), 1./Math.tan(scopeParams.fov/180*Math.PI));\n  gl.uniform3f(gl.getUniformLocation(program, \"camera\"), 0, 0, scopeParams.distance);\n\n  gl.uniform1i(gl.getUniformLocation(program, \"sampler_particles\"), 1);\n}\n\nvar oldProjectionMatrixArray = new Float32Array(16);\nvar oldFov = 0;\nvar oldViewMatrixArray = new Float32Array(16);\nvar isStill = true; var wasStill = true;\n\nfunction anim(t) {\n  wasStill = isStill;\n  isStill = true;\n  for(var i = 0; i < 16; i++){\n    isStill = isStill &&\n      oldProjectionMatrixArray[i] - camera._projectionMatrixArray[i] == 0 &&\n      oldViewMatrixArray[i] - camera._viewMatrixArray[i] == 0;\n  }\n  isStill = isStill && camera.fov == oldFov\n  if(!isStill){\n    oldFov = camera.fov;\n    oldProjectionMatrixArray.set(camera._projectionMatrixArray);\n    oldViewMatrixArray.set(camera._viewMatrixArray);\n  }\n\n  loadNewLocationTextures();\n\n  controls.update();\n  updateMatrices();\n\n  renderParticles();\n\n  if(t)\n    throttle(t);\n\n  requestAnimationFrame(anim);\n\n  newLocations = false;\n\n  frame++;\n  framecount++;\n}\n\nvar totalNumberOfChunks = 0;\nvar chunksPerAnimationFrame = 0;\nvar lastChunkRendered = -1;\nvar targetFps = 24;\nvar lastRenderTime = 0;\n\nfunction throttle(t){\n  var dt = t -lastRenderTime;\n  lastRenderTime = t;\n  if(isStill){\n    return;\n  }\n  if(dt < 1000 / targetFps){\n    chunksPerAnimationFrame+=0.25;\n  }else{\n    chunksPerAnimationFrame-=0.25;\n  }\n  chunksPerAnimationFrame = Math.max(chunksPerAnimationFrame, 0);\n  chunksPerAnimationFrame = Math.min(chunksPerAnimationFrame, totalNumberOfChunks);\n}\n\nfunction renderParticles() {\n  gl.viewport(0, 0, viewX, viewY);\n  gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n  var newMove = wasStill && !isStill;\n  if(rerender || !isStill || newLocations){\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    gl.flush();\n    lastChunkRendered = -1;\n  }\n  if(isStill && lastChunkRendered == -1 && !newLocations && !rerender || totalNumberOfChunks == 0){\n    rerender = false;\n    return;\n  }\n  rerender = false;\n\n  gl.bindBuffer(gl.ARRAY_BUFFER, particleBuffer);\n  gl.useProgram(prog_render_particles);\n  setUniforms(prog_render_particles);\n\n  gl.uniformMatrix4fv(gl.getUniformLocation(prog_render_particles, \"projectionMatrix\"), false, camera._projectionMatrixArray);\n  gl.uniformMatrix4fv(gl.getUniformLocation(prog_render_particles, \"modelViewMatrix\"), false, camera._viewMatrixArray);\n\n  gl.enable(gl.BLEND);\n\n  gl.activeTexture(gl.TEXTURE1);\n  var chunk = 0;\n  loopFiles:\n  for(var i = 0; i < fileIDs.length; i++){\n    var file = files[fileIDs[i]];\n    var lastChunk = file.locations.numChunks - 1;\n    var color = scopeParams['color ' + i];\n    var alpha = scopeParams['alpha ' + i];\n    var active = scopeParams['active ' + i] && alpha > 0;\n    if(!active){\n      continue loopFiles; // skip the chunks of this file\n    }\n    gl.uniform4f(gl.getUniformLocation(prog_render_particles, \"color1\"), color[0]/255, color[1]/255, color[2]/255, alpha);\n    for(var j = 0; j < file.locations.numChunks; j++){\n      if(chunk > lastChunkRendered){\n        if(chunk <= lastChunkRendered + chunksPerAnimationFrame && chunk < totalNumberOfChunks){\n          var locationTexture = file.locations.textures[j];\n          gl.bindTexture(gl.TEXTURE_2D, locationTexture);\n          var pointCount = file.locations.bufferLength;\n          if(j == lastChunk){\n            pointCount = file.locations.rows - file.locations.bufferLength * lastChunk\n            lastChunkRendered = -1;\n          }\n          gl.drawArrays(gl.POINTS, 0, pointCount);\n        }else{\n          lastChunkRendered = chunk - 1;\n          break loopFiles; // get out of both for loops\n        }\n      }\n      chunk++;\n    }\n  }\n  gl.disable(gl.BLEND);\n  gl.flush();\n}\n\nfunction updateMatrices() {\n  scene.updateMatrixWorld();\n  camera.matrixWorldInverse.getInverse(camera.matrixWorld);\n\n  if (!camera._viewMatrixArray)\n    camera._viewMatrixArray = new Float32Array(16);\n  camera.matrixWorldInverse.flattenToArray(camera._viewMatrixArray);\n\n  if (!camera._projectionMatrixArray)\n    camera._projectionMatrixArray = new Float32Array(16);\n  camera.projectionMatrix.flattenToArray(camera._projectionMatrixArray);\n\n  if (!group.__webglInit) {\n    group._modelViewMatrix = new THREE.Matrix4();\n    group._objectMatrixArray = new Float32Array(16);\n    group._modelViewMatrixArray = new Float32Array(16);\n  }\n\n  group.matrixWorld.flattenToArray(group._objectMatrixArray);\n  group._modelViewMatrix.multiplyToArray(camera.matrixWorldInverse, group.matrixWorld, group._modelViewMatrixArray);\n}\n\nvar colors = [\n  [0, 255, 0],\n  [255, 0, 255],\n  [0, 0, 255]\n];\n\nvar files = [];\nvar fileIDs = [];\nfunction createFileID(file){\n    if(file.hash && file.hash.length>5) return file.hash\n    else\treturn file.name + '.' + file.size;\n}\nfunction gotFile(file){\n\treturn fileIDs.indexOf(createFileID(file)) > -1;\n}\nfunction addFile(file){\n\tvar fileID = createFileID(file);\n\tfiles[fileID] = file;\n\tfileIDs.push(fileID);\n}\n\nexport function show3DLocalizations(options, update_status_callback){\n  // var fileid = createFileID({hash: options.file_hash, name: options.file_name, size: options.file_size})\n  // if(fileIDs.indexOf(fileid)>=0){\n  //   console.log('already added to the 3d view.')\n  //   update_status_callback({rendering_status:\"3D view rendered(loc.:\"+options.filteredRows+\", file:\"+options.file_name+\").\", rendering_progress: 100, rendering: false})\n  //   return false\n  // }\n  const bufferLength = (512 * 512); // defaulting to 2M\n  const before = Date.now();\n  const strideTitles = [\"x\", \"y\", \"z\"]\n  const stridedArrayBuffers = [];\n  const stridedFloat32Arrays = [];\n  const float32Arrays = options.tableDict;\n  const isFiltered = options.isFiltered;\n  const numChunks = isFiltered?Math.ceil(options.filteredRows/bufferLength): Math.ceil(options.rows/bufferLength);\n  for(var chunkIndex = 0; chunkIndex < numChunks; chunkIndex++){\n      stridedArrayBuffers[chunkIndex] = new ArrayBuffer(bufferLength * 16); // 4x4 for four float32 values of four bytes for the values for the given stride indices\n      stridedFloat32Arrays[chunkIndex]  = new Float32Array(stridedArrayBuffers[chunkIndex]);\n  }\n  const  normalization = {\n        scale: Math.max(\n            (options.max[strideTitles[0]]-options.min[strideTitles[0]]),\n            (options.max[strideTitles[1]]-options.min[strideTitles[1]]),\n            (options.max[strideTitles[2]]-options.min[strideTitles[2]])\n        ),\n        offsetX: (options.max[strideTitles[0]]-options.min[strideTitles[0]])/2,//options.avg[strideTitles[0]],\n        offsetY: (options.max[strideTitles[1]]-options.min[strideTitles[1]])/2,//options.avg[strideTitles[1]],\n        offsetZ: (options.max[strideTitles[2]]-options.min[strideTitles[2]])/2,//options.avg[strideTitles[2]],\n        offsetT: 0,//options.avg[strideTitles[3]],\n   }\n   if(update_status_callback)\n   update_status_callback({rendering: true, rendering_progress: 0, rendering_status: \"normalize into strided array chunks\"})\n\n  let progress = -1;\n  let filteredLine = 0;\n  for (var line = 0; line < options.rows; line++) {\n      var newProgress = Math.floor(100 * line / (options.rows+1));\n      if(newProgress != progress){\n          progress = newProgress;\n          if(update_status_callback)\n          update_status_callback({rendering_progress: progress})\n      }\n      if(isFiltered && !isFiltered[line]) continue\n      var chunkIndex = Math.floor(filteredLine/bufferLength);\n      var chunkLine = filteredLine - chunkIndex * bufferLength;\n      var stridedFloat32Array = stridedFloat32Arrays[chunkIndex];\n\n      stridedFloat32Array[chunkLine*4 + 0] = (float32Arrays[strideTitles[0]][line]-normalization.offsetX)/normalization.scale;\n      stridedFloat32Array[chunkLine*4 + 1] = (float32Arrays[strideTitles[1]][line]-normalization.offsetY)/normalization.scale;\n      stridedFloat32Array[chunkLine*4 + 2] = (float32Arrays[strideTitles[2]][line]-normalization.offsetZ)/normalization.scale;\n      stridedFloat32Array[chunkLine*4 + 3] = 1;//(float32Arrays[strideTitles[3]][line]-normalization.offsetT)/normalization.scale;\n      filteredLine += 1;\n  }\n  if(update_status_callback)\n  update_status_callback({rendering_status:\"normalize into strided array chunks [ms]: \"+ (Date.now() - before)})\n  const locations = {file_hash: options.file_hash, filteredRows:options.filteredRows, file_name: options.file_name, file_size: options.file_size, bufferLength: bufferLength, numChunks: numChunks, rows: options.rows, headers: options.headers, stridedArrayBuffers:stridedArrayBuffers}\n  console.log( \"normalize into strided array chunks [ms]: \"+ (Date.now() - before), locations);\n  render3DLocalizations(locations)\n  update_status_callback({rendering_status:\"3D view rendered(loc.:\"+options.filteredRows+\", file:\"+options.file_name+\").\", rendering_progress: 100, rendering: false})\n}\n\nfunction render3DLocalizations(locations) {\n  if (locations) {\n    var file = {hash: locations.file_hash, name: locations.file_name, size: locations.file_size}\n    var fileid = createFileID(file)\n    var indx = fileIDs.indexOf(fileid)\n    if(indx>=0){\n      file = files[fileid]\n    }\n    locations.stridedFloat32Arrays = [];\n    locations.textures = [];\n    for (var chunk = 0; chunk < locations.numChunks; chunk++) {\n      locations.stridedFloat32Arrays[chunk] = new Float32Array(locations.stridedArrayBuffers[chunk]);\n      locations.textures[chunk] = createAndBindParticleTexture(locations.stridedFloat32Arrays[chunk], FBO_particles);\n    }\n    console.log(files)\n    file.locations = locations;\n\n    totalNumberOfChunks += locations.numChunks;\n\n    if(indx>=0){\n      onlocations();\n    }\n    else{\n      addFile(file);\n      onlocations();\n      var colorIndex = fileIDs.length % colors.length;\n      if(locations.numChunks > 0){\n        var colorFolder = gui.addFolder(locations.file_name + ' (#' + locations.filteredRows +  ')');\n        var N = fileIDs.indexOf(fileid);\n        var activN = 'active ' + N;\n        var colorN = 'color ' + N;\n        var alphaN = 'alpha ' + N;\n        scopeParams[activN] = true;\n        scopeParams[colorN] = colors[colorIndex];\n        scopeParams[alphaN] = 0.9;\n        colorFolder.add(scopeParams, activN).onChange(setRerender);\n        colorFolder.addColor(scopeParams, colorN).onChange(setRerender);\n        colorFolder.add(scopeParams, alphaN, 0, 1).onChange(setRerender);\n        colorFolder.open();\n      }\n      console.log(files, fileIDs);\n      console.log(\"locations uploaded to WebGL textures:\");\n      console.log(locations);\n    }\n\n    chunksPerAnimationFrame = totalNumberOfChunks; // this will throttle down quickly enough\n  } else {\n    console.log(\"something went wrong\");\n  }\n}\n\nfunction fr() { // updates every second\n  scopeParams.Fps = frame;\n  gui.__controllers[0].updateDisplay();\n  // document.getElementById(\"fps\").textContent = isStill ? 0 : frame;\n  // document.getElementById(\"ppf\").textContent = isStill ? 0 : Math.floor(chunksPerAnimationFrame) + \" x 256k\";\n  if(update_webgl_status_callback)\n    update_webgl_status_callback({fps: isStill ? 0 : frame, ppf: isStill ? 0 : Math.floor(chunksPerAnimationFrame) + \" x 256k\"})\n  frame = 0; // reset the frame counter\n}\n\nfunction mousewheel(event) {\n  if(event.target != canvas) return;\n  event.preventDefault();\n  event.stopPropagation();\n\n  var fovMAX = 130;\n  var fovMIN = 1;\n\n  camera.fov -= event.wheelDeltaY * 0.0033;\n  camera.fov = Math.max(Math.min(camera.fov, fovMAX), fovMIN);\n  camera.projectionMatrix = new THREE.Matrix4().makePerspective(camera.fov, window.innerWidth / window.innerHeight, camera.near, camera.far);\n\n  scopeParams.fov = camera.fov;\n  return false;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pointCloud3D.js","<template>\n  <div class=\"viewer\">\n    <div class=\"md-title\">{{title}}</div>\n      <!-- <md-card >\n        <md-card-content > -->\n          <md-app v-show=\"options\">\n            <md-app-toolbar style=\"z-index: 99\" class=\"md-transparent md-dense\" md-elevation=\"0\" v-if=\"!menuVisible || (options && options.tableDict && show_filter)||(selected_filter!== null && selected_filter_max!== null && selected_filter_min!== null)\">\n              <div class=\"md-toolbar-row\"  flex>\n                <md-button class=\"md-fab md-primary\" @click=\"menuVisible=true\" v-if=\"!menuVisible && options\">\n                  <md-icon>menu</md-icon>\n                </md-button>\n                <div class=\"md-layout md-xsmall-hide\" v-if=\"options\">\n                    <md-switch v-show=\"rendered && options && options.tableDict && options.tableDict.z\" v-model=\"use_3d\" :disabled=\"!options || !options.tableDict || (!options.tableDict.z && !use_3d)\" @change=\"switch3DView(use_3d)\" name=\"use LUT\">3D View</md-switch>&nbsp;&nbsp;\n                </div>\n\n                <div class=\"md-toolbar-section-start slider-toolbar\" v-if=\"filter_enabled && rendered && selected_filter!== null && selected_filter_max!== null && selected_filter_min!== null\">\n                  <div class=\"md-layout-item\"  flex>\n                    <span class=\"md-xsmall-hide\" >Set range for</span> <md-chip>{{selected_filter}}</md-chip> {{(filter_ranges[selected_filter][1]-filter_ranges[selected_filter][0]).toFixed(1)}}, {{filter_ranges[selected_filter]}}\n                    <div>\n                    <vue-slider ref=\"filter-slider\"  @drag-end=\"update_selected_filter()\" :disabled=\"rendering\" tooltip-dir=\"bottom\" :max=\"selected_filter_max\" :min=\"selected_filter_min\" v-model=\"filter_ranges[selected_filter]\"></vue-slider>\n                    <md-tooltip> Adjust filter range for \"{{this.selected_filter}}\"</md-tooltip>\n                    </div>\n                  </div>\n                </div>\n\n                <!-- <div class=\"md-layout-item\" v-if=\"show_brightness\">\n                  <vue-slider @drag-end=\"updateCanvas()\" :disabled=\"rendering\" tooltip-dir=\"bottom\" :max=\"255\" :min=\"1\" v-model=\"current_render2d_config.brightness\"></vue-slider>\n                  <md-tooltip> Adjust brightness </md-tooltip>\n                </div> -->\n\n                <div class=\"md-toolbar-section-start\" v-if=\"options && options.tableDict && show_filter\" flex>\n                  <md-button  v-show=\"rendered && show_filter\" class=\"md-accent md-icon-button\" :disabled=\"rendering\"  @click=\"plotHist()\">\n                    <md-icon>refresh</md-icon>\n                    <md-tooltip> Refresh </md-tooltip>\n                  </md-button>\n\n                    <md-field>\n                      <label for=\"filter-id\" class=\"md-xsmall-hide\">Filter Expression (e.g. frame>1000 and random()<0.1)</label>\n                      <md-input v-model=\"filter_expression\" :disabled=\"rendering\" @keyup.enter.native=\"plotHist()\" type=\"text\">\n                      </md-input>\n                      <span class=\"md-helper-text md-xsmall-hide\">{{filter_tooltip}}</span>\n                      <md-tooltip>{{filter_tooltip}}</md-tooltip>\n                    </md-field>\n                </div>\n                <div class=\"md-toolbar-section-end md-xsmall-hide\" layout=\"row\" v-show=\"running && !menuVisible && options && screenWidth>800\">\n                    <p>{{running_status}} {{running_status.length<30? ', please wait, this may take a while.': ''}} </p>\n                    <md-progress-bar md-mode=\"indeterminate\" v-show=\"!(running_progress && running_progress>0)\"></md-progress-bar>\n                    <md-progress-bar :md-value=\"running_progress\" v-show=\"running_progress && running_progress>0\"></md-progress-bar>\n                </div>\n\n              </div>\n\n            </md-app-toolbar>\n            <md-app-drawer :md-active.sync=\"menuVisible\" md-persistent=\"full\">\n\n              <div class=\"md-toolbar-row\" v-show=\"!running\" flex>\n                  <slot name=\"actions\" :download=\"downloadSmlmFile\">\n                    <md-button class=\"md-fab md-primary\" @click=\"selectFile(true)\">\n                     <md-icon>add</md-icon>\n                     <md-tooltip>Load another file</md-tooltip>\n                    </md-button>\n                    <md-button class=\"md-primary\" @click=\"shareFile\">\n                      <md-icon>share</md-icon>Share\n                      <md-tooltip>share this smlm file</md-tooltip>\n                    </md-button>\n                    <div class=\"md-toolbar-section-end\">\n                      <md-button class=\"md-icon-button md-dense md-raised\" @click=\"menuVisible = !menuVisible\">\n                        <md-icon>keyboard_arrow_left</md-icon>\n                      </md-button>\n                    </div>\n                  </slot>\n              </div>\n              <div layout=\"row\" v-if=\"running\">\n                <md-divider></md-divider>\n                <p>{{running_status}} {{running_status.length<30? ', please wait, this may take a while.': ''}} </p>\n                <md-progress-bar md-mode=\"indeterminate\" v-show=\"!(running_progress && running_progress>0)\"></md-progress-bar>\n                <md-progress-bar :md-value=\"running_progress\" v-show=\"running_progress && running_progress>0\"></md-progress-bar>\n                <br>\n              </div>\n\n              <div v-if=\"smlm\">\n                <span class=\"md-list-item-text\">Files</span>\n                <md-divider></md-divider>\n                <md-list v-if=\"loaded_sample && smlm\">\n                    <md-list-item @click=\"showFilesDialog=false;loadS3File(f, h);\" v-for=\"(f, h) in loaded_sample.files\" :key=\"h\" :md-expand=\"smlm&&smlm.manifest.hash == h\" :md-expanded.sync=\"f.expandFiles\">\n                      {{smlm.manifest.hash == h?'+':''}} <md-chip v-for=\"tag in f.tags\" :key=\"tag\">{{tag}}</md-chip> <span :class=\"selected_s3_file == h?'files-item-1-selected':'files-item-1'\">{{f.name}}</span>\n                      <md-list v-if=\"smlm&&smlm.manifest.hash == h\" slot=\"md-expand\">\n                          <md-list-item  @click=\"showFilesDialog=false;loadSmlmFile(sf);\" v-for=\"(sf, i) in smlm.files\" :key=\"sf.hash\">\n                            <span  :class=\"selected_smlm_file_hash == sf.hash?'files-item-2-selected':'files-item-2'\">&nbsp;&nbsp;-&nbsp;\n                              <md-chip v-for=\"(tag, n) in sf.tags\" :key=\"tag\" v-if=\"n<3\">{{tag}}</md-chip>{{sf.name}}\n                            </span>\n                          </md-list-item>\n                      </md-list>\n                    </md-list-item>\n                </md-list>\n                <md-list v-if=\"!loaded_sample && smlm && smlm.files\">\n                  <md-list-item @click=\"showFilesDialog=false;loadSmlmFile(sf);\" v-for=\"(sf, i) in smlm.files\" :key=\"sf.hash\">\n                    <span :class=\"selected_smlm_file_hash == sf.hash?'files-item-2-selected':'files-item-2'\">&nbsp;-&nbsp;\n                      <md-chip v-for=\"(tag, n) in sf.tags\" :key=\"tag\" v-if=\"n<3\">{{tag}}</md-chip>{{sf.name}}\n                    </span>\n                  </md-list-item>\n                </md-list>\n              </div>\n              <div class=\"md-layout\"  md-vertical-align=\"end\" v-show=\"false\">\n                <input class=\"md-file\" type=\"file\" @change=\"fileSelected\" ref=\"select_file_input\"></input>\n              </div>\n\n              <!-- <div class=\"md-toolbar-row\" v-if=\"options && options.tableDict && show_filter\" flex>\n                <md-divider></md-divider>\n                <md-button  v-show=\"rendered && show_filter\" class=\"md-accent md-icon-button\" :disabled=\"rendering\"  @click=\"plotHist()\">\n                  <md-icon>refresh</md-icon>\n                  <md-tooltip> Refresh </md-tooltip>\n                </md-button>\n                <div class=\"md-toolbar-section-start\" flex>\n                  <md-field>\n                    <label for=\"filter-id\">Filter Expression (e.g. frame>1000 and random()<0.1)</label>\n                    <md-input v-model=\"filter_expression\" :disabled=\"rendering\" @keyup.enter.native=\"plotHist()\" type=\"text\">\n                    </md-input>\n                    <span class=\"md-helper-text\">{{filter_tooltip}}</span>\n                    <md-tooltip>{{filter_tooltip}}</md-tooltip>\n                  </md-field>\n                </div>\n              </div> -->\n\n              <div v-if=\"filter_enabled\">\n                <span class=\"md-list-item-text\">Apply filter</span>\n                <md-divider></md-divider>\n                <p >click a name to set the value range:</p>\n                <div v-if=\"options && options.headers\">\n                  <md-chip  v-for=\"(header, index) in options.headers\" :key=\"index\" v-show=\"options&&options.headers\" :class=\"(selected_filter == header)? 'md-primary': '' \" md-clickable @click=\"show_filter=false; switch_selected_filter(header)\">{{header}}\n                    <md-tooltip>click to set the range of '{{header}}'</md-tooltip>\n                  </md-chip>\n                </div>\n\n                <md-button :disabled=\"rendering\" @click=\"reset_filters()\">\n                  <md-icon>settings_backup_restore</md-icon>reset filter\n                  <md-tooltip> Reset filter </md-tooltip>\n                </md-button>\n                <md-button  v-show=\"rendered\" @click=\"show_filter=!show_filter; selected_filter=null\">\n                  <md-icon>details</md-icon>filter expression\n                  <md-tooltip> Show filter expression</md-tooltip>\n                </md-button>\n                <!-- <div class=\"md-toolbar-row\" v-if=\"selected_filter!== null && selected_filter_max!== null && selected_filter_min!== null\" flex>\n                  <div class=\"md-layout-item\">\n                    <vue-slider @drag-end=\"update_selected_filter()\" :disabled=\"rendering\" tooltip-dir=\"bottom\" :max=\"selected_filter_max\" :min=\"selected_filter_min\" v-model=\"filter_ranges[selected_filter]\"></vue-slider>\n                    <md-tooltip> Adjust filter range for \"{{this.selected_filter}}\"</md-tooltip>\n                  </div>\n                </div> -->\n                <br>\n                <br>\n              </div>\n              <span class=\"md-list-item-text\">Adjust brightness</span>\n              <md-divider></md-divider>\n              <div class=\"md-toolbar-row\" flex>\n                <div class=\"md-layout-item\">\n                  <div>\n                  <vue-slider ref=\"brightness-slider\" @drag-end=\"updateCanvas()\" :disabled=\"rendering\" tooltip-dir=\"bottom\" :max=\"255\" :min=\"1\" v-model=\"current_render2d_config.brightness\"></vue-slider>\n                  <md-tooltip> Adjust brightness </md-tooltip>\n                  </div>\n                  <br>\n                </div>\n              </div>\n\n              <span class=\"md-list-item-text\">More options</span>\n              <md-divider></md-divider>\n\n              <md-list slot=\"md-expand\">\n                <md-list-item class=\"md-primary menu-button\" >\n                  <md-switch  v-model=\"use_lut\" @change=\"updateCanvas()\" name=\"use LUT\"><span class=\"md-list-item-text\">Apply LUT</span></md-switch>\n                </md-list-item>\n                <md-list-item>\n                  <md-field>\n                    <label for=\"pixel_size\">Pixel Size (nm)</label>\n                    <md-input type=\"text\" @keyup.enter.native=\"plotHist()\" v-model=\"pixel_size\" name=\"pixel_size\"></md-input>\n                  </md-field>\n                  <md-field>\n                    <label for=\"offset_mode\">Offset Mode</label>\n                    <md-select v-model=\"offset_mode\" @md-closed=\"options && options.tableDict && plotHist()\" name=\"offset-mode\">\n                      <md-option value=\"min-max\" >min-max</md-option>\n                      <md-option value=\"zero-max\">zero-max</md-option>\n                    </md-select>\n                  </md-field>\n                </md-list-item>\n\n                <md-list-item v-if=\"tags\">\n                    <md-chips v-model=\"tags\" :md-limit=\"20\" md-placeholder=\"Type a tag and press enter...\">\n                       <template slot=\"md-chip\" slot-scope=\"{ chip }\">\n                         {{ chip }}\n                         <!-- <small v-if=\"chip === currentProject\">(Marcos Moura)</small> -->\n                       </template>\n                       <div class=\"md-helper-text\">please use tags to label this sample. E.g.: microtubule, hela, AF647</div>\n                     </md-chips>\n                </md-list-item>\n\n                <md-list-item class=\"md-primary menu-button\" @click=\"showInfoDialog=true\">\n                  <md-icon>info</md-icon><span class=\"md-list-item-text\">Info</span>\n                  <md-tooltip>show info</md-tooltip>\n                </md-list-item>\n                <md-list-item class=\"md-primary menu-button\" @click=\"downloadSmlmFile\">\n                  <md-icon>file_download</md-icon><span class=\"md-list-item-text\">Export</span>\n                  <md-tooltip v-if=\"smlm&&smlm.isSMLM\">save as .smlm file</md-tooltip>\n                  <md-tooltip v-else>save as a compressed zip file</md-tooltip>\n                </md-list-item>\n                <md-list-item class=\"md-primary menu-button\" v-show=\"export_histogram_png\" @click=\"download_image(export_histogram_png, 'exported_input.png')\" >\n                  <md-icon>save</md-icon><span class=\"md-list-item-text\">Save image</span>\n                  <md-tooltip>download and save current image</md-tooltip>\n                </md-list-item>\n              </md-list>\n            </md-app-drawer>\n\n            <md-app-content>\n\n               <!-- <span v-show=\"options.tableDict && !localizationNumber\" class=\"md-warn md-subheader\"> No localization available to show. </span> -->\n\n               <md-progress-bar  v-if=\"(rendered||rendering) && options && options.tableDict\" :md-value=\"rendering_progress\"></md-progress-bar>\n\n               <div class=\"canvas-container\" v-if=\"options\">\n                 <div class=\"md-layout render-info\" v-if=\"(rendered||rendering) && options && options.tableDict\">\n                   <span>{{rendering_status}} {{rendering_progress>0?rendering_progress+'%':''}} </span><span class=\"render-info\" v-show=\"use_3d\"> &nbsp;&nbsp;fps:{{fps}}, ppf:{{ppf}} </span>\n                 </div>\n\n                 <div v-show=\"rendered && !use_3d\" id=\"leaflet_histogram\" ></div>\n                 <!-- <canvas v-show=\"rendered\" v-if=\"!use_3d\" id=\"histogram_canvas\" v-bind:width=\"histogram_width\" v-bind:height=\"histogram_height\"></canvas> -->\n                 <!-- <canvas v-show=\"false\" v-if=\"!use_3d\" id=\"histogram_canvas_buffer\" v-bind:width=\"histogram_width\" v-bind:height=\"histogram_height\"></canvas> -->\n\n                 <div v-show=\"use_3d\" id=\"gui-webgl\"> </div>\n                 <canvas v-show=\"use_3d\" id=\"histogram_canvas_3d\"></canvas>\n                </div>\n\n               <!-- <md-empty-state\n                v-show=\"options && !rendered\"\n                md-icon=\"devices_other\"\n                md-label=\"Load a localization table\"\n                md-description=\"Load a table, you'll be able to upload your file, render it, filter it and share with people.\">\n              </md-empty-state> -->\n               <!-- <md-content>\n                 <div id=\"histogram_map\"></div>\n               </md-content> -->\n\n               <md-empty-state flex\n                v-if=\"!options&&!shared_url_mode\"\n                md-icon=\"hourglass_empty\"\n                md-label=\"Open a localization table\"\n                md-description=\"Render your table in the browser, process and share it with our server.\">\n                 <div v-if=\"running\">\n                  <md-progress-bar md-mode=\"indeterminate\" v-show=\"!(running_progress && running_progress>0)\"></md-progress-bar>\n                  <md-progress-bar :md-value=\"running_progress\" v-show=\"running_progress && running_progress>0\"></md-progress-bar>\n                  <p>{{running_status}} {{running_status.length<30? ', please wait...': ''}} </p>\n                 </div>\n                 <md-button class=\"md-primary md-raised\" :disabled=\"running\" @click=\"selectFile(false)\">\n                   <md-icon>add</md-icon>Open a file\n                 </md-button>\n                 <md-button id=\"repository-button\" class=\"md-primary\" :disabled=\"running\" to=\"/repository\">\n                   No data? checkout the repository for public data.\n                 </md-button>\n                 <br>\n                 <md-card class=\"faq-card\">\n                   <md-card-content>\n                     <h2>FAQ</h2>\n                     <h3>What are the supported file formats?</h3>\n                     <p>Currently, you can load files with the following formats: <a href=\"https://github.com/imodpasteur/smlm-file-format\" target=\"_blank\">SMLM(.smlm)</a>, ThunderSTORM(.csv/.xls), RapidSTROM, ZEISS(ELYRA), Nikon NSTORM(txt), .png, .jpg.</p>\n                     <p> If you have other file format which is not supported yet, please <a href=\"https://www.dropbox.com/request/IyZ7HkzHUpB0t5Mkp46l\" target=\"_blank\">upload a sample file</a>, and <a href=\"https://oeway.typeform.com/to/rdkPmd\" target=\"_blank\">send us a message</a> to describe your file format, we will try to support your file format. </p>\n                     <h3>where does my data go?</h3>\n                     <p>Don't worry, your data will stay in your browser, and will not go to our server unless you use the sharing feature of ShareLoc.xyz.\n                     If you share data privately with our server, by default, no one else could access it, and we won't use it for other purposes without your permission.</p>\n                     <md-button class=\"md-primary\" to=\"/faq\">read more</md-button>\n                   </md-card-content>\n                  </md-card>\n\n               </md-empty-state>\n               <md-empty-state flex\n                v-if=\"!options&&shared_url_mode\"\n                md-icon=\"hourglass_empty\"\n                md-label=\"Loading sample...\"\n                md-description=\"Please wait, this may take a while...\">\n                 <div v-if=\"running\">\n                  <md-progress-bar :md-value=\"running_progress\"></md-progress-bar>\n                  <p>{{running_status}} {{running_status.length<30? ', please wait...': ''}} </p>\n                 </div>\n                 <div v-if=\"loading_shared_url\">\n                   <md-progress-spinner :md-diameter=\"100\" :md-stroke=\"10\" md-mode=\"indeterminate\"></md-progress-spinner>\n                 </div>\n               </md-empty-state>\n             </md-app-content>\n         </md-app>\n        <!-- </md-card-content> -->\n\n      <!-- </md-card> -->\n      <md-dialog-alert\n      :md-active.sync=\"showErrorDialog\"\n      :md-content=\"error_content\"\n      md-confirm-text=\"OK\" :md-click-outside-to-close=\"false\"/>\n\n      <md-dialog :md-active.sync=\"showUploading\" :md-click-outside-to-close=\"false\">\n        <md-dialog-content>\n          <div layout=\"row\">\n            <p>{{running_status}} {{running_status.length<30? ', please wait, this may take a while.': ''}} </p>\n            <md-progress-bar md-mode=\"indeterminate\" v-show=\"!(running_progress && running_progress>0)\"></md-progress-bar>\n            <md-progress-bar :md-value=\"running_progress\" v-show=\"running_progress && running_progress>0\"></md-progress-bar>\n            <br>\n          </div>\n        </md-dialog-content>\n        <md-dialog-actions>\n          <md-button class=\"md-primary\" @click=\"showUploading=false\">Close</md-button>\n        </md-dialog-actions>\n      </md-dialog>\n\n\n      <md-dialog :md-active.sync=\"showImportDialog\" :md-click-outside-to-close=\"false\">\n        <md-dialog-content>\n          <div class=\"md-layout-row md-gutter\">\n          <div class=\"md-flex\">\n            <md-field v-if=\"selected_file\">\n              <label for=\"file-format\">File Format</label>\n              <md-select v-model=\"text_file_format\" name=\"file-format\" id=\"file-format\">\n                <md-option v-if=\"selected_file_name.endsWith(format.extension) || selected_file_name.indexOf('.')==-1\" :value=\"key\" v-for=\"(format, key) in supported_file_formats\" :key=\"key\">{{key}}</md-option>\n              </md-select>\n            </md-field>\n\n            <md-field>\n              <label for=\"pixel_size\">Pixel Size (nm)</label>\n              <md-input type=\"text\" v-model=\"pixel_size\" name=\"pixel_size\"></md-input>\n            </md-field>\n\n            <div class=\"md-flex\">\n                <label>Tags for this channel/file</label>\n                <md-chips v-model=\"tags\" :md-limit=\"20\" md-placeholder=\"Type a file tag and press enter...\">\n                   <template slot=\"md-chip\" slot-scope=\"{ chip }\">\n                     {{ chip }}\n                     <!-- <small v-if=\"chip === currentProject\">(Marcos Moura)</small> -->\n                   </template>\n                   <div class=\"md-helper-text\">e.g. SR for SuperRes image, WF for widefield</div>\n                 </md-chips>\n            </div>\n            <md-switch v-model=\"append_mode\" v-if=\"this.smlm\" name=\"append\">Append to the current file</md-switch>\n            <md-switch v-model=\"show_more_import_options\" name=\"more_options\">more options</md-switch>\n            <div v-show=\"show_more_import_options\">\n              <label>File content:</label>\n              <p v-for=\"(line, i) in file_sample_lines\" :key=\"i\"> {{line}} </p>\n              <p>...</p>\n              <!-- <md-field>\n                <label for=\"channel_name\">Channel Name</label>\n                <md-input type=\"text\" v-model=\"channel_name\" name=\"channel_name\"></md-input>\n              </md-field> -->\n              <!-- <md-field>\n                <label for=\"delimiter\"> Delimiter </label>\n                <md-input type=\"text\" v-model=\"delimiter\" name=\"delimiter\"></md-input>\n              </md-field> -->\n              <md-field>\n                <label for=\"offset_mode\"> Offset Mode</label>\n                <md-select v-model=\"offset_mode\" name=\"offset-mode\">\n                  <md-option value=\"min-max\" >min-max</md-option>\n                  <md-option value=\"zero-max\" >zero-max</md-option>\n                </md-select>\n              </md-field>\n              <md-field>\n                <label for=\"offset_x\">Offset(x)</label>\n                <md-input type=\"text\" v-model=\"offset_x\" name=\"offset_x\"></md-input>\n              </md-field>\n              <md-field>\n                <label for=\"offset_y\">Offset(y)</label>\n                <md-input type=\"text\" v-model=\"offset_y\" name=\"offset_y\"></md-input>\n              </md-field>\n            </div>\n          </div>\n          </div>\n      </md-dialog-content>\n      <md-dialog-actions>\n        <md-button class=\"md-primary\" @click=\"loadFile(); showImportDialog=false\">OK</md-button>\n        <md-button class=\"md-primary\" @click=\"showImportDialog=false\">Cancel</md-button>\n      </md-dialog-actions>\n      </md-dialog>\n\n      <md-dialog :md-active.sync=\"showInfoDialog\">\n        <md-dialog-content>\n          <div class=\"md-layout-row md-gutter\">\n            <div class=\"md-flex\">\n                <label>Tags</label>\n                <md-chips v-model=\"tags\" :md-limit=\"20\" md-placeholder=\"Type a tag and press enter...\">\n                   <template slot=\"md-chip\" slot-scope=\"{ chip }\">\n                     {{ chip }}\n                     <!-- <small v-if=\"chip === currentProject\">(Marcos Moura)</small> -->\n                   </template>\n                   <div class=\"md-helper-text\">Please use tags to describe your sample</div>\n                 </md-chips>\n            </div>\n          </div>\n      </md-dialog-content>\n      <md-dialog-actions>\n        <md-button class=\"md-primary\" @click=\"showInfoDialog=false\">OK</md-button>\n        <md-button class=\"md-primary\" @click=\"showInfoDialog=false\">Cancel</md-button>\n      </md-dialog-actions>\n      </md-dialog>\n      <md-dialog :md-active.sync=\"showProcessDialog\">\n        <md-toolbar class=\"md-transparent md-dense\" md-elevation=\"0\">\n          <div class=\"md-toolbar-row\" flex>\n              <div class=\"md-toolbar-section-start\" >\n                <h2>Processing with A-net</h2>\n              </div>\n          </div>\n        </md-toolbar>\n        <md-dialog-content>\n            <label>Step 1: Select an shareLoc.xyz model:</label>\n            <md-field>\n              <!-- <label for=\"worker\"></label> -->\n              <md-select v-model=\"selected_worker_uri\" name=\"worker\" @md-selected=\"workerSelected\">\n                <md-option :value=\"worker.uri\" v-for=\"worker in worker_list\" :key=\"worker._id.$oid\">{{worker.uri}}</md-option>\n              </md-select>\n            </md-field>\n            <div v-if=\"selected_worker&&selected_worker.tags\">\n              <p v-if=\"selected_worker.description\">{{selected_worker.description}}</p>\n              <label>In order to use this model, your sample must contain the following tag(s):</label>\n              <div class=\"md-layout-row md-gutter\">\n                <md-chip  v-for=\"tag in selected_worker.tags\" :key=\"tag\" :disabled=\"anet_running\" @click=\"tags.indexOf(tag)<0?tags.push(tag):null\" md-static md-clickable>\n                  {{tag}}\n                </md-chip>\n                <div class=\"md-helper-text\">You can click the above tag(s) to tag the sample.</div>\n              </div>\n            </div>\n          <br>\n            <div class=\"md-flex\">\n                <label>Step 2: tag your sample</label>\n                <md-chips v-model=\"tags\" :disabled=\"anet_running\" :md-limit=\"20\" md-placeholder=\"Type a tag and press enter...\">\n                   <template slot=\"md-chip\" slot-scope=\"{ chip }\">\n                     {{ chip }}\n                     <!-- <small v-if=\"chip === currentProject\">(Marcos Moura)</small> -->\n                   </template>\n                   <div class=\"md-helper-text\">Please make sure these tags describe your sample accurately.</div>\n                </md-chips>\n            </div>\n            <br>\n            <p>Warning: If the tags you provided do not match the actual content of your image, ** please do not trust the result **.</p>\n            <md-switch v-model=\"use_widefield\" v-if=\"this.widefield_available && this.selected_worker_uri && this.selected_worker_uri.indexOf('_wf')!== -1\" name=\"include_widefield\">Include widefield</md-switch>\n\n\n\n            <br>\n            <p>Currently, we only provide limited types of model trained with microtubules and mitochondria. In order to support more, please consider contributing your data through \"project one-for-all\".</p>\n            <md-button class=\"md-primary\" :disabled=\"loading_worker_list || anet_running\" @click=\"sendForTraining()\"><md-icon>send</md-icon>Send for Training</md-button>\n            <!-- <md-switch v-model=\"support140\">Join project 140</md-switch> -->\n            <md-button class=\"md-primary\" v-show=\"!show140\" @click=\"show140=true\">About project one-for-all</md-button>\n            <br>\n            <p v-if=\"worker_validation_msg\">{{worker_validation_msg}}</p>\n\n          <!-- <md-tabs md-fixed class=\"md-transparent\">\n            <md-tab id=\"hist-tab\" md-label=\"PALM\" :md-active=\"!show_anet_output\">\n              <canvas id=\"anet_input_canvas\" width=\"2560\" height=\"2560\"></canvas>\n            </md-tab>\n            <md-tab id=\"anna-tab\" md-label=\"shareLoc.xyz\" :md-active=\"show_anet_output\">\n              <canvas id=\"anet_output_canvas\" width=\"2560\" height=\"2560\" ></canvas>\n            </md-tab>\n          </md-tabs> -->\n          <div class=\"md-layout-row md-gutter\" v-if=\"anet_running\">\n            <div class=\"md-flex\">\n                <md-progress-spinner :md-diameter=\"100\" :md-stroke=\"10\" md-mode=\"indeterminate\"></md-progress-spinner>\n            </div>\n          </div>\n       </md-dialog-content>\n       <md-dialog-actions>\n           <!-- <md-button class=\"md-primary\" v-show=\"!show140\" @click=\"show140=true\">Project 140</md-button> -->\n           <md-button class=\"md-primary md-raised\" :disabled=\"loading_worker_list || anet_running\" @click=\"runAnetProcess()\"><md-icon>play_arrow</md-icon>Process</md-button>\n           <md-button class=\"md-primary\" @click=\"showProcessDialog=false\">Cancel</md-button>\n       </md-dialog-actions>\n      </md-dialog>\n\n      <md-dialog :md-active.sync=\"show140\">\n        <md-toolbar class=\"md-transparent md-dense\" md-elevation=\"0\">\n          <div class=\"md-toolbar-row\" flex>\n              <div class=\"md-toolbar-section-start\">\n                <h2>Please support project one-for-all -- one model for all</h2>\n              </div>\n          </div>\n        </md-toolbar>\n        <md-dialog-content>\n          <p>As you may know that better results can be achieved if neural networks was trained on data with the same or similar type of data. Typically we need to train a dedicated model for each type of data or structure.</p>\n          <p>However, this type of model will not scale, because we will end up with a huge collection of pretrained model files, consuming lots of resources and time to train but can not be used except for data looks similar. Plus, it will pose lots of challenges to the infrastructure to store, manage these models.</p>\n          <p>To address this issue, we are initiating a project aiming for train a single neural network model for all types of biological structure, all types of labeling technique. </p>\n          <p>The main idea is to train a single neural network incrementally with more and more data.</p>\n          <p>It a hard task because when a single network sees different type of data, it will get confused between different types thus compromise the quality.</p>\n          <p>The switch mechanism shown in our paper provides a way to allow the network to adjust itself to different type of data. While we have shown it works to train a single network for 2~3 types of data, we would like to scale the experiment to tens or even hundreds types.</p>\n          <p>We will train the network 24x7, and it will be continuously improved as the amount of data grows. Snapshots of the trained model will be freely available for everyone.</p>\n\n          <p>We name it \"project one-for-all\" or \"project 140\".</p>\n          <p>The following components will be available for everyone as the project goes:</p>\n          <p>- an open database for hosting localization microscopy data, accessible through <a href=\"#/repository\" target=\"_blank\">the repository</a>.</p>\n          <p>- a portable smlm file format for saving large localization data, multi-channel, multi-FOV scanning, or even raw images.</p>\n          <p>- pre-trained models for all types of structure, microscopy etc. </p>\n          <br>\n          <p>To support our mission, please donate your data to the project by clicking \"Send for Training\".</p>\n         </md-dialog-content>\n        <md-dialog-actions>\n          <md-button class=\"md-primary md-raised\"  @click=\"show140=false\">OK</md-button>\n\n        </md-dialog-actions>\n      </md-dialog>\n\n\n      <md-dialog :md-active.sync=\"showShareDialog\" v-if=\"smlm\">\n        <md-dialog-content>\n          <div class=\"md-layout-row md-gutter\">\n            <div class=\"md-flex\">\n              <md-toolbar class=\"md-transparent md-dense\" md-elevation=\"0\">\n                <div class=\"md-toolbar-row\" flex>\n                    <div class=\"md-toolbar-section-start\" >\n                      <h2>Share your sample</h2>\n                    </div>\n                </div>\n              </md-toolbar>\n\n              <form v-if=\"smlm\">\n                <!-- <md-field v-for=\"(v, k) in smlm.manifest\" :key=\"k\" v-if=\"k!='formats' && k!='format_version' && k!='files' && k!='thumbnail' \">\n                  <label>{{k}}</label>\n                  <md-input v-model=\"smlm.manifest[k]\" type=\"text\"> </md-input>\n                </md-field> -->\n                <md-field>\n                  <label>Name</label>\n                  <md-input v-model=\"smlm.manifest.name\" type=\"text\"> </md-input>\n                </md-field>\n                <md-field>\n                  <label>Description</label>\n                  <md-input v-model=\"smlm.manifest.description\" type=\"text\"> </md-input>\n                </md-field>\n                <label>Tags</label>\n                <md-chips v-model=\"smlm.manifest.tags\" :md-limit=\"20\" md-placeholder=\"type a tag and press enter...\">\n                   <template slot=\"md-chip\" slot-scope=\"{ chip }\">\n                     {{ chip }}\n                     <!-- <small v-if=\"chip === currentProject\">(Marcos Moura)</small> -->\n                   </template>\n                   <div class=\"md-helper-text\">Please use tags to describe the structure, labeled protein, the dye etc.</div>\n                </md-chips>\n                <md-switch v-model=\"get_shared_link\" name=\"get_shared_link\">Get a private shared link</md-switch>\n                <md-switch v-model=\"make_public\" name=\"make_public\">Publish to the Repository</md-switch>\n                <p v-show=\"make_public\">A permanent public url will be generated for your data, and posted on the website. You won't be able to remove the url or the data, but you can tag it as 'deprecated'.</p>\n                <md-autocomplete v-if=\"make_public\" v-model=\"smlm.manifest.license\" :md-options=\"licenses\" md-dense>\n                  <label>License</label>\n                </md-autocomplete>\n                <p v-if=\"make_public\">To promote an open community, if no license specified, you data will be automatically licensed under a <a href=\"https://creativecommons.org/licenses/by/4.0/\" target=\"_blank\">Creative Commons Attribution 4.0 International license.</a> </p>\n                <md-field v-if=\"make_public\">\n                  <label>How to cite?</label>\n                  <md-input v-model=\"smlm.manifest.citeAs\" type=\"text\"></md-input>\n                </md-field>\n              </form>\n              <div class=\"md-layout md-alignment-center-center\">\n                <img class=\"thumbnail-img\" :src=\"smlm.manifest.thumbnail\"  :alt=\"smlm.manifest.name\">\n              </div>\n            </div>\n          </div>\n      </md-dialog-content>\n      <md-dialog-actions>\n        <md-button class=\"md-primary\" v-if=\"store.authrole=='admin'\" @click=\"shareSample(true, true); showShareDialog=false\">Force Upload</md-button>\n        <md-button class=\"md-primary\" @click=\"shareSample(true); showShareDialog=false\">OK</md-button>\n        <md-button class=\"md-primary\" @click=\"showShareDialog=false\">Cancel</md-button>\n      </md-dialog-actions>\n      </md-dialog>\n\n      <md-dialog :md-active.sync=\"showFilesDialog\">\n        <md-dialog-content>\n          <div class=\"md-layout-row md-gutter\">\n            <div class=\"md-flex\">\n              <md-button class=\"md-primary \" @click=\"showFilesDialog=false;selectFile(false)\">\n               <md-icon>add</md-icon> Load a new file\n               <md-tooltip>Open a File</md-tooltip>\n              </md-button>\n              <md-button class=\"md-primary\" @click=\"showFilesDialog=false;selectFile(true)\">\n                 <md-icon>add</md-icon>Append a file\n                 <md-tooltip>Add an image to the current smlm file</md-tooltip>\n              </md-button>\n              <!-- <div class=\"dropbox\">\n                <input type=\"file\" webkitdirectory mozdirectory msdirectory odirectory directory multiple @change=\"openFilesChange($event.target.name, $event.target.files); openFilesCount = $event.target.files.length\" accept=\"image/*\" class=\"input-file\">\n                  <p>\n                    Drag your file(s) here to begin<br> or click to browse\n                  </p>\n              </div> -->\n\n            </div>\n          </div>\n      </md-dialog-content>\n      <md-dialog-actions>\n        <md-button class=\"md-primary\" @click=\"showFilesDialog=false\">OK</md-button>\n      </md-dialog-actions>\n      </md-dialog>\n      <md-dialog :md-active.sync=\"showSharedLink\">\n        <md-dialog-content>\n          <div class=\"md-layout-row md-gutter\">\n            <div class=\"md-flex\">\n              <h1>Please copy the following URL for sharing</h1>\n              <a :href=\"shared_link\" target=\"_blank\">{{shared_link}}</a>\n            </div>\n          </div>\n      </md-dialog-content>\n      <md-dialog-actions>\n        <md-button class=\"md-primary\" @click=\"showSharedLink=false\">OK</md-button>\n      </md-dialog-actions>\n      </md-dialog>\n      <md-snackbar :md-position=\"'center'\" class=\"md-accent\" :md-active.sync=\"showSnackbar\" :md-duration=\"snackbar_duration\">\n       <span>{{snackbar_info}}</span>\n       <md-button class=\"md-accent\" @click=\"showSnackbar=false\">close</md-button>\n      </md-snackbar>\n </div>\n</template>\n\n<script>\nimport { Filters, hot_lut } from '../utils.js'\nimport axios from 'axios';\nimport { saveAs } from 'file-saver';\nimport { smlmFile, native_formats, supported_text_formats, supported_image_formats, manifest_template } from '../smlmFile';\nimport { load3DViewer, show3DLocalizations } from '../pointCloud3D.js'\nconst pica = require('pica')();\n// const yx = L.latLng\n\nfunction getBase64Image(img) {\n    // Create an empty canvas element\n    var canvas = document.createElement(\"canvas\");\n    canvas.width = img.width;\n    canvas.height = img.height;\n\n    // Copy the image contents to the canvas\n    var ctx = canvas.getContext(\"2d\");\n    ctx.drawImage(img, 0, 0);\n\n    // Get the data-URL formatted image\n    // Firefox supports PNG and JPEG. You could check img.src to\n    // guess the original format, but be aware the using \"image/jpg\"\n    // will re-encode the image.\n    var dataURL = canvas.toDataURL(\"image/png\");\n\n    return dataURL.replace(/^data:image\\/(png|jpg);base64,/, \"\");\n}\n\nfunction dataURItoBlob(dataURI) {\n    if(typeof dataURI !== 'string'){\n        throw new Error('Invalid argument: dataURI must be a string');\n    }\n    dataURI = dataURI.split(',');\n    var type = dataURI[0].split(':')[1].split(';')[0],\n        byteString = atob(dataURI[1]),\n        byteStringLength = byteString.length,\n        arrayBuffer = new ArrayBuffer(byteStringLength),\n        intArray = new Uint8Array(arrayBuffer);\n    for (var i = 0; i < byteStringLength; i++) {\n        intArray[i] = byteString.charCodeAt(i);\n    }\n    return new Blob([intArray], {\n        type: type\n    });\n}\n\nexport default {\n  name: 'viewer',\n  props: ['title'],\n  data () {\n    return {\n      selected_s3_file: null,\n      selected_smlm_file_hash: null,\n      selected_smlm_file: null,\n      filter_enabled: false,\n      expandActions: false,\n      menuVisible: false,\n      show_filter: false,\n      use_lut: true,\n      use_3d: false,\n      localizationNumber: 0,\n      frameNumber: 0,\n      histogram_image: null,\n      rendering_status: '',\n      rendering_progress: 0,\n      filter_expression: '',\n      filter_tooltip: '',\n      histogram_width: 2560,\n      histogram_height: 2560,\n      filter_ranges:{},\n      selected_filter: null,\n      selected_filter_max: 0,\n      selected_filter_min: 0,\n      rendering: false,\n      rendered: false,\n      render3d_loaded: false,\n      export_histogram_png: null,\n      map: null,\n      fps:0,\n      ppf:0,\n      selected_file: null,\n      renderWorker: null,\n      filterWorker: null,\n      hist_table: [],\n      options: null,\n      showInfoDialog: false,\n      showShareDialog: false,\n      showFilesDialog: false,\n      showErrorDialog: false,\n      error_content: 'error occured.',\n      text_file_format: '',\n      running_status: '',\n      running: false,\n      running_progress: 0,\n      running: false,\n      smlm: null,\n      channel_name: 'default',\n      pixel_size: 20,\n      offset_x: 0,\n      offset_y: 0,\n      // delimiter: ',',\n      offset_mode: 'min-max',\n      running_progress: 0,\n      selected_channel: 0,\n      tags: [],\n      metadata: {},\n      show_more_import_options: false,\n      append_mode: false,\n      showImportDialog: false,\n      get_shared_link: true,\n      make_public: false,\n      licenses: ['CC BY 4.0', 'CC BY-NC 4.0', 'CC BY-SA 4.0', 'CC BY-ND 4.0'],\n      shared_link: '',\n      showSharedLink: false,\n      loaded_sample: null,\n      loading_shared_url: false,\n      shared_url_mode: false,\n      showProcessDialog: false,\n      openFilesCount: 0,\n      anet_running: false,\n      anet_taskid: null,\n      screenWidth: 0,\n      show_anet_output: false,\n      anet_output_available: false,\n      anet_output_img: null,\n      anet_output_sample_hash: null,\n      current_render2d_config: {brightness: 1},\n      hist_render2d_config: {brightness: 1},\n      anet_render2d_config: {brightness: 1},\n      supported_file_formats: {},\n      file_sample_lines: '',\n      use_widefield: false,\n      widefield_available: false,\n      worker_list: [],\n      worker_validation_msg: null,\n      file_tags: [],\n      selected_worker: null,\n      selected_worker_uri: null,\n      loading_worker_list: false,\n      leafletMap: null,\n      _canvas_layer: null,\n      _canvas_data: null,\n      current_displaying: null,\n      show140: false,\n      support140: true,\n      showUploading: false,\n      store: this.$root.$data.store,\n      api: this.$root.$data.store.api,\n      snackbar_info: \"\",\n      showSnackbar: false,\n      snackbar_duration: 3000,\n    }\n  },\n  watch: {\n  \tmenuVisible () {\n    \tsetTimeout(() => {\n        if(this.$refs['filter-slider'])\n          this.$refs['filter-slider'].refresh()\n        if(this.$refs['brightness-slider'])\n          this.$refs['brightness-slider'].refresh()\n        this.leafletMap.invalidateSize();\n        this.$forceUpdate()\n        // const evt = window.document.createEvent('UIEvents');\n        // evt.initUIEvent('resize', true, false, window, 0);\n        // window.dispatchEvent(new Event('resize'))\n\n      }, 800)\n    }\n  },\n  mounted(){\n    this.screenWidth = window.innerWidth\n    this.store.event_bus.$on('resize', (newsize)=>{\n      this.screenWidth = newsize.width\n      console.log('window size changed.', newsize.width)\n      if(newsize.width>1000 && !this.menuVisible && this.options){\n        this.menuVisible = true;\n      }\n      else if(newsize.width<=1000 && this.menuVisible){\n        this.menuVisible = false;\n      }\n    })\n\n\n    \n    this.api.show = this.show;\n\n    this.supported_file_formats = {}\n    Object.assign(this.supported_file_formats, {'SMLM format': {}})\n    Object.assign(this.supported_file_formats, supported_text_formats)\n    Object.assign(this.supported_file_formats, supported_image_formats)\n    // this is needed to for chrome to work\n    this.filterWorker = new Worker(\"static/js/AsyncFilter.js\")\n    this.renderWorker = new Worker(\"static/js/AsyncRenderer.js\")\n\n    // if(window.innerWidth>1000){\n    //   this.menuVisible = true;\n    // }\n\n    //\n    // this.leafletMap = L.map('leaflet_histogram', {\n    //   minZoom: 1,\n    //   maxZoom: 100,\n    //   center: [0, 0],\n    //   zoom: 1,\n    //   crs: L.CRS.Simple\n    // });\n\n    if(this.$route.query.file){\n      this.loadSample(this.$route.query.file)\n    }\n  },\n  methods: {\n    show(info, duration) {\n        this.snackbar_info = info\n        this.snackbar_duration = duration || 3000\n        this.showSnackbar = true\n    },\n    workerSelected(uri){\n      this.selected_worker = null\n      for(let i=0;i<this.worker_list.length;i++){\n        if(this.worker_list[i].uri == uri){\n          this.selected_worker = this.worker_list[i]\n          break\n        }\n      }\n\n    },\n    updateCanvas(){\n      if(this.show_anet_output){\n        this.current_render2d_config = this.anet_render2d_config\n        const img = this.anet_output_img\n        var canvas = document.createElement(\"canvas\");\n        canvas.width = img.width\n        canvas.height = img.height\n        this.histogram_width = canvas.width\n        this.histogram_height = canvas.height\n        var ctx = canvas.getContext(\"2d\");\n        ctx.drawImage(img, 0, 0)\n        var canvas_img_data = ctx.getImageData(0, 0, canvas.width, canvas.height);\n        this.render_canvas(canvas_img_data, this.current_render2d_config.brightness)\n      }else{\n        // var canvas = document.getElementById(\"histogram_canvas\");\n        // canvas.width = this.histogram_width\n        // canvas.height = this.histogram_height\n        this.current_render2d_config = this.hist_render2d_config\n        this.render_canvas(null, this.current_render2d_config.brightness)\n      }\n\n    },\n    shareFile(){\n      if(this.store.signed_in){\n        this.generateThumbnail().then(()=>{\n          this.showShareDialog=true\n          if(this.smlm) this.smlm.manifest.license = this.smlm.manifest.license || 'CC BY 4.0'\n        }).catch((e)=>{\n          console.error(e)\n          this.api.show(\"something went wrong.\", 5000)\n          this.error_content = \"Failed to share this sample, something went wrong.\"\n          this.showErrorDialog = true\n        })\n      }\n      else\n        this.api.showLogin()\n    },\n    openFilesChange(fieldName, fileList){\n      if (!fileList.length) return;\n      console.log(fieldName, fileList)\n    },\n    getFileExtension(filename) {\n      return (/[.]/.exec(filename)) ? /[^.]+$/.exec(filename)[0] : undefined;\n    },\n    async loadSample(url){\n      try{\n        this.loading_shared_url=true\n        this.shared_url_mode = true\n        this.running = true\n        const response = await axios({\n          url,\n          method: 'GET',\n          responseType: 'blob',\n          onDownloadProgress: (progressEvent) => {\n            this.running_status = `Downloading ${progressEvent.loaded}/${progressEvent.total}`;\n            if(progressEvent.total)\n            this.running_progress = progressEvent.loaded/progressEvent.total * 100;\n            this.$forceUpdate();\n          }\n        })\n        const file = response.data\n        const file_name = file.name || url.split('/').pop()\n        this.selected_file_name = file_name\n        this.selected_file = file\n        if(file.type=='application/zip' || file.type=='application/smlm' || (file_name && file_name.endsWith('.smlm'))){\n          this.loadSmlm()\n        }\n        else{\n          this.loadFile()\n        }\n        // this.tags = this.loaded_sample.tags.slice()\n        // this.thumbnail = this.loaded_sample.thumbnail\n        // this.selected_s3_file=h;\n      }\n      catch(e){\n        alert(`failed to load sample: ${e}`)\n      }\n      finally{\n        this.loading_shared_url=false\n      }\n    },\n    loadSmlmFile(file_info){\n      console.log('loading ...', file_info)\n       this.file_tags = file_info.tags\n       if(file_info.type == \"table\"){\n         this.options = Object.assign({'xy_range': [0, 0, 0, 0], 'pixel_size': this.pixel_size, frame_range: [0, 0]}, file_info.data)\n         // this.shareSample(data.tableArrays, filtered_metadata)\n         this.reset_filters()\n         this.filter_enabled = true\n       }\n       else if(file_info.type == \"image\"){\n         this.options = {}\n         // this.current_task.histogram = ret.hist\n         this.plotImage(file_info.data.image)\n       }\n       else{\n         console.error('file type not supported', file_info)\n       }\n       this.selected_smlm_file_hash = file_info.hash\n       this.selected_smlm_file = file_info\n    },\n    generateThumbnail(size){\n      return new Promise((resolve, reject) => {\n        let original = null\n        if(this.use_3d){\n          this.api.show('Please switch to 2D mode to generate a thumbnail image for sharing.')\n          reject()\n          return\n        }\n        else{\n          if(!this._canvas_data){\n            this.api.show('No data available.')\n            reject()\n            return\n          }\n          original = document.createElement(\"canvas\")\n          original.width = this.histogram_width\n          original.height = this.histogram_height\n          var ctx = original.getContext(\"2d\");\n          ctx.putImageData(this._canvas_data, 0, 0)\n        }\n        const canvas = document.createElement(\"canvas\")\n        canvas.width = size || 192\n        canvas.height = canvas.width * (original.height / original.width);\n        // Resize from Canvas/Image to another Canvas\n        pica.resize(original, canvas, {\n          unsharpAmount: 80,\n          unsharpRadius: 0.6,\n          unsharpThreshold: 2\n        })\n        .then((result) => {\n          // console.log('resize done!')\n          this.smlm.manifest.thumbnail = canvas.toDataURL()\n          resolve(this.smlm.manifest.thumbnail)\n        }).catch((e)=>{\n          reject(e)\n        })\n\n        //\n        // canvas.width = size || 192\n        // // set size proportional to image\n        // canvas.height = canvas.width * (original.height / original.width);\n        // // step 1 - resize to 50%\n        // var oc = document.createElement('canvas'),\n        //     octx = oc.getContext('2d');\n        // oc.width = original.width * 0.5;\n        // oc.height = original.height * 0.5;\n        // octx.drawImage(original, 0, 0, oc.width, oc.height);\n        // // step 2\n        // octx.drawImage(oc, 0, 0, oc.width * 0.5, oc.height * 0.5);\n        // // step 3, resize to final size\n        // const ctx = canvas.getContext(\"2d\")\n        // ctx.drawImage(oc, 0, 0, oc.width * 0.5, oc.height * 0.5,\n        // 0, 0, canvas.width, canvas.height);\n\n\n        //\n        // canvas.width = size || 192\n        // canvas.height = size || 192\n        // const ctx = canvas.getContext(\"2d\")\n        // // ctx.filter = 'blur(0.5px)'\n        // ctx.drawImage(original, 0, 0, canvas.width, canvas.height)\n\n        // return this.smlm.manifest.thumbnail\n      })\n    },\n    switchChannel(ch){\n      console.log(ch)\n    },\n    selectFile(append){\n      this.append_mode = append\n      this.running_progress = 0\n      this.$refs.select_file_input.click()\n    },\n    updateStatus(status){\n      if(status.running){\n        this.running = status.running\n      }\n      if(status.running_status){\n        this.running_status = status.running_status\n      }\n      if(status.running_progress){\n        this.running_progress = status.running_progress\n      }\n    },\n    fileSelected(e){\n      const files = e.target.files\n      console.log('file selected', files)\n      if (files && files.length>0){\n        if(files.length==1){\n          this.selected_file_name = files[0].name\n        }\n        else{\n          this.selected_file_name = files[0].name + \", \" + files[1].name + \" etc.\"\n        }\n        console.log(files)\n        this.selected_file = files[0]\n\n        if(this.selected_file_name.endsWith('.smlm') || this.selected_file.type == 'application/zip' || this.selected_file.type == 'application/smlm'){\n          this.loadSmlm()\n        }\n        else{\n          var r = new FileReader();\n          var blob = this.selected_file.slice(0, 100);\n          r.onload = (evt)=>{\n            this.file_sample_lines = evt.target.result.split('\\n').slice(0,2)\n            if(this.file_sample_lines[0].includes('x [nm]') && this.file_sample_lines[0].includes('\\t')){\n              this.text_file_format = 'ThunderSTORM (xls)'\n            }\n            else if(this.file_sample_lines[0].includes('x [nm]') && this.file_sample_lines[0].includes(',')){\n              this.text_file_format = 'ThunderSTORM (csv)'\n            }\n            else if(this.file_sample_lines[0].includes('Position X [nm]') && this.file_sample_lines[0].includes('\\t')){\n              this.text_file_format = 'ZEISS (txt)'\n            }\n            else if(this.file_sample_lines[0].includes('Position X [nm]') && this.file_sample_lines[0].includes(';')){\n              this.text_file_format = 'ZEISSv1 (csv)'\n            }\n            else if(this.file_sample_lines[0].includes('x [nm]') && this.file_sample_lines[0].includes(';')){\n              this.text_file_format = 'ZEISSv2 (csv)'\n            }\n            else if(this.file_sample_lines[0].startsWith('#') && this.file_sample_lines[0].includes('identifier=')){\n              this.text_file_format = 'RapidSTORM (txt)'\n            }\n            else if(this.file_sample_lines[0].includes('x ') && this.file_sample_lines[0].includes('y ')){\n              this.text_file_format = 'Space Seperated List (txt)'\n            }\n            else if(this.file_sample_lines[0].includes('X\\t') && this.file_sample_lines[0].includes('\\tY\\t') && this.file_sample_lines[0].includes('Channel Name')){\n              this.text_file_format = 'Nikon NSTORM (txt)'\n            }\n            else if(this.selected_file_name.endsWith('.png')){\n              this.text_file_format = 'png'\n            }\n            else if(this.selected_file_name.endsWith('.jpg')){\n              this.text_file_format = 'jpg'\n            }\n            else if(this.selected_file_name.endsWith('.jpeg')){\n              this.text_file_format = 'jpeg'\n            }\n            else{\n              console.log('file format is not recognized', this.selected_file.name)\n            }\n\n            if(this.selected_file_name.endsWith('.png') || this.selected_file_name.endsWith('.jpg')|| this.selected_file_name.endsWith('.jpeg')){\n              this.tags = ['#WF']\n            }\n            else{\n              this.tags = ['#SR']\n            }\n            this.append_mode = false\n            this.showImportDialog = true\n          };\n          r.onerror = ()=> {\n            this.show(\"can't read file\", 5000)\n          }\n          r.readAsText(blob);\n        }\n     }\n    },\n    stopAnetProcess(){\n      if(this.anet_taskid){\n        this.store.session.call('org.imod.user.tasks.update_task', [this.anet_taskid,  {closed: true}], {}, {disclose_me: true}).then((taskid)=>{\n          this.api.show(\"task stopped.\")\n        }).catch((reason)=>{\n          console.error(reason)\n          this.api.show(reason.args[0])\n        })\n      }\n\n      this.use_widefield = false\n      this.anet_running = false\n      this.showProcessDialog=false\n      this.anet_output_sample_hash = null\n      this.anet_output_available = false\n      this.show_anet_output = false\n\n    },\n    uploadWidefieldImage(sample_hash, sample_config){\n      return new Promise((resolve, reject) => {\n        if(!this.widefield_available || this.widefield_available.type != 'image'){\n          reject()\n          return\n        }\n        const file = this.widefield_available.data.file\n        console.log(this.widefield_available)\n\n        const wf_file = this.widefield_available\n        const file_props = {\n          name: wf_file.name,\n          type: 'image/png',\n          tags: wf_file.tags,\n          hash: this.widefield_available.hash,\n          sample_hash: sample_hash,\n          sample_config: sample_config\n        }\n        this.getUploadUrl(file_props).then((res)=>{\n          const signedUrl = res.url;\n          const fileKey = res.key;\n          if((!signedUrl || signedUrl=== null) && fileKey){\n            console.log('widefield already uploaded')\n            resolve(fileKey)\n          }\n          else{\n            this.uploadFile(file, file_props, fileKey, signedUrl).then((fileKey)=>{\n              console.log('widefield uploaded')\n              // this.smlm.uploaded = true\n              resolve(fileKey)\n            })\n          }\n        }).catch((e)=>{\n          console.log(e)\n          this.api.show(e)\n          reject(e)\n        })\n\n      })\n    },\n    loadFile(){\n      if(this.text_file_format == 'SMLM format'){\n        this.loadSmlm()\n      }\n      else if(this.selected_file_name.endsWith('.png')){\n        this.loadImageFile('png')\n      }\n      else if(this.selected_file_name.endsWith('.jpg')){\n        this.loadImageFile('jpg')\n      }\n      else if(this.selected_file_name.endsWith('.jpeg')){\n        this.loadImageFile('jpg')\n      }\n      else{\n        this.loadTextFile(this.text_file_format)\n      }\n\n    },\n    loadImageFile(selected_format){\n      console.time('load image file');\n      const smlm = this.append_mode && this.smlm ? this.smlm : new smlmFile();\n      const info = {offset:{x:this.offset_x, y:this.offset_y}, tags: this.tags, channel:this.channel_name, pixel_size: this.pixel_size}\n      this.options = this.options || {}\n      smlm.import_image(this.selected_file, selected_format, info, this.append_mode, this.updateStatus).then((file_info)=>{\n        this.file_tags = file_info.tags\n        this.running = false\n        const metadata = file_info.metadata\n        this.metadata = metadata\n        console.timeEnd('load image file');\n        // const filtered_metadata = {}\n        // for(let k in metadata){\n        //   if(metadata[k])\n        //   filtered_metadata[k] = metadata[k].toString()\n        // }\n        // console.log('metadata:', filtered_metadata)\n        this.rendering_status =  \"image loaded\"\n        this.rendering_progress = 100\n        this.rendering = false\n        this.rendered = true\n        // this.options = {}\n        // this.current_task.histogram = ret.hist\n        // this.plotImage(data.image)\n        this.api.show(\"image loaded.\", 3000)\n        this.smlm = smlm\n        this.loadSmlmFile(file_info)\n        this.selected_filter = null\n        this.tags = this.smlm.manifest.tags.slice()\n        this.filter_enabled = false\n      }).catch((e)=>{\n        this.running = false\n        console.log(e)\n        this.api.show(e, 5000)\n      })\n    },\n    plotImage(img){\n      this.histogram_width = img.width\n      this.histogram_height = img.height\n      var canvas = document.createElement('canvas');\n      var ctx = canvas.getContext(\"2d\")\n      canvas.width = img.width\n      canvas.height = img.height\n      ctx.drawImage(img, 0, 0)\n      this.histogram_image = canvas.toDataURL(\"image/png\")\n      console.log('tags:', this.tags)\n      if(this.tags.indexOf('#SR')>=0){\n        this.current_displaying = 'hist'\n      }\n      else{\n        this.current_displaying = 'image'\n        //this.histogram_image = canvas.toDataURL(\"image/png\")\n      }\n      var canvas_img_data = ctx.getImageData(0, 0, canvas.width, canvas.height)\n      this.render_canvas(canvas_img_data)\n\n\n    },\n    loadTextFile(selected_format){\n      console.time('load text file', selected_format);\n      const smlm = this.append_mode && this.smlm ? this.smlm : new smlmFile();\n      // do not support append for now\n      // this.append_mode = false;\n      // this.hist_render2d_config.brightness = 100\n      const info = {offset:{x:this.offset_x, y:this.offset_y}, tags: this.tags, channel:this.channel_name, pixel_size: this.pixel_size}\n      smlm.import_text_table(this.selected_file, selected_format, info, this.append_mode, this.updateStatus).then((file_info)=>{\n        this.file_tags = file_info.tags\n        this.running = false\n        console.timeEnd('load text file');\n        console.log(file_info)\n        const metadata = file_info.metadata\n        this.metadata = metadata\n        // const filtered_metadata = {}\n        // for(let k in metadata){\n        //   if(metadata[k])\n        //   filtered_metadata[k] = metadata[k].toString()\n        // }\n        // console.log('metadata:', filtered_metadata)\n        this.api.show(\"file loaded.\", 3000)\n        // this.options = Object.assign({'xy_range': [0, 0, 0, 0], 'pixel_size': this.pixel_size, frame_range: [0, 0]}, data)\n        // // this.shareSample(data.tableArrays, filtered_metadata)\n        // this.reset_filters()\n        this.smlm = smlm\n        this.loadSmlmFile(file_info)\n        this.tags = this.smlm.manifest.tags.slice()\n        this.filter_enabled = true\n      }).catch((e)=>{\n        this.running = false\n        console.log(e)\n        this.api.show(e, 5000)\n      })\n    },\n    loadSmlm(){\n      console.time('load smlm file');\n      const smlm = new smlmFile();\n      // do not support append for now\n      this.append_mode = false;\n      smlm.import_smlm(this.selected_file, this.append_mode, this.updateStatus).then((files)=>{\n        this.running = false\n        console.timeEnd('load zip file');\n\n        // const filtered_metadata = {}\n        // for(let k in metadata){\n        //   if(metadata[k])\n        //   filtered_metadata[k] = metadata[k].toString()\n        // }\n        // console.log('metadata:', filtered_metadata)\n        this.api.show(\"file loaded.\", 3000)\n        // this.options = Object.assign({'xy_range': [0, 0, 0, 0], 'pixel_size': this.pixel_size, frame_range: [0, 0]}, data)\n        // this.reset_filters()\n        this.smlm = smlm\n        this.tags = this.smlm.manifest.tags.slice()\n\n        const file_info = files[0]\n        this.metadata = file_info.metadata\n        this.loadSmlmFile(file_info)\n\n        this.filter_enabled = true\n      }).catch((e)=>{\n        this.running = false\n        console.log(e)\n        this.api.show(e, 5000)\n        this.running_status = e\n        // this.running = false\n      })\n    },\n    downloadSmlmFile(){\n      // if(this.selected_file_name.endsWith('.smlm')){\n      //   saveAs(this.selected_file, this.selected_file_name);\n      // }\n      // else{\n        // close render worker for memory\n        if(this.renderWorker){\n          this.renderWorker.terminate()\n          this.renderWorker = null\n        }\n        this.smlm.save(this.updateStatus).then((file)=>{\n           this.running = false\n           let filename = file.name\n           if(!file.name.endsWith('.smlm') && !file.name.endsWith('.zip')){\n             filename = file.name + '.smlm'\n           }\n           saveAs(file, filename);\n        }).catch((e)=>{\n          this.api.show(e)\n        })\n      // }\n\n    },\n    updateFPS(status){\n        this.fps = status.fps\n        this.ppf = status.ppf\n        // console.log(this.fps);\n    },\n    switch3DView(use_3d){\n      this.$forceUpdate()\n      if(use_3d){\n        if(this.options.tableDict.z){\n          if(!this.render3d_loaded){\n            load3DViewer(document.getElementById(\"histogram_canvas_3d\"), this.updateFPS)\n            this.render3d_loaded = true\n          }\n          this.plotHist()\n        }\n        else{\n          this.api.show(\"no data found on z dimension.\", 4000)\n          this.use_3d = false\n        }\n      }\n      else{\n        this.plotHist()\n      }\n    },\n    update_selected_filter(){\n      this.filter_expression = \"\"\n      for(var i=0;i<this.options.headers.length;i++){\n        if(!isFinite(this.filter_ranges[this.options.headers[i]][0])){\n          continue\n        }\n        if(!isFinite(this.filter_ranges[this.options.headers[i]][1])){\n          continue\n        }\n        if(this.filter_ranges[this.options.headers[i]][1] != this.filter_ranges[this.options.headers[i]][0]){\n          if(this.filter_ranges[this.options.headers[i]][0]!=this.options.min[this.options.headers[i]]){\n            this.filter_expression += this.options.headers[i] + \">=\" + this.filter_ranges[this.options.headers[i]][0] + ' and '\n          }\n          if(this.filter_ranges[this.options.headers[i]][1]!=this.options.max[this.options.headers[i]]){\n            this.filter_expression += this.options.headers[i] + \"<=\" + this.filter_ranges[this.options.headers[i]][1] + ' and '\n          }\n        }\n      }\n      if(this.filter_expression.slice(-5) == ' and '){\n        this.filter_expression = this.filter_expression.slice(0, -5)\n      }\n      console.log('generated filter expression:', this.filter_expression )\n      this.plotHist()\n    },\n    reset_filters(){\n      for(var i=0;i<this.options.headers.length;i++){\n        this.filter_ranges[this.options.headers[i]] = [Math.round(this.options.min[ this.options.headers[i]]), Math.round(this.options.max[ this.options.headers[i]]) ]\n      }\n      // select frame by default\n      if(this.options.headers.indexOf('frame')>=0){\n        this.switch_selected_filter('frame')\n      }\n      this.filter_expression = ''\n      this.hist_render2d_config.brightness = 100\n      this.plotHist()\n    },\n    switch_selected_filter(filter_name){\n      console.log(filter_name)\n      // if(filter_name && this.selected_filter && this.selected_filter == filter_name){\n      //   this.selected_filter = null\n      //   return\n      // }\n      // else{\n        this.selected_filter = filter_name\n      // }\n      if(!this.filter_ranges[filter_name]){\n        for(var i=0;i<this.options.headers.length;i++){\n          this.filter_ranges[this.options.headers[i]] = [this.options.min[ this.options.headers[i]], this.options.max[ this.options.headers[i]] ]\n        }\n      }\n      this.selected_filter_range = this.filter_ranges[filter_name]\n      this.selected_filter_min = this.options.min[filter_name]\n      this.selected_filter_max = this.options.max[filter_name]\n      console.log(this.filter_ranges)\n    },\n    updateRenderStatus(status){\n      this.rendering_progress = status.rendering_progress || this.rendering_progress\n      this.rendering_status = status.rendering_status || this.rendering_status\n      this.rendering = status.rendering || this.rendering\n    },\n    plotHist(options){\n      this.show_anet_output = false\n      this.current_render2d_config = this.hist_render2d_config\n      options = options || this.options\n      console.log(options)\n      if(!options.tableDict || options.headers.length<=0 || options.tableArrays.length<=0){\n        console.log({canvas_img_data:canvas_img_data, options:options})\n        console.log('rendering error.')\n        this.api.show('something went wrong, data is not loaded.', 5000)\n        return\n      }\n      return new Promise((resolve, reject) => {\n        this.rendering_progress = 0\n        this.rendering_status = 'rendering'\n        this.rendering = true\n        // onlocationinfo(e.data);\n        var pixel_size = this.pixel_size || 20\n        options.pixel_size = pixel_size\n        this.pixel_size = pixel_size\n        // for(var i=0;i<options.headers.length;i++){\n        //   this.filter_ranges[headers[i]] = [options.min[ options.headers[i]], options.max[ options.headers[i]] ]\n        // }\n        var escaped_headers= []\n        for(var i=0;i<options.headers.length;i++){\n          escaped_headers[i] = options.headers[i];\n        }\n        this.filter_tooltip = 'you can use these variables in your filter: ' + escaped_headers.join(', ') + ' , use random() to do random sampling.'\n        console.log('max_frame_number', options.max.frame, 'min_frame_number', options.min.frame)\n\n        this.filter_ranges.x = this.filter_ranges.x || [options.min.x, options.max.x]\n        this.filter_ranges.y = this.filter_ranges.y || [options.min.y, options.max.y]\n\n        options.xy_range = []\n        options.xy_range[0] = Math.round(this.filter_ranges.x[0]/pixel_size)\n        options.xy_range[1] = Math.round(this.filter_ranges.x[1]/pixel_size)\n        options.xy_range[2] = Math.round(this.filter_ranges.y[0]/pixel_size)\n        options.xy_range[3] = Math.round(this.filter_ranges.y[1]/pixel_size)\n\n        this.histogram_width = Math.min(options.xy_range[1] - options.xy_range[0], 2560)\n        this.histogram_height = Math.min(options.xy_range[3] - options.xy_range[2], 2560)\n        options.histogram_width = this.histogram_width\n        options.histogram_height = this.histogram_height\n        options.filter_expression = this.filter_expression\n        options.offset_mode = this.offset_mode\n        console.log('filtering...', this.offset_mode)\n        const options_ = {\n          file_name: options.file_name,\n          file_size: options.file_size,\n          file_id: options.file_id,\n          tableDict: options.tableDict,\n          rows: options.rows,\n          xy_range: options.xy_range,\n          offset_mode: this.offset_mode,\n          histogram_width: options.histogram_width,\n          histogram_height: options.histogram_height,\n          pixel_size: options.pixel_size,\n          filter_expression: options.filter_expression,\n          min: options.min,\n          max: options.max\n        }\n        var filterWorker = this.filterWorker;\n        if(!filterWorker){\n          if (typeof (Worker) !== \"undefined\") {\n              filterWorker = new Worker(\"static/js/AsyncFilter.js\")\n              this.filterWorker = filterWorker\n          } else {\n              console.log(\"Web Worker not available\")\n              this.api.show(\"Web Worker not available\")\n              return\n          }\n        }\n\n        filterWorker.onerror = (e) => {\n          console.log('filterWorker went wrong: ', e)\n        }\n        filterWorker.onmessage = (e) => {\n          // console.log(e)\n          if(e.data.progress){\n            this.rendering = true\n            // console.log('rendering ', e.data.progress)\n            this.rendering_progress = Math.round(e.data.progress)\n          }\n          if(e.data._options){\n            if(e.data._options.tableDict && options.tableDict){\n              for(let k in e.data._options.tableDict){\n                options.tableDict[k] = e.data._options.tableDict[k]\n              }\n            }\n            if(e.data._options.isFiltered){\n              options.isFiltered = e.data._options.isFiltered\n            }\n          }\n          if(e.data.finished){\n            console.log('finished filtering')\n            options_.isFiltered = e.data.isFiltered\n            options_.filteredRows = e.data.filteredRows\n            options_.frameNumber = e.data.frameNumber\n            this.localizationNumber = options_.filteredRows\n            this.frameNumber = options_.frameNumber\n\n            console.log(options_)\n            if(this.use_3d){\n              this.render3d(options_).then(()=>{resolve()})\n            }\n            else{\n              this.render2d(options_).then(()=>{resolve()})\n            }\n            this.current_displaying = 'hist'\n          }\n        }\n        this.rendering_status = \"filtering...\"\n        const transferables = []\n        for(let k in options_.tableDict){\n          transferables.push(options_.tableDict[k].buffer)\n        }\n        filterWorker.postMessage({options:options_}, transferables)\n      })\n    },\n    render2d(options_){\n      return new Promise((resolve, reject) => {\n        var renderWorker = this.renderWorker;\n        if(!renderWorker){\n          if (typeof (Worker) !== \"undefined\") {\n              renderWorker = new Worker(\"static/js/AsyncRenderer.js\")\n              this.renderWorker = renderWorker\n          } else {\n              console.log(\"Web Worker not available\")\n              this.api.show(\"Web Worker not available\")\n              return\n          }\n        }\n        var canvas = document.createElement('canvas');\n        canvas.width = this.histogram_width\n        canvas.height = this.histogram_height\n        var ctx = canvas.getContext(\"2d\");\n        // ctx.fillStyle=\"#000000\";\n        // ctx.fillRect(0, 0, this.histogram_width, this.histogram_height);\n        var canvas_img_data = ctx.getImageData(0, 0, canvas.width, canvas.height);\n        renderWorker.onerror = (e) => {\n          console.log('renderWorker went wrong: ', e)\n          this.rendered = true\n          this.rendering = false\n          this.rendering_status = 'error ocurred: ' + e.data.message\n          this.api.show(e.data.message, 5000)\n          if(e.data.message.includes(\"fillter expression\")){\n            this.show_filter = true\n          }\n          this.renderWorker = null\n          renderWorker.terminate()\n          //this.rendering_progress = 100\n          reject()\n        }\n        renderWorker.onmessage = (e) => {\n          if(e.data.progress){\n            this.rendering = true\n            // console.log('rendering ', e.data.progress)\n            this.rendering_progress = Math.round(e.data.progress)\n          }\n          // if(e.data.sending){\n          //   this.rendering_status = \"preparing histogram\"\n          // }\n          if(e.data._options){\n            if(e.data._options.tableDict && options_.tableDict){\n              for(let k in e.data._options.tableDict){\n                options_.tableDict[k] = e.data._options.tableDict[k]\n              }\n            }\n            if(e.data._options.isFiltered){\n              options_.isFiltered = e.data._options.isFiltered\n            }\n          }\n          if(e.data.finished){\n            console.log('finished rendering')\n\n            if(this.screenWidth>800){\n              this.rendering_status =  options_.filteredRows + ', file:' +this.options.file_name+').'\n              if(this.histogram_width<options_.xy_range[1] - options_.xy_range[0] ||this.histogram_height<options_.xy_range[3] - options_.xy_range[2] ){\n                this.rendering_status = 'histogram rendered (truncated to '+this.histogram_width+'x'+ this.histogram_height + ', loc.:'+this.rendering_status\n              }\n              else{\n                this.rendering_status = 'histogram rendered (loc.:' +this.rendering_status\n              }\n            }\n            else{\n              this.rendering_status = 'rendered '\n            }\n            this.rendering_progress = 100\n            ctx.putImageData(e.data.canvas_img_data, 0, 0);\n            this.rendering = false\n            this.rendered = true\n            // this.current_task.histogram = ret.hist\n            this.histogram_image = canvas.toDataURL(\"image/png\")\n            this.render_canvas(e.data.canvas_img_data, 100)\n            // renderWorker.terminate()\n            resolve(this.histogram_image)\n\n          }\n          else if(e.data.error){\n            console.log('error during rendering ')\n            this.rendered = true\n            this.rendering = false\n            this.rendering_status = 'error ocurred: ' + e.data.message\n            this.api.show(e.data.message, 5000)\n            if(e.data.message.includes(\"fillter expression\")){\n              this.show_filter = true\n            }\n            this.renderWorker = null\n            renderWorker.terminate()\n            //this.rendering_progress = 100\n            reject()\n\n          }\n\n        }\n        this.rendering_status = \"rendering...\"\n        console.log('rendering in canvas')\n        const transferables = []\n        for(let k in options_.tableDict){\n          transferables.push(options_.tableDict[k].buffer)\n        }\n        if(options_.isFiltered){\n          transferables.push(options_.isFiltered.buffer)\n        }\n        renderWorker.postMessage({canvas_img_data:canvas_img_data, options:options_}, transferables)\n      })\n    },\n    render3d(options){\n      return new Promise((resolve, reject) => {\n        try {\n          show3DLocalizations(options, this.updateRenderStatus)\n        } catch (e) {\n          reject('3d rendering error')\n          console.error(e)\n          this.rendering_status = \"something went wrong during rendering.\"\n        } finally {\n          this.rendering = false\n          this.rendered = true\n          resolve()\n        }\n      })\n    },\n    render_canvas(imageData, brightness){\n      this.rendered = true\n      let map;\n      brightness = brightness || 1;\n      if(this.leafletMap){\n        // this.leafletMap.off()\n        // this.leafletMap.remove()\n        map = this.leafletMap\n      }\n      else{\n        map = L.map('leaflet_histogram', {\n         scrollWheelZoom: false,\n         smoothWheelZoom: true,\n         smoothSensitivity: 1,\n         minZoom: -10,\n         maxZoom: 6,\n         center: [0, 0],\n         zoom: 1,\n         crs: L.CRS.Simple\n       });\n       this.leafletMap = map\n      }\n\n     const data2img = (imageData)=>{\n       // create the slippy map\n       Filters.filterImage( imageData, Filters.brightness, 0, brightness)\n       if(this.use_lut) Filters.filterImage( imageData, Filters.lut, hot_lut )\n       var canvas = document.createElement(\"canvas\");\n       canvas.width = this.histogram_width;\n       canvas.height = this.histogram_height;\n       // Copy the image contents to the canvas\n       var ctx = canvas.getContext(\"2d\");\n       ctx.putImageData(imageData, 0, 0)\n\n       var img = canvas.toDataURL(\"image/png\")\n       return img\n     };\n\n     const updateMap = (imageData) => {\n       this._canvas_data = imageData\n       // dimensions of the image\n       var w = this.histogram_width,\n           h = this.histogram_height,\n           url = data2img(imageData);\n\n       this.export_histogram_png = url.replace(\"image/png\", \"application/octet-stream\")\n       // calculate the edges of the image, in coordinate space\n       if(this.screenWidth<=800){\n         map.options.minZoom = -2;\n       }\n       else{\n         map.options.minZoom = -1;\n       }\n       var southWest = map.unproject([0, h], map.options.zoom);\n       var northEast = map.unproject([w, 0], map.options.zoom);\n       var bounds = new L.LatLngBounds(southWest, northEast);\n\n       // add the image overlay,\n       // so that it covers the entire map\n       if(this._canvas_layer){\n         map.removeLayer(this._canvas_layer)\n       }\n       this._canvas_layer = L.imageOverlay(url, bounds)\n       this._canvas_layer.addTo(map);\n       // tell leaflet that the map is exactly as big as the image\n       map.setMaxBounds(bounds);\n       setTimeout(() => {\n         this.leafletMap.invalidateSize();\n         this.$forceUpdate()\n       }, 800)\n\n     }\n     if(!imageData){\n       var image = new Image();\n       image.onload = ()=>{\n           var canvas = document.createElement(\"canvas\");\n           canvas.width = image.width;\n           canvas.height = image.height;\n           var ctx = canvas.getContext(\"2d\");\n           ctx.drawImage(image, 0, 0);\n           imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n           updateMap(imageData)\n           if(this.$refs['brightness-slider'])   this.$refs['brightness-slider'].refresh()\n       };\n       image.onerror = ()=>{\n         this.rendering = false\n         this.rendered = true\n       }\n       image.src = this.histogram_image\n     }\n     else{\n       updateMap(imageData)\n     }\n    },\n    render_canvas2(imgData, brightness){\n       this.rendering_status = \"almost done, showing on the canvas...\"\n       // this.rendering = true\n       // this.rendered = false\n       brightness = brightness || 0\n       console.log('adjust brightness', brightness)\n       var himage = this.histogram_image\n       var canvas = document.getElementById(\"histogram_canvas\");\n       var ctx = canvas.getContext(\"2d\");\n       var image = new Image();\n       var use_lut = this.use_lut;\n       image.onload = ()=>{\n           ctx.drawImage(image, 0, 0);\n           var h = canvas.height;\n           var w = canvas.width;\n           imgData = imgData || ctx.getImageData(0, 0, w, h);\n           if(!brightness){\n             var p = Filters.min_max(imgData)\n             if(p.max==0)\n              brightness = 1.0\n             else\n              brightness=(255/p.max);\n             this.current_render2d_config.brightness = parseInt(brightness)\n           }\n           // else{\n           //   this.current_render2d_config.brightness = parseInt(brightness)\n           // }\n           Filters.filterImage( imgData, Filters.brightness, 0, brightness)\n           if(this.use_lut) Filters.filterImage( imgData, Filters.lut, hot_lut )\n           ctx.putImageData(imgData, 0, 0)\n           var imageCanvas = document.getElementById(\"histogram_canvas\").toDataURL(\"image/png\")\n                       .replace(\"image/png\", \"application/octet-stream\")\n           this.export_histogram_png = imageCanvas\n           console.log('prepared url for image download')\n           this.rendering_progress = 100\n           this.rendering_status = \"ready.\"\n           this.rendering = false\n           this.rendered = true\n           if(this.$refs['brightness-slider'])   this.$refs['brightness-slider'].refresh()\n       };\n       image.onerror = ()=>{\n         this.rendering = false\n         this.rendered = true\n       }\n       image.src = himage\n\n    },\n    // download_image(image, filename){\n    //\n    //   var image_data = atob(image.split(',')[1]);\n    //   var arraybuffer = new ArrayBuffer(image_data.length);\n    //   var view = new Uint8Array(arraybuffer);\n    //   for (var i=0; i<image_data.length; i++) {\n    //       view[i] = image_data.charCodeAt(i) & 0xff;\n    //   }\n    //   var img = UPNG.decode(arraybuffer)\n    //\n    //   var im1 = new Uint16Array(new ArrayBuffer(2560*2560*2));\n    //   var im2 = new Uint16Array(new ArrayBuffer(2560*2560*2));\n    //\n    //   function swap16(val) {\n    //       return ((val & 0xFF) << 8)\n    //              | ((val >> 8) & 0xFF);\n    //   }\n    //\n    //   for(var i=0;i<2560;i++){\n    //     for(var j=0;j<2560;j++){\n    //       im1[j*2560+i] = swap16(j)\n    //       im2[j*2560+i] = swap16(i)\n    //     }\n    //   }\n    //   console.log([im1, im2])\n    //   var imgFile = UPNG.encodeLL([im1.buffer, im2.buffer], 2560, 2560, 1, 0, 16, [0, 0]) //UPNG.encode([img.data.buffer], 2560, 2560, 0) //UPNG.encodeLL([im1, im2], 2560, 2560, 1, 0, 16, [0,0])\n    //\n    //   try {\n    //       // This is the recommended method:\n    //       var blob = new Blob([imgFile], {type: 'application/octet-stream'});\n    //   } catch (e) {\n    //       // The BlobBuilder API has been deprecated in favour of Blob, but older\n    //       // browsers don't know about the Blob constructor\n    //       // IE10 also supports BlobBuilder, but since the `Blob` constructor\n    //       //  also works, there's no need to add `MSBlobBuilder`.\n    //       var bb = new (window.WebKitBlobBuilder || window.MozBlobBuilder);\n    //       bb.append(imgFile);\n    //       var blob = bb.getBlob('application/octet-stream'); // <-- Here's the Blob\n    //   }\n    //   var a = document.createElement(\"a\");\n    //       document.body.appendChild(a);\n    //       a.style = \"display: none\";\n    //\n    //   // Use the URL object to create a temporary URL\n    //   var url = (window.webkitURL || window.URL).createObjectURL(blob);\n    //   a.href = url;\n    //   a.download = filename;\n    //   a.click();\n    //   window.URL.revokeObjectURL(url);\n    // },\n\n    download_image(image, filename){\n        // atob to base64_decode the data-URI\n        var image_data = atob(image.split(',')[1]);\n        // Use typed arrays to convert the binary data to a Blob\n        var arraybuffer = new ArrayBuffer(image_data.length);\n        var view = new Uint8Array(arraybuffer);\n        for (var i=0; i<image_data.length; i++) {\n            view[i] = image_data.charCodeAt(i) & 0xff;\n        }\n        try {\n            // This is the recommended method:\n            var blob = new Blob([arraybuffer], {type: 'application/octet-stream'});\n        } catch (e) {\n            // The BlobBuilder API has been deprecated in favour of Blob, but older\n            // browsers don't know about the Blob constructor\n            // IE10 also supports BlobBuilder, but since the `Blob` constructor\n            //  also works, there's no need to add `MSBlobBuilder`.\n            var bb = new (window.WebKitBlobBuilder || window.MozBlobBuilder);\n            bb.append(arraybuffer);\n            var blob = bb.getBlob('application/octet-stream'); // <-- Here's the Blob\n        }\n        var a = document.createElement(\"a\");\n            document.body.appendChild(a);\n            a.style = \"display: none\";\n\n        // Use the URL object to create a temporary URL\n        var url = (window.webkitURL || window.URL).createObjectURL(blob);\n        a.href = url;\n        a.download = filename;\n        a.click();\n        window.URL.revokeObjectURL(url);\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.md-app-scroller{\n  z-index: -1;\n}\n#histogram_map { height: 400px;}\n#leaflet_histogram {\n  z-index: 12;\n  position: relative;\n  width: 100%;\n  height: 100%;\n}\n.canvas-container{\n  z-index: 10;\n  position: relative;\n  height: 100%;\n  width: 100%;\n}\n.slider-toolbar{\n  z-index: 30;\n}\n.render-info {\n  z-index: 20;\n  text-align: right;\n  color: #de199e;\n  position: absolute;\n  top: 8px;\n  right: 45px;\n  margin-top: 8px;\n}\n#histogram_canvas_3d {\n  z-index: 13;\n\tposition: relative;\n\ttop: 0;\n\tleft: 0;\n  height: calc(100% - 5px);\n}\n#gui-webgl {\n  z-index: 14;\n  position: fixed;\n\n}\n\n.md-list-item-content{\n  display: inline-flex;\n}\n.md-list-item-content .md-switch{\n  margin-left: 12px;\n}\n\n.dropbox {\n  outline: 2px dashed grey; /* the dash box */\n  outline-offset: -10px;\n  background: lightcyan;\n  color: dimgray;\n  padding: 10px 10px;\n  min-height: 200px; /* minimum height */\n  position: relative;\n  cursor: pointer;\n}\n\n.input-file {\n  opacity: 0; /* invisible but it's there! */\n  width: 100%;\n  height: 200px;\n  position: absolute;\n  cursor: pointer;\n}\n\n.dropbox:hover {\n  background: lightblue; /* when mouse over to the drop zone, change color */\n}\n\n.dropbox p {\n  font-size: 1.2em;\n  text-align: center;\n  padding: 50px 0;\n}\n\n.thumbnail-img{\n   text-align: center;\n   border: 1px solid #ddd; /* Gray border */\n   border-radius: 4px;  /* Rounded border */\n   padding: 4px; /* Some padding */\n   width: 192px;  /* Set a small width */\n}\n\n#repository-button{\n  text-transform: none;\n}\n\n.files-item-1{\n  color: #448aff;\n  font-weight: 400;\n}\n\n.files-item-1-selected{\n  color: #448aff;\n  font-weight: 800;\n}\n\n.files-item-2{\n  color: #6c44ff;\n  font-weight: 400;\n}\n\n.files-item-2-selected{\n  color: #6c44ff;\n  font-weight: 800;\n}\n\n.md-empty-state {\n  position: relative;\n  /* top: 39%;\n  left: 50%;\n  transform: translate(-50%, -50%); */\n  max-width: 100%;\n  width: 100%;\n}\n\n.viewer {\n  height: 100%;\n}\n\n\n#faq-button{\n  text-transform: none;\n}\n\n.faq-card{\n  width: 80%;\n}\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/Viewer.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"viewer\"},[_c('div',{staticClass:\"md-title\"},[_vm._v(_vm._s(_vm.title))]),_vm._v(\" \"),_c('md-app',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.options),expression:\"options\"}]},[(!_vm.menuVisible || (_vm.options && _vm.options.tableDict && _vm.show_filter)||(_vm.selected_filter!== null && _vm.selected_filter_max!== null && _vm.selected_filter_min!== null))?_c('md-app-toolbar',{staticClass:\"md-transparent md-dense\",staticStyle:{\"z-index\":\"99\"},attrs:{\"md-elevation\":\"0\"}},[_c('div',{staticClass:\"md-toolbar-row\",attrs:{\"flex\":\"\"}},[(!_vm.menuVisible && _vm.options)?_c('md-button',{staticClass:\"md-fab md-primary\",on:{\"click\":function($event){_vm.menuVisible=true}}},[_c('md-icon',[_vm._v(\"menu\")])],1):_vm._e(),_vm._v(\" \"),(_vm.options)?_c('div',{staticClass:\"md-layout md-xsmall-hide\"},[_c('md-switch',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.rendered && _vm.options && _vm.options.tableDict && _vm.options.tableDict.z),expression:\"rendered && options && options.tableDict && options.tableDict.z\"}],attrs:{\"disabled\":!_vm.options || !_vm.options.tableDict || (!_vm.options.tableDict.z && !_vm.use_3d),\"name\":\"use LUT\"},on:{\"change\":function($event){_vm.switch3DView(_vm.use_3d)}},model:{value:(_vm.use_3d),callback:function ($$v) {_vm.use_3d=$$v},expression:\"use_3d\"}},[_vm._v(\"3D View\")]),_vm._v(\"  \\n               \")],1):_vm._e(),_vm._v(\" \"),(_vm.filter_enabled && _vm.rendered && _vm.selected_filter!== null && _vm.selected_filter_max!== null && _vm.selected_filter_min!== null)?_c('div',{staticClass:\"md-toolbar-section-start slider-toolbar\"},[_c('div',{staticClass:\"md-layout-item\",attrs:{\"flex\":\"\"}},[_c('span',{staticClass:\"md-xsmall-hide\"},[_vm._v(\"Set range for\")]),_vm._v(\" \"),_c('md-chip',[_vm._v(_vm._s(_vm.selected_filter))]),_vm._v(\" \"+_vm._s((_vm.filter_ranges[_vm.selected_filter][1]-_vm.filter_ranges[_vm.selected_filter][0]).toFixed(1))+\", \"+_vm._s(_vm.filter_ranges[_vm.selected_filter])+\"\\n                   \"),_c('div',[_c('vue-slider',{ref:\"filter-slider\",attrs:{\"disabled\":_vm.rendering,\"tooltip-dir\":\"bottom\",\"max\":_vm.selected_filter_max,\"min\":_vm.selected_filter_min},on:{\"drag-end\":function($event){_vm.update_selected_filter()}},model:{value:(_vm.filter_ranges[_vm.selected_filter]),callback:function ($$v) {_vm.$set(_vm.filter_ranges, _vm.selected_filter, $$v)},expression:\"filter_ranges[selected_filter]\"}}),_vm._v(\" \"),_c('md-tooltip',[_vm._v(\" Adjust filter range for \\\"\"+_vm._s(this.selected_filter)+\"\\\"\")])],1)],1)]):_vm._e(),_vm._v(\" \"),(_vm.options && _vm.options.tableDict && _vm.show_filter)?_c('div',{staticClass:\"md-toolbar-section-start\",attrs:{\"flex\":\"\"}},[_c('md-button',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.rendered && _vm.show_filter),expression:\"rendered && show_filter\"}],staticClass:\"md-accent md-icon-button\",attrs:{\"disabled\":_vm.rendering},on:{\"click\":function($event){_vm.plotHist()}}},[_c('md-icon',[_vm._v(\"refresh\")]),_vm._v(\" \"),_c('md-tooltip',[_vm._v(\" Refresh \")])],1),_vm._v(\" \"),_c('md-field',[_c('label',{staticClass:\"md-xsmall-hide\",attrs:{\"for\":\"filter-id\"}},[_vm._v(\"Filter Expression (e.g. frame>1000 and random()<0.1)\")]),_vm._v(\" \"),_c('md-input',{attrs:{\"disabled\":_vm.rendering,\"type\":\"text\"},nativeOn:{\"keyup\":function($event){if(!('button' in $event)&&_vm._k($event.keyCode,\"enter\",13,$event.key)){ return null; }_vm.plotHist()}},model:{value:(_vm.filter_expression),callback:function ($$v) {_vm.filter_expression=$$v},expression:\"filter_expression\"}}),_vm._v(\" \"),_c('span',{staticClass:\"md-helper-text md-xsmall-hide\"},[_vm._v(_vm._s(_vm.filter_tooltip))]),_vm._v(\" \"),_c('md-tooltip',[_vm._v(_vm._s(_vm.filter_tooltip))])],1)],1):_vm._e(),_vm._v(\" \"),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.running && !_vm.menuVisible && _vm.options && _vm.screenWidth>800),expression:\"running && !menuVisible && options && screenWidth>800\"}],staticClass:\"md-toolbar-section-end md-xsmall-hide\",attrs:{\"layout\":\"row\"}},[_c('p',[_vm._v(_vm._s(_vm.running_status)+\" \"+_vm._s(_vm.running_status.length<30? ', please wait, this may take a while.': '')+\" \")]),_vm._v(\" \"),_c('md-progress-bar',{directives:[{name:\"show\",rawName:\"v-show\",value:(!(_vm.running_progress && _vm.running_progress>0)),expression:\"!(running_progress && running_progress>0)\"}],attrs:{\"md-mode\":\"indeterminate\"}}),_vm._v(\" \"),_c('md-progress-bar',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.running_progress && _vm.running_progress>0),expression:\"running_progress && running_progress>0\"}],attrs:{\"md-value\":_vm.running_progress}})],1)],1)]):_vm._e(),_vm._v(\" \"),_c('md-app-drawer',{attrs:{\"md-active\":_vm.menuVisible,\"md-persistent\":\"full\"},on:{\"update:mdActive\":function($event){_vm.menuVisible=$event}}},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.running),expression:\"!running\"}],staticClass:\"md-toolbar-row\",attrs:{\"flex\":\"\"}},[_vm._t(\"actions\",[_c('md-button',{staticClass:\"md-fab md-primary\",on:{\"click\":function($event){_vm.selectFile(true)}}},[_c('md-icon',[_vm._v(\"add\")]),_vm._v(\" \"),_c('md-tooltip',[_vm._v(\"Load another file\")])],1),_vm._v(\" \"),_c('md-button',{staticClass:\"md-primary\",on:{\"click\":_vm.shareFile}},[_c('md-icon',[_vm._v(\"share\")]),_vm._v(\"Share\\n                     \"),_c('md-tooltip',[_vm._v(\"share this smlm file\")])],1),_vm._v(\" \"),_c('div',{staticClass:\"md-toolbar-section-end\"},[_c('md-button',{staticClass:\"md-icon-button md-dense md-raised\",on:{\"click\":function($event){_vm.menuVisible = !_vm.menuVisible}}},[_c('md-icon',[_vm._v(\"keyboard_arrow_left\")])],1)],1)],{download:_vm.downloadSmlmFile})],2),_vm._v(\" \"),(_vm.running)?_c('div',{attrs:{\"layout\":\"row\"}},[_c('md-divider'),_vm._v(\" \"),_c('p',[_vm._v(_vm._s(_vm.running_status)+\" \"+_vm._s(_vm.running_status.length<30? ', please wait, this may take a while.': '')+\" \")]),_vm._v(\" \"),_c('md-progress-bar',{directives:[{name:\"show\",rawName:\"v-show\",value:(!(_vm.running_progress && _vm.running_progress>0)),expression:\"!(running_progress && running_progress>0)\"}],attrs:{\"md-mode\":\"indeterminate\"}}),_vm._v(\" \"),_c('md-progress-bar',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.running_progress && _vm.running_progress>0),expression:\"running_progress && running_progress>0\"}],attrs:{\"md-value\":_vm.running_progress}}),_vm._v(\" \"),_c('br')],1):_vm._e(),_vm._v(\" \"),(_vm.smlm)?_c('div',[_c('span',{staticClass:\"md-list-item-text\"},[_vm._v(\"Files\")]),_vm._v(\" \"),_c('md-divider'),_vm._v(\" \"),(_vm.loaded_sample && _vm.smlm)?_c('md-list',_vm._l((_vm.loaded_sample.files),function(f,h){return _c('md-list-item',{key:h,attrs:{\"md-expand\":_vm.smlm&&_vm.smlm.manifest.hash == h,\"md-expanded\":f.expandFiles},on:{\"click\":function($event){_vm.showFilesDialog=false;_vm.loadS3File(f, h);},\"update:mdExpanded\":function($event){_vm.$set(f, \"expandFiles\", $event)}}},[_vm._v(\"\\n                     \"+_vm._s(_vm.smlm.manifest.hash == h?'+':'')+\" \"),_vm._l((f.tags),function(tag){return _c('md-chip',{key:tag},[_vm._v(_vm._s(tag))])}),_vm._v(\" \"),_c('span',{class:_vm.selected_s3_file == h?'files-item-1-selected':'files-item-1'},[_vm._v(_vm._s(f.name))]),_vm._v(\" \"),(_vm.smlm&&_vm.smlm.manifest.hash == h)?_c('md-list',{attrs:{\"slot\":\"md-expand\"},slot:\"md-expand\"},_vm._l((_vm.smlm.files),function(sf,i){return _c('md-list-item',{key:sf.hash,on:{\"click\":function($event){_vm.showFilesDialog=false;_vm.loadSmlmFile(sf);}}},[_c('span',{class:_vm.selected_smlm_file_hash == sf.hash?'files-item-2-selected':'files-item-2'},[_vm._v(\"  - \\n                             \"),_vm._l((sf.tags),function(tag,n){return (n<3)?_c('md-chip',{key:tag},[_vm._v(_vm._s(tag))]):_vm._e()}),_vm._v(_vm._s(sf.name)+\"\\n                           \")],2)])})):_vm._e()],2)})):_vm._e(),_vm._v(\" \"),(!_vm.loaded_sample && _vm.smlm && _vm.smlm.files)?_c('md-list',_vm._l((_vm.smlm.files),function(sf,i){return _c('md-list-item',{key:sf.hash,on:{\"click\":function($event){_vm.showFilesDialog=false;_vm.loadSmlmFile(sf);}}},[_c('span',{class:_vm.selected_smlm_file_hash == sf.hash?'files-item-2-selected':'files-item-2'},[_vm._v(\" - \\n                     \"),_vm._l((sf.tags),function(tag,n){return (n<3)?_c('md-chip',{key:tag},[_vm._v(_vm._s(tag))]):_vm._e()}),_vm._v(_vm._s(sf.name)+\"\\n                   \")],2)])})):_vm._e()],1):_vm._e(),_vm._v(\" \"),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(false),expression:\"false\"}],staticClass:\"md-layout\",attrs:{\"md-vertical-align\":\"end\"}},[_c('input',{ref:\"select_file_input\",staticClass:\"md-file\",attrs:{\"type\":\"file\"},on:{\"change\":_vm.fileSelected}})]),_vm._v(\" \"),(_vm.filter_enabled)?_c('div',[_c('span',{staticClass:\"md-list-item-text\"},[_vm._v(\"Apply filter\")]),_vm._v(\" \"),_c('md-divider'),_vm._v(\" \"),_c('p',[_vm._v(\"click a name to set the value range:\")]),_vm._v(\" \"),(_vm.options && _vm.options.headers)?_c('div',_vm._l((_vm.options.headers),function(header,index){return _c('md-chip',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.options&&_vm.options.headers),expression:\"options&&options.headers\"}],key:index,class:(_vm.selected_filter == header)? 'md-primary': '',attrs:{\"md-clickable\":\"\"},on:{\"click\":function($event){_vm.show_filter=false; _vm.switch_selected_filter(header)}}},[_vm._v(_vm._s(header)+\"\\n                   \"),_c('md-tooltip',[_vm._v(\"click to set the range of '\"+_vm._s(header)+\"'\")])],1)})):_vm._e(),_vm._v(\" \"),_c('md-button',{attrs:{\"disabled\":_vm.rendering},on:{\"click\":function($event){_vm.reset_filters()}}},[_c('md-icon',[_vm._v(\"settings_backup_restore\")]),_vm._v(\"reset filter\\n                 \"),_c('md-tooltip',[_vm._v(\" Reset filter \")])],1),_vm._v(\" \"),_c('md-button',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.rendered),expression:\"rendered\"}],on:{\"click\":function($event){_vm.show_filter=!_vm.show_filter; _vm.selected_filter=null}}},[_c('md-icon',[_vm._v(\"details\")]),_vm._v(\"filter expression\\n                 \"),_c('md-tooltip',[_vm._v(\" Show filter expression\")])],1),_vm._v(\" \"),_c('br'),_vm._v(\" \"),_c('br')],1):_vm._e(),_vm._v(\" \"),_c('span',{staticClass:\"md-list-item-text\"},[_vm._v(\"Adjust brightness\")]),_vm._v(\" \"),_c('md-divider'),_vm._v(\" \"),_c('div',{staticClass:\"md-toolbar-row\",attrs:{\"flex\":\"\"}},[_c('div',{staticClass:\"md-layout-item\"},[_c('div',[_c('vue-slider',{ref:\"brightness-slider\",attrs:{\"disabled\":_vm.rendering,\"tooltip-dir\":\"bottom\",\"max\":255,\"min\":1},on:{\"drag-end\":function($event){_vm.updateCanvas()}},model:{value:(_vm.current_render2d_config.brightness),callback:function ($$v) {_vm.$set(_vm.current_render2d_config, \"brightness\", $$v)},expression:\"current_render2d_config.brightness\"}}),_vm._v(\" \"),_c('md-tooltip',[_vm._v(\" Adjust brightness \")])],1),_vm._v(\" \"),_c('br')])]),_vm._v(\" \"),_c('span',{staticClass:\"md-list-item-text\"},[_vm._v(\"More options\")]),_vm._v(\" \"),_c('md-divider'),_vm._v(\" \"),_c('md-list',{attrs:{\"slot\":\"md-expand\"},slot:\"md-expand\"},[_c('md-list-item',{staticClass:\"md-primary menu-button\"},[_c('md-switch',{attrs:{\"name\":\"use LUT\"},on:{\"change\":function($event){_vm.updateCanvas()}},model:{value:(_vm.use_lut),callback:function ($$v) {_vm.use_lut=$$v},expression:\"use_lut\"}},[_c('span',{staticClass:\"md-list-item-text\"},[_vm._v(\"Apply LUT\")])])],1),_vm._v(\" \"),_c('md-list-item',[_c('md-field',[_c('label',{attrs:{\"for\":\"pixel_size\"}},[_vm._v(\"Pixel Size (nm)\")]),_vm._v(\" \"),_c('md-input',{attrs:{\"type\":\"text\",\"name\":\"pixel_size\"},nativeOn:{\"keyup\":function($event){if(!('button' in $event)&&_vm._k($event.keyCode,\"enter\",13,$event.key)){ return null; }_vm.plotHist()}},model:{value:(_vm.pixel_size),callback:function ($$v) {_vm.pixel_size=$$v},expression:\"pixel_size\"}})],1),_vm._v(\" \"),_c('md-field',[_c('label',{attrs:{\"for\":\"offset_mode\"}},[_vm._v(\"Offset Mode\")]),_vm._v(\" \"),_c('md-select',{attrs:{\"name\":\"offset-mode\"},on:{\"md-closed\":function($event){_vm.options && _vm.options.tableDict && _vm.plotHist()}},model:{value:(_vm.offset_mode),callback:function ($$v) {_vm.offset_mode=$$v},expression:\"offset_mode\"}},[_c('md-option',{attrs:{\"value\":\"min-max\"}},[_vm._v(\"min-max\")]),_vm._v(\" \"),_c('md-option',{attrs:{\"value\":\"zero-max\"}},[_vm._v(\"zero-max\")])],1)],1)],1),_vm._v(\" \"),(_vm.tags)?_c('md-list-item',[_c('md-chips',{attrs:{\"md-limit\":20,\"md-placeholder\":\"Type a tag and press enter...\"},scopedSlots:_vm._u([{key:\"md-chip\",fn:function(ref){\nvar chip = ref.chip;\nreturn [_vm._v(\"\\n                        \"+_vm._s(chip)+\"\\n                        \")]}}]),model:{value:(_vm.tags),callback:function ($$v) {_vm.tags=$$v},expression:\"tags\"}},[_c('div',{staticClass:\"md-helper-text\"},[_vm._v(\"please use tags to label this sample. E.g.: microtubule, hela, AF647\")])])],1):_vm._e(),_vm._v(\" \"),_c('md-list-item',{staticClass:\"md-primary menu-button\",on:{\"click\":function($event){_vm.showInfoDialog=true}}},[_c('md-icon',[_vm._v(\"info\")]),_c('span',{staticClass:\"md-list-item-text\"},[_vm._v(\"Info\")]),_vm._v(\" \"),_c('md-tooltip',[_vm._v(\"show info\")])],1),_vm._v(\" \"),_c('md-list-item',{staticClass:\"md-primary menu-button\",on:{\"click\":_vm.downloadSmlmFile}},[_c('md-icon',[_vm._v(\"file_download\")]),_c('span',{staticClass:\"md-list-item-text\"},[_vm._v(\"Export\")]),_vm._v(\" \"),(_vm.smlm&&_vm.smlm.isSMLM)?_c('md-tooltip',[_vm._v(\"save as .smlm file\")]):_c('md-tooltip',[_vm._v(\"save as a compressed zip file\")])],1),_vm._v(\" \"),_c('md-list-item',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.export_histogram_png),expression:\"export_histogram_png\"}],staticClass:\"md-primary menu-button\",on:{\"click\":function($event){_vm.download_image(_vm.export_histogram_png, 'exported_input.png')}}},[_c('md-icon',[_vm._v(\"save\")]),_c('span',{staticClass:\"md-list-item-text\"},[_vm._v(\"Save image\")]),_vm._v(\" \"),_c('md-tooltip',[_vm._v(\"download and save current image\")])],1)],1)],1),_vm._v(\" \"),_c('md-app-content',[((_vm.rendered||_vm.rendering) && _vm.options && _vm.options.tableDict)?_c('md-progress-bar',{attrs:{\"md-value\":_vm.rendering_progress}}):_vm._e(),_vm._v(\" \"),(_vm.options)?_c('div',{staticClass:\"canvas-container\"},[((_vm.rendered||_vm.rendering) && _vm.options && _vm.options.tableDict)?_c('div',{staticClass:\"md-layout render-info\"},[_c('span',[_vm._v(_vm._s(_vm.rendering_status)+\" \"+_vm._s(_vm.rendering_progress>0?_vm.rendering_progress+'%':'')+\" \")]),_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.use_3d),expression:\"use_3d\"}],staticClass:\"render-info\"},[_vm._v(\"   fps:\"+_vm._s(_vm.fps)+\", ppf:\"+_vm._s(_vm.ppf)+\" \")])]):_vm._e(),_vm._v(\" \"),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.rendered && !_vm.use_3d),expression:\"rendered && !use_3d\"}],attrs:{\"id\":\"leaflet_histogram\"}}),_vm._v(\" \"),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.use_3d),expression:\"use_3d\"}],attrs:{\"id\":\"gui-webgl\"}}),_vm._v(\" \"),_c('canvas',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.use_3d),expression:\"use_3d\"}],attrs:{\"id\":\"histogram_canvas_3d\"}})]):_vm._e(),_vm._v(\" \"),(!_vm.options&&!_vm.shared_url_mode)?_c('md-empty-state',{attrs:{\"flex\":\"\",\"md-icon\":\"hourglass_empty\",\"md-label\":\"Open a localization table\",\"md-description\":\"Render your table in the browser, process and share it with our server.\"}},[(_vm.running)?_c('div',[_c('md-progress-bar',{directives:[{name:\"show\",rawName:\"v-show\",value:(!(_vm.running_progress && _vm.running_progress>0)),expression:\"!(running_progress && running_progress>0)\"}],attrs:{\"md-mode\":\"indeterminate\"}}),_vm._v(\" \"),_c('md-progress-bar',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.running_progress && _vm.running_progress>0),expression:\"running_progress && running_progress>0\"}],attrs:{\"md-value\":_vm.running_progress}}),_vm._v(\" \"),_c('p',[_vm._v(_vm._s(_vm.running_status)+\" \"+_vm._s(_vm.running_status.length<30? ', please wait...': '')+\" \")])],1):_vm._e(),_vm._v(\" \"),_c('md-button',{staticClass:\"md-primary md-raised\",attrs:{\"disabled\":_vm.running},on:{\"click\":function($event){_vm.selectFile(false)}}},[_c('md-icon',[_vm._v(\"add\")]),_vm._v(\"Open a file\\n                \")],1),_vm._v(\" \"),_c('md-button',{staticClass:\"md-primary\",attrs:{\"id\":\"repository-button\",\"disabled\":_vm.running,\"to\":\"/repository\"}},[_vm._v(\"\\n                  No data? checkout the repository for public data.\\n                \")]),_vm._v(\" \"),_c('br'),_vm._v(\" \"),_c('md-card',{staticClass:\"faq-card\"},[_c('md-card-content',[_c('h2',[_vm._v(\"FAQ\")]),_vm._v(\" \"),_c('h3',[_vm._v(\"What are the supported file formats?\")]),_vm._v(\" \"),_c('p',[_vm._v(\"Currently, you can load files with the following formats: \"),_c('a',{attrs:{\"href\":\"https://github.com/imodpasteur/smlm-file-format\",\"target\":\"_blank\"}},[_vm._v(\"SMLM(.smlm)\")]),_vm._v(\", ThunderSTORM(.csv/.xls), RapidSTROM, ZEISS(ELYRA), Nikon NSTORM(txt), .png, .jpg.\")]),_vm._v(\" \"),_c('p',[_vm._v(\" If you have other file format which is not supported yet, please \"),_c('a',{attrs:{\"href\":\"https://www.dropbox.com/request/IyZ7HkzHUpB0t5Mkp46l\",\"target\":\"_blank\"}},[_vm._v(\"upload a sample file\")]),_vm._v(\", and \"),_c('a',{attrs:{\"href\":\"https://oeway.typeform.com/to/rdkPmd\",\"target\":\"_blank\"}},[_vm._v(\"send us a message\")]),_vm._v(\" to describe your file format, we will try to support your file format. \")]),_vm._v(\" \"),_c('h3',[_vm._v(\"where does my data go?\")]),_vm._v(\" \"),_c('p',[_vm._v(\"Don't worry, your data will stay in your browser, and will not go to our server unless you use the sharing feature of ShareLoc.xyz.\\n                    If you share data privately with our server, by default, no one else could access it, and we won't use it for other purposes without your permission.\")]),_vm._v(\" \"),_c('md-button',{staticClass:\"md-primary\",attrs:{\"to\":\"/faq\"}},[_vm._v(\"read more\")])],1)],1)],1):_vm._e(),_vm._v(\" \"),(!_vm.options&&_vm.shared_url_mode)?_c('md-empty-state',{attrs:{\"flex\":\"\",\"md-icon\":\"hourglass_empty\",\"md-label\":\"Loading sample...\",\"md-description\":\"Please wait, this may take a while...\"}},[(_vm.running)?_c('div',[_c('md-progress-bar',{attrs:{\"md-value\":_vm.running_progress}}),_vm._v(\" \"),_c('p',[_vm._v(_vm._s(_vm.running_status)+\" \"+_vm._s(_vm.running_status.length<30? ', please wait...': '')+\" \")])],1):_vm._e(),_vm._v(\" \"),(_vm.loading_shared_url)?_c('div',[_c('md-progress-spinner',{attrs:{\"md-diameter\":100,\"md-stroke\":10,\"md-mode\":\"indeterminate\"}})],1):_vm._e()]):_vm._e()],1)],1),_vm._v(\" \"),_c('md-dialog-alert',{attrs:{\"md-active\":_vm.showErrorDialog,\"md-content\":_vm.error_content,\"md-confirm-text\":\"OK\",\"md-click-outside-to-close\":false},on:{\"update:mdActive\":function($event){_vm.showErrorDialog=$event}}}),_vm._v(\" \"),_c('md-dialog',{attrs:{\"md-active\":_vm.showUploading,\"md-click-outside-to-close\":false},on:{\"update:mdActive\":function($event){_vm.showUploading=$event}}},[_c('md-dialog-content',[_c('div',{attrs:{\"layout\":\"row\"}},[_c('p',[_vm._v(_vm._s(_vm.running_status)+\" \"+_vm._s(_vm.running_status.length<30? ', please wait, this may take a while.': '')+\" \")]),_vm._v(\" \"),_c('md-progress-bar',{directives:[{name:\"show\",rawName:\"v-show\",value:(!(_vm.running_progress && _vm.running_progress>0)),expression:\"!(running_progress && running_progress>0)\"}],attrs:{\"md-mode\":\"indeterminate\"}}),_vm._v(\" \"),_c('md-progress-bar',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.running_progress && _vm.running_progress>0),expression:\"running_progress && running_progress>0\"}],attrs:{\"md-value\":_vm.running_progress}}),_vm._v(\" \"),_c('br')],1)]),_vm._v(\" \"),_c('md-dialog-actions',[_c('md-button',{staticClass:\"md-primary\",on:{\"click\":function($event){_vm.showUploading=false}}},[_vm._v(\"Close\")])],1)],1),_vm._v(\" \"),_c('md-dialog',{attrs:{\"md-active\":_vm.showImportDialog,\"md-click-outside-to-close\":false},on:{\"update:mdActive\":function($event){_vm.showImportDialog=$event}}},[_c('md-dialog-content',[_c('div',{staticClass:\"md-layout-row md-gutter\"},[_c('div',{staticClass:\"md-flex\"},[(_vm.selected_file)?_c('md-field',[_c('label',{attrs:{\"for\":\"file-format\"}},[_vm._v(\"File Format\")]),_vm._v(\" \"),_c('md-select',{attrs:{\"name\":\"file-format\",\"id\":\"file-format\"},model:{value:(_vm.text_file_format),callback:function ($$v) {_vm.text_file_format=$$v},expression:\"text_file_format\"}},_vm._l((_vm.supported_file_formats),function(format,key){return (_vm.selected_file_name.endsWith(format.extension) || _vm.selected_file_name.indexOf('.')==-1)?_c('md-option',{key:key,attrs:{\"value\":key}},[_vm._v(_vm._s(key))]):_vm._e()}))],1):_vm._e(),_vm._v(\" \"),_c('md-field',[_c('label',{attrs:{\"for\":\"pixel_size\"}},[_vm._v(\"Pixel Size (nm)\")]),_vm._v(\" \"),_c('md-input',{attrs:{\"type\":\"text\",\"name\":\"pixel_size\"},model:{value:(_vm.pixel_size),callback:function ($$v) {_vm.pixel_size=$$v},expression:\"pixel_size\"}})],1),_vm._v(\" \"),_c('div',{staticClass:\"md-flex\"},[_c('label',[_vm._v(\"Tags for this channel/file\")]),_vm._v(\" \"),_c('md-chips',{attrs:{\"md-limit\":20,\"md-placeholder\":\"Type a file tag and press enter...\"},scopedSlots:_vm._u([{key:\"md-chip\",fn:function(ref){\nvar chip = ref.chip;\nreturn [_vm._v(\"\\n                    \"+_vm._s(chip)+\"\\n                    \")]}}]),model:{value:(_vm.tags),callback:function ($$v) {_vm.tags=$$v},expression:\"tags\"}},[_c('div',{staticClass:\"md-helper-text\"},[_vm._v(\"e.g. SR for SuperRes image, WF for widefield\")])])],1),_vm._v(\" \"),(this.smlm)?_c('md-switch',{attrs:{\"name\":\"append\"},model:{value:(_vm.append_mode),callback:function ($$v) {_vm.append_mode=$$v},expression:\"append_mode\"}},[_vm._v(\"Append to the current file\")]):_vm._e(),_vm._v(\" \"),_c('md-switch',{attrs:{\"name\":\"more_options\"},model:{value:(_vm.show_more_import_options),callback:function ($$v) {_vm.show_more_import_options=$$v},expression:\"show_more_import_options\"}},[_vm._v(\"more options\")]),_vm._v(\" \"),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.show_more_import_options),expression:\"show_more_import_options\"}]},[_c('label',[_vm._v(\"File content:\")]),_vm._v(\" \"),_vm._l((_vm.file_sample_lines),function(line,i){return _c('p',{key:i},[_vm._v(\" \"+_vm._s(line)+\" \")])}),_vm._v(\" \"),_c('p',[_vm._v(\"...\")]),_vm._v(\" \"),_c('md-field',[_c('label',{attrs:{\"for\":\"offset_mode\"}},[_vm._v(\" Offset Mode\")]),_vm._v(\" \"),_c('md-select',{attrs:{\"name\":\"offset-mode\"},model:{value:(_vm.offset_mode),callback:function ($$v) {_vm.offset_mode=$$v},expression:\"offset_mode\"}},[_c('md-option',{attrs:{\"value\":\"min-max\"}},[_vm._v(\"min-max\")]),_vm._v(\" \"),_c('md-option',{attrs:{\"value\":\"zero-max\"}},[_vm._v(\"zero-max\")])],1)],1),_vm._v(\" \"),_c('md-field',[_c('label',{attrs:{\"for\":\"offset_x\"}},[_vm._v(\"Offset(x)\")]),_vm._v(\" \"),_c('md-input',{attrs:{\"type\":\"text\",\"name\":\"offset_x\"},model:{value:(_vm.offset_x),callback:function ($$v) {_vm.offset_x=$$v},expression:\"offset_x\"}})],1),_vm._v(\" \"),_c('md-field',[_c('label',{attrs:{\"for\":\"offset_y\"}},[_vm._v(\"Offset(y)\")]),_vm._v(\" \"),_c('md-input',{attrs:{\"type\":\"text\",\"name\":\"offset_y\"},model:{value:(_vm.offset_y),callback:function ($$v) {_vm.offset_y=$$v},expression:\"offset_y\"}})],1)],2)],1)])]),_vm._v(\" \"),_c('md-dialog-actions',[_c('md-button',{staticClass:\"md-primary\",on:{\"click\":function($event){_vm.loadFile(); _vm.showImportDialog=false}}},[_vm._v(\"OK\")]),_vm._v(\" \"),_c('md-button',{staticClass:\"md-primary\",on:{\"click\":function($event){_vm.showImportDialog=false}}},[_vm._v(\"Cancel\")])],1)],1),_vm._v(\" \"),_c('md-dialog',{attrs:{\"md-active\":_vm.showInfoDialog},on:{\"update:mdActive\":function($event){_vm.showInfoDialog=$event}}},[_c('md-dialog-content',[_c('div',{staticClass:\"md-layout-row md-gutter\"},[_c('div',{staticClass:\"md-flex\"},[_c('label',[_vm._v(\"Tags\")]),_vm._v(\" \"),_c('md-chips',{attrs:{\"md-limit\":20,\"md-placeholder\":\"Type a tag and press enter...\"},scopedSlots:_vm._u([{key:\"md-chip\",fn:function(ref){\nvar chip = ref.chip;\nreturn [_vm._v(\"\\n                    \"+_vm._s(chip)+\"\\n                    \")]}}]),model:{value:(_vm.tags),callback:function ($$v) {_vm.tags=$$v},expression:\"tags\"}},[_c('div',{staticClass:\"md-helper-text\"},[_vm._v(\"Please use tags to describe your sample\")])])],1)])]),_vm._v(\" \"),_c('md-dialog-actions',[_c('md-button',{staticClass:\"md-primary\",on:{\"click\":function($event){_vm.showInfoDialog=false}}},[_vm._v(\"OK\")]),_vm._v(\" \"),_c('md-button',{staticClass:\"md-primary\",on:{\"click\":function($event){_vm.showInfoDialog=false}}},[_vm._v(\"Cancel\")])],1)],1),_vm._v(\" \"),_c('md-dialog',{attrs:{\"md-active\":_vm.showProcessDialog},on:{\"update:mdActive\":function($event){_vm.showProcessDialog=$event}}},[_c('md-toolbar',{staticClass:\"md-transparent md-dense\",attrs:{\"md-elevation\":\"0\"}},[_c('div',{staticClass:\"md-toolbar-row\",attrs:{\"flex\":\"\"}},[_c('div',{staticClass:\"md-toolbar-section-start\"},[_c('h2',[_vm._v(\"Processing with A-net\")])])])]),_vm._v(\" \"),_c('md-dialog-content',[_c('label',[_vm._v(\"Step 1: Select an shareLoc.xyz model:\")]),_vm._v(\" \"),_c('md-field',[_c('md-select',{attrs:{\"name\":\"worker\"},on:{\"md-selected\":_vm.workerSelected},model:{value:(_vm.selected_worker_uri),callback:function ($$v) {_vm.selected_worker_uri=$$v},expression:\"selected_worker_uri\"}},_vm._l((_vm.worker_list),function(worker){return _c('md-option',{key:worker._id.$oid,attrs:{\"value\":worker.uri}},[_vm._v(_vm._s(worker.uri))])}))],1),_vm._v(\" \"),(_vm.selected_worker&&_vm.selected_worker.tags)?_c('div',[(_vm.selected_worker.description)?_c('p',[_vm._v(_vm._s(_vm.selected_worker.description))]):_vm._e(),_vm._v(\" \"),_c('label',[_vm._v(\"In order to use this model, your sample must contain the following tag(s):\")]),_vm._v(\" \"),_c('div',{staticClass:\"md-layout-row md-gutter\"},[_vm._l((_vm.selected_worker.tags),function(tag){return _c('md-chip',{key:tag,attrs:{\"disabled\":_vm.anet_running,\"md-static\":\"\",\"md-clickable\":\"\"},on:{\"click\":function($event){_vm.tags.indexOf(tag)<0?_vm.tags.push(tag):null}}},[_vm._v(\"\\n                 \"+_vm._s(tag)+\"\\n               \")])}),_vm._v(\" \"),_c('div',{staticClass:\"md-helper-text\"},[_vm._v(\"You can click the above tag(s) to tag the sample.\")])],2)]):_vm._e(),_vm._v(\" \"),_c('br'),_vm._v(\" \"),_c('div',{staticClass:\"md-flex\"},[_c('label',[_vm._v(\"Step 2: tag your sample\")]),_vm._v(\" \"),_c('md-chips',{attrs:{\"disabled\":_vm.anet_running,\"md-limit\":20,\"md-placeholder\":\"Type a tag and press enter...\"},scopedSlots:_vm._u([{key:\"md-chip\",fn:function(ref){\nvar chip = ref.chip;\nreturn [_vm._v(\"\\n                    \"+_vm._s(chip)+\"\\n                    \")]}}]),model:{value:(_vm.tags),callback:function ($$v) {_vm.tags=$$v},expression:\"tags\"}},[_c('div',{staticClass:\"md-helper-text\"},[_vm._v(\"Please make sure these tags describe your sample accurately.\")])])],1),_vm._v(\" \"),_c('br'),_vm._v(\" \"),_c('p',[_vm._v(\"Warning: If the tags you provided do not match the actual content of your image, ** please do not trust the result **.\")]),_vm._v(\" \"),(this.widefield_available && this.selected_worker_uri && this.selected_worker_uri.indexOf('_wf')!== -1)?_c('md-switch',{attrs:{\"name\":\"include_widefield\"},model:{value:(_vm.use_widefield),callback:function ($$v) {_vm.use_widefield=$$v},expression:\"use_widefield\"}},[_vm._v(\"Include widefield\")]):_vm._e(),_vm._v(\" \"),_c('br'),_vm._v(\" \"),_c('p',[_vm._v(\"Currently, we only provide limited types of model trained with microtubules and mitochondria. In order to support more, please consider contributing your data through \\\"project one-for-all\\\".\")]),_vm._v(\" \"),_c('md-button',{staticClass:\"md-primary\",attrs:{\"disabled\":_vm.loading_worker_list || _vm.anet_running},on:{\"click\":function($event){_vm.sendForTraining()}}},[_c('md-icon',[_vm._v(\"send\")]),_vm._v(\"Send for Training\")],1),_vm._v(\" \"),_c('md-button',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.show140),expression:\"!show140\"}],staticClass:\"md-primary\",on:{\"click\":function($event){_vm.show140=true}}},[_vm._v(\"About project one-for-all\")]),_vm._v(\" \"),_c('br'),_vm._v(\" \"),(_vm.worker_validation_msg)?_c('p',[_vm._v(_vm._s(_vm.worker_validation_msg))]):_vm._e(),_vm._v(\" \"),(_vm.anet_running)?_c('div',{staticClass:\"md-layout-row md-gutter\"},[_c('div',{staticClass:\"md-flex\"},[_c('md-progress-spinner',{attrs:{\"md-diameter\":100,\"md-stroke\":10,\"md-mode\":\"indeterminate\"}})],1)]):_vm._e()],1),_vm._v(\" \"),_c('md-dialog-actions',[_c('md-button',{staticClass:\"md-primary md-raised\",attrs:{\"disabled\":_vm.loading_worker_list || _vm.anet_running},on:{\"click\":function($event){_vm.runAnetProcess()}}},[_c('md-icon',[_vm._v(\"play_arrow\")]),_vm._v(\"Process\")],1),_vm._v(\" \"),_c('md-button',{staticClass:\"md-primary\",on:{\"click\":function($event){_vm.showProcessDialog=false}}},[_vm._v(\"Cancel\")])],1)],1),_vm._v(\" \"),_c('md-dialog',{attrs:{\"md-active\":_vm.show140},on:{\"update:mdActive\":function($event){_vm.show140=$event}}},[_c('md-toolbar',{staticClass:\"md-transparent md-dense\",attrs:{\"md-elevation\":\"0\"}},[_c('div',{staticClass:\"md-toolbar-row\",attrs:{\"flex\":\"\"}},[_c('div',{staticClass:\"md-toolbar-section-start\"},[_c('h2',[_vm._v(\"Please support project one-for-all -- one model for all\")])])])]),_vm._v(\" \"),_c('md-dialog-content',[_c('p',[_vm._v(\"As you may know that better results can be achieved if neural networks was trained on data with the same or similar type of data. Typically we need to train a dedicated model for each type of data or structure.\")]),_vm._v(\" \"),_c('p',[_vm._v(\"However, this type of model will not scale, because we will end up with a huge collection of pretrained model files, consuming lots of resources and time to train but can not be used except for data looks similar. Plus, it will pose lots of challenges to the infrastructure to store, manage these models.\")]),_vm._v(\" \"),_c('p',[_vm._v(\"To address this issue, we are initiating a project aiming for train a single neural network model for all types of biological structure, all types of labeling technique. \")]),_vm._v(\" \"),_c('p',[_vm._v(\"The main idea is to train a single neural network incrementally with more and more data.\")]),_vm._v(\" \"),_c('p',[_vm._v(\"It a hard task because when a single network sees different type of data, it will get confused between different types thus compromise the quality.\")]),_vm._v(\" \"),_c('p',[_vm._v(\"The switch mechanism shown in our paper provides a way to allow the network to adjust itself to different type of data. While we have shown it works to train a single network for 2~3 types of data, we would like to scale the experiment to tens or even hundreds types.\")]),_vm._v(\" \"),_c('p',[_vm._v(\"We will train the network 24x7, and it will be continuously improved as the amount of data grows. Snapshots of the trained model will be freely available for everyone.\")]),_vm._v(\" \"),_c('p',[_vm._v(\"We name it \\\"project one-for-all\\\" or \\\"project 140\\\".\")]),_vm._v(\" \"),_c('p',[_vm._v(\"The following components will be available for everyone as the project goes:\")]),_vm._v(\" \"),_c('p',[_vm._v(\"- an open database for hosting localization microscopy data, accessible through \"),_c('a',{attrs:{\"href\":\"#/repository\",\"target\":\"_blank\"}},[_vm._v(\"the repository\")]),_vm._v(\".\")]),_vm._v(\" \"),_c('p',[_vm._v(\"- a portable smlm file format for saving large localization data, multi-channel, multi-FOV scanning, or even raw images.\")]),_vm._v(\" \"),_c('p',[_vm._v(\"- pre-trained models for all types of structure, microscopy etc. \")]),_vm._v(\" \"),_c('br'),_vm._v(\" \"),_c('p',[_vm._v(\"To support our mission, please donate your data to the project by clicking \\\"Send for Training\\\".\")])]),_vm._v(\" \"),_c('md-dialog-actions',[_c('md-button',{staticClass:\"md-primary md-raised\",on:{\"click\":function($event){_vm.show140=false}}},[_vm._v(\"OK\")])],1)],1),_vm._v(\" \"),(_vm.smlm)?_c('md-dialog',{attrs:{\"md-active\":_vm.showShareDialog},on:{\"update:mdActive\":function($event){_vm.showShareDialog=$event}}},[_c('md-dialog-content',[_c('div',{staticClass:\"md-layout-row md-gutter\"},[_c('div',{staticClass:\"md-flex\"},[_c('md-toolbar',{staticClass:\"md-transparent md-dense\",attrs:{\"md-elevation\":\"0\"}},[_c('div',{staticClass:\"md-toolbar-row\",attrs:{\"flex\":\"\"}},[_c('div',{staticClass:\"md-toolbar-section-start\"},[_c('h2',[_vm._v(\"Share your sample\")])])])]),_vm._v(\" \"),(_vm.smlm)?_c('form',[_c('md-field',[_c('label',[_vm._v(\"Name\")]),_vm._v(\" \"),_c('md-input',{attrs:{\"type\":\"text\"},model:{value:(_vm.smlm.manifest.name),callback:function ($$v) {_vm.$set(_vm.smlm.manifest, \"name\", $$v)},expression:\"smlm.manifest.name\"}})],1),_vm._v(\" \"),_c('md-field',[_c('label',[_vm._v(\"Description\")]),_vm._v(\" \"),_c('md-input',{attrs:{\"type\":\"text\"},model:{value:(_vm.smlm.manifest.description),callback:function ($$v) {_vm.$set(_vm.smlm.manifest, \"description\", $$v)},expression:\"smlm.manifest.description\"}})],1),_vm._v(\" \"),_c('label',[_vm._v(\"Tags\")]),_vm._v(\" \"),_c('md-chips',{attrs:{\"md-limit\":20,\"md-placeholder\":\"type a tag and press enter...\"},scopedSlots:_vm._u([{key:\"md-chip\",fn:function(ref){\nvar chip = ref.chip;\nreturn [_vm._v(\"\\n                    \"+_vm._s(chip)+\"\\n                    \")]}}]),model:{value:(_vm.smlm.manifest.tags),callback:function ($$v) {_vm.$set(_vm.smlm.manifest, \"tags\", $$v)},expression:\"smlm.manifest.tags\"}},[_c('div',{staticClass:\"md-helper-text\"},[_vm._v(\"Please use tags to describe the structure, labeled protein, the dye etc.\")])]),_vm._v(\" \"),_c('md-switch',{attrs:{\"name\":\"get_shared_link\"},model:{value:(_vm.get_shared_link),callback:function ($$v) {_vm.get_shared_link=$$v},expression:\"get_shared_link\"}},[_vm._v(\"Get a private shared link\")]),_vm._v(\" \"),_c('md-switch',{attrs:{\"name\":\"make_public\"},model:{value:(_vm.make_public),callback:function ($$v) {_vm.make_public=$$v},expression:\"make_public\"}},[_vm._v(\"Publish to the Repository\")]),_vm._v(\" \"),_c('p',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.make_public),expression:\"make_public\"}]},[_vm._v(\"A permanent public url will be generated for your data, and posted on the website. You won't be able to remove the url or the data, but you can tag it as 'deprecated'.\")]),_vm._v(\" \"),(_vm.make_public)?_c('md-autocomplete',{attrs:{\"md-options\":_vm.licenses,\"md-dense\":\"\"},model:{value:(_vm.smlm.manifest.license),callback:function ($$v) {_vm.$set(_vm.smlm.manifest, \"license\", $$v)},expression:\"smlm.manifest.license\"}},[_c('label',[_vm._v(\"License\")])]):_vm._e(),_vm._v(\" \"),(_vm.make_public)?_c('p',[_vm._v(\"To promote an open community, if no license specified, you data will be automatically licensed under a \"),_c('a',{attrs:{\"href\":\"https://creativecommons.org/licenses/by/4.0/\",\"target\":\"_blank\"}},[_vm._v(\"Creative Commons Attribution 4.0 International license.\")])]):_vm._e(),_vm._v(\" \"),(_vm.make_public)?_c('md-field',[_c('label',[_vm._v(\"How to cite?\")]),_vm._v(\" \"),_c('md-input',{attrs:{\"type\":\"text\"},model:{value:(_vm.smlm.manifest.citeAs),callback:function ($$v) {_vm.$set(_vm.smlm.manifest, \"citeAs\", $$v)},expression:\"smlm.manifest.citeAs\"}})],1):_vm._e()],1):_vm._e(),_vm._v(\" \"),_c('div',{staticClass:\"md-layout md-alignment-center-center\"},[_c('img',{staticClass:\"thumbnail-img\",attrs:{\"src\":_vm.smlm.manifest.thumbnail,\"alt\":_vm.smlm.manifest.name}})])],1)])]),_vm._v(\" \"),_c('md-dialog-actions',[(_vm.store.authrole=='admin')?_c('md-button',{staticClass:\"md-primary\",on:{\"click\":function($event){_vm.shareSample(true, true); _vm.showShareDialog=false}}},[_vm._v(\"Force Upload\")]):_vm._e(),_vm._v(\" \"),_c('md-button',{staticClass:\"md-primary\",on:{\"click\":function($event){_vm.shareSample(true); _vm.showShareDialog=false}}},[_vm._v(\"OK\")]),_vm._v(\" \"),_c('md-button',{staticClass:\"md-primary\",on:{\"click\":function($event){_vm.showShareDialog=false}}},[_vm._v(\"Cancel\")])],1)],1):_vm._e(),_vm._v(\" \"),_c('md-dialog',{attrs:{\"md-active\":_vm.showFilesDialog},on:{\"update:mdActive\":function($event){_vm.showFilesDialog=$event}}},[_c('md-dialog-content',[_c('div',{staticClass:\"md-layout-row md-gutter\"},[_c('div',{staticClass:\"md-flex\"},[_c('md-button',{staticClass:\"md-primary \",on:{\"click\":function($event){_vm.showFilesDialog=false;_vm.selectFile(false)}}},[_c('md-icon',[_vm._v(\"add\")]),_vm._v(\" Load a new file\\n              \"),_c('md-tooltip',[_vm._v(\"Open a File\")])],1),_vm._v(\" \"),_c('md-button',{staticClass:\"md-primary\",on:{\"click\":function($event){_vm.showFilesDialog=false;_vm.selectFile(true)}}},[_c('md-icon',[_vm._v(\"add\")]),_vm._v(\"Append a file\\n                \"),_c('md-tooltip',[_vm._v(\"Add an image to the current smlm file\")])],1)],1)])]),_vm._v(\" \"),_c('md-dialog-actions',[_c('md-button',{staticClass:\"md-primary\",on:{\"click\":function($event){_vm.showFilesDialog=false}}},[_vm._v(\"OK\")])],1)],1),_vm._v(\" \"),_c('md-dialog',{attrs:{\"md-active\":_vm.showSharedLink},on:{\"update:mdActive\":function($event){_vm.showSharedLink=$event}}},[_c('md-dialog-content',[_c('div',{staticClass:\"md-layout-row md-gutter\"},[_c('div',{staticClass:\"md-flex\"},[_c('h1',[_vm._v(\"Please copy the following URL for sharing\")]),_vm._v(\" \"),_c('a',{attrs:{\"href\":_vm.shared_link,\"target\":\"_blank\"}},[_vm._v(_vm._s(_vm.shared_link))])])])]),_vm._v(\" \"),_c('md-dialog-actions',[_c('md-button',{staticClass:\"md-primary\",on:{\"click\":function($event){_vm.showSharedLink=false}}},[_vm._v(\"OK\")])],1)],1),_vm._v(\" \"),_c('md-snackbar',{staticClass:\"md-accent\",attrs:{\"md-position\":'center',\"md-active\":_vm.showSnackbar,\"md-duration\":_vm.snackbar_duration},on:{\"update:mdActive\":function($event){_vm.showSnackbar=$event}}},[_c('span',[_vm._v(_vm._s(_vm.snackbar_info))]),_vm._v(\" \"),_c('md-button',{staticClass:\"md-accent\",on:{\"click\":function($event){_vm.showSnackbar=false}}},[_vm._v(\"close\")])],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-3541b270\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/Viewer.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-3541b270\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Viewer.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Viewer.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Viewer.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-3541b270\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./Viewer.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-3541b270\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Viewer.vue\n// module id = null\n// module chunks = ","import Vue from 'vue'\nimport Router from 'vue-router'\nimport Viewer from '@/components/Viewer'\n\nVue.use(Router)\n\nexport default new Router({\n  base: window.location.pathName,\n  routes: [\n    {\n      path: '/',\n      name: 'Home',\n      component: Viewer\n    }\n  ]\n})\n\n\n\n// WEBPACK FOOTER //\n// ./src/router/index.js","<template>\n  <div class=\"faq\">\n    <!-- <md-subheader>Options</md-subheader> -->\n    <md-subheader>FREQUENTLY ASKED QUESTIONS</md-subheader>\n    <md-card>\n      <md-card-header>\n       </md-card-header>\n      <md-card-content>\n        <div v-html=\"compiledMarkdown\"></div>\n      </md-card-content>\n    </md-card>\n  </div>\n</template>\n\n<script>\nimport { source } from '../faq.md'\nimport marked from 'marked';\nexport default {\n  name: 'faq',\n  data () {\n    return {\n      source: source,\n      router: this.$root.$data.router,\n      store: this.$root.$data.store,\n      api: this.$root.$data.store.api\n    }\n  },\n  computed: {\n    compiledMarkdown: function () {\n      return marked(this.source, { sanitize: true })\n    }\n  },\n  mounted(){\n\n  },\n  methods: {\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/FAQ.vue","export const source = `\n\nTo be done...\n\n`\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/faq.md\n// module id = null\n// module chunks = ","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"faq\"},[_c('md-subheader',[_vm._v(\"FREQUENTLY ASKED QUESTIONS\")]),_vm._v(\" \"),_c('md-card',[_c('md-card-header'),_vm._v(\" \"),_c('md-card-content',[_c('div',{domProps:{\"innerHTML\":_vm._s(_vm.compiledMarkdown)}})])],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-62bff1b8\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/FAQ.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-62bff1b8\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./FAQ.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./FAQ.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./FAQ.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-62bff1b8\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./FAQ.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-62bff1b8\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/FAQ.vue\n// module id = null\n// module chunks = ","import Vue from 'vue';\nconst event_bus = new Vue();\n\nexport default {\n  debug: true,\n  wsuri: \"wss://dai.pasteur.fr/ws\",\n  signed_in: false,\n  event_bus: event_bus,\n  authid: \"\",\n  authrole: \"\",\n  uid: \"\",\n  api: {\n\n  },\n  session: null,\n  connection: null,\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/store.js","<template>\n    <router-view/>\n</template>\n<script>\nexport default {\n  name: 'app',\n  data () {\n    return {\n      store: this.$root.$data.store,\n      api: this.$root.$data.store.api\n    }\n  },\n  mounted(){\n    this.$nextTick(()=>{\n      const updateSize = (e)=>{\n        this.store.windowHeight = window.innerHeight\n        this.store.windowWidth = window.innerWidth\n        this.store.event_bus.$emit('resize', {height:this.store.windowHeight, width:this.store.windowWidth})\n      }\n      updateSize()\n      //window.addEventListener('resize', updateSize);\n      document.addEventListener(\"orientationchange\", window.onresize = updateSize);\n\n      this.store.event_bus.$on('connected', (authid)=>{\n        try {\n          ga('set', 'userId', authid);\n        } catch (e) {\n          console.error('google analytics error:', e)\n        }\n      })\n\n      this.api.ga_send = (path)=>{\n        try {\n          ga('send', 'pageview', path);\n          console.log('ga_send:', path)\n        } catch (e) {\n          console.error('google analytics error:', e)\n        }\n      }\n\n    })\n  },\n  methods: {\n  },\n  watch: {\n  \t'$route': (value) => {\n      // this.store.event_bus.$emit('route_changed', value)\n      try {\n        ga('send', 'pageview', value.path);\n        console.log('pageview:', value.path)\n      } catch (e) {\n        console.error('google analytics error:', e)\n      }\n    }\n  }\n}\n</script>\n\n<style>\n/* #app {\n  font-family: 'Avenir', Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 0px;\n} */\nhtml, body\n{\n    height: 100%;\n    overflow-y: auto; /* has to be scroll, not auto */\n    overflow-x: hidden;\n    -webkit-overflow-scrolling: touch;\n    -webkit-transform: translate3d(0,0,0);\n}\n\n.md-content {\n  /* overflow-y: scroll;\n  overflow-x: hidden; */\n  padding: 1px;\n}\n\n@media screen and (max-width: 800px) {\n  .md-content {\n    padding: 4px;\n  }\n}\n\n.md-app {\n  height:100%;\n}\n\n/* .md-app-content{\n  height: 100%;\n} */\n.md-app-container{\n  width: 100%;\n  height: 100%;\n  overflow-x:hidden;\n}\n\n.md-menu-content{\n  z-index: 9999;\n}\n\n.table-head-checkbox{\n  margin-top: 5px;\n  width: 50px;\n}\n\n.md-subheader {\n  font-size: 22px;\n  font-weight: 300;\n}\n\n.md-input {\n  font-size: 16px !important;\n}\n\n.md-dialog-container {\n  overflow: auto !important;\n}\n\n.md-app.md-fixed .md-app-scroller{\n  z-index: 0 !important;\n}\n\n.md-app-scroller {\n    flex: 1;\n    max-height: calc( 100vh - 60px);\n}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/App.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('router-view')}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-181d9c3f\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/App.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-181d9c3f\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../node_modules/vue-loader/lib/selector?type=styles&index=0!./App.vue\")\n}\nvar normalizeComponent = require(\"!../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./App.vue\"\nimport __vue_script__ from \"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./App.vue\"\n/* template */\nimport __vue_template__ from \"!!../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-181d9c3f\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../node_modules/vue-loader/lib/selector?type=template&index=0!./App.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/App.vue\n// module id = null\n// module chunks = ","// The Vue build version to load with the `import` command\n// (runtime-only or standalone) has been set in webpack.base.conf with an alias.\nimport Vue from 'vue'\nimport router from './router'\nimport VueMaterial from 'vue-material'\nimport 'vue-material/dist/vue-material.min.css'\nimport 'vue-material/dist/theme/default.css' // This line here\n\nimport Viewer from '@/components/Viewer'\nimport FAQ from '@/components/FAQ'\nimport store from './store.js'\nimport App from './App'\nimport vueSlider from 'vue-slider-component'\n\nVue.config.productionTip = false\n\nVue.use(VueMaterial)\n\n// register\nVue.component('vue-slider', vueSlider)\nVue.component('viewer', Viewer)\nVue.component('faq', FAQ)\n\nconst truncate = function(text, length, clamp){\n    clamp = clamp || '...';\n    const node = document.createElement('div');\n    node.innerHTML = text;\n    const content = node.textContent;\n    return content.length > length ? content.slice(0, length) + clamp : content;\n};\n\nVue.filter('truncate', truncate);\n\n/* eslint-disable no-new */\nnew Vue({\n  el: '#app',\n  router,\n  data: {\n    store: store,\n    router: router\n  },\n  template: '<App/>',\n  components: {App}\n})\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.js"],"sourceRoot":""}